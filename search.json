[{"title":"1317. Convert Integer to the Sum of Two No-Zero Integers","url":"/interview/1317/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(4).jpeg\"></p>\n<p>Given an integer n. No-Zero integer is a positive integer which doesn’t contain any 0 in its decimal representation.</p>\n<p>Return a list of two integers [A, B] where:</p>\n<p>A and B are No-Zero integers.<br>A + B = n<br>It’s guarateed that there is at least one valid solution. If there are many valid solutions you can return any of them.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 2</span><br><span class=\"line\">Output: [1,1]</span><br><span class=\"line\">Explanation: A &#x3D; 1, B &#x3D; 1. A + B &#x3D; n and both A and B don&#39;t contain any 0 in their decimal representation.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 11</span><br><span class=\"line\">Output: [2,9]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 10000</span><br><span class=\"line\">Output: [1,9999]</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 69</span><br><span class=\"line\">Output: [1,68]</span><br></pre></td></tr></table></figure>\n\n<p>Example 5:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 1010</span><br><span class=\"line\">Output: [11,999]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>要把一個整數拆成2整數和，沒有限制怎麼拆(那不是拆1出來就好)直接跑也過了，但總覺得怪，在看其他人怎麼做之後選了比較好懂的做法，簡單來說就是找可以拆的數字，再格式化輸出，學到了格式化輸出。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n","categories":["面試"],"tags":["力扣"]},{"title":"1331. Rank Transform of an Array","url":"/interview/1331/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(11).jpeg\"></p>\n<p>Given an array of integers arr, replace each element with its rank.</p>\n<p>The rank represents how large the element is. The rank has the following rules:</p>\n<p>Rank is an integer starting from 1.<br>The larger the element, the larger the rank. If two elements are equal, their rank must be the same.<br>Rank should be as small as possible.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: arr &#x3D; [40,10,20,30]</span><br><span class=\"line\">Output: [4,1,2,3]</span><br><span class=\"line\">Explanation: 40 is the largest element. 10 is the smallest. 20 is the second smallest. 30 is the third smallest.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: arr &#x3D; [100,100,100]</span><br><span class=\"line\">Output: [1,1,1]</span><br><span class=\"line\">Explanation: Same elements share the same rank.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: arr &#x3D; [37,12,28,9,100,56,80,5,12]</span><br><span class=\"line\">Output: [5,3,4,2,8,6,7,1,3]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>這篇要求將數字從小到大排序，從1開始編號，再依原始順序給編號，相同就給相同編號，學到dict使用。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/1331-Rank-Transform-of-an-Array?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"136. Single Number","url":"/interview/136/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(19).jpeg\"></p>\n<p>Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.</p>\n<p>Follow up: Could you implement a solution with a linear runtime complexity and without using extra memory?</p>\n<p>Example 1:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [2,2,1]</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [4,1,2,1,2]</span><br><span class=\"line\">Output: 4</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [1]</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n\n<p>這題要找單獨數字，原本用回圈紀錄出現次數，但發現網友用XOR，真的很巧妙，趕快學起來。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/136-Single-Number?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"1470. Shuffle the Array Concatenation","url":"/interview/1470/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(13).jpeg\"></p>\n<p>Given the array nums consisting of 2n elements in the form [x1,x2,…,xn,y1,y2,…,yn].</p>\n<p>Return the array in the form [x1,y1,x2,y2,…,xn,yn].</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [2,5,1,3,4,7], n &#x3D; 3</span><br><span class=\"line\">Output: [2,3,5,4,1,7] </span><br><span class=\"line\">Explanation: Since x1&#x3D;2, x2&#x3D;5, x3&#x3D;1, y1&#x3D;3, y2&#x3D;4, y3&#x3D;7 then the answer is [2,3,5,4,1,7].</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [1,2,3,4,4,3,2,1], n &#x3D; 4</span><br><span class=\"line\">Output: [1,4,2,3,3,2,4,1]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [1,1,2,2], n &#x3D; 2</span><br><span class=\"line\">Output: [1,2,1,2]</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n\n<p>這篇要將指定位置之後的數值跟之前的數值穿插，很明顯會想到zip，學到itertools的用法</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/1470-Shuffle-the-Array?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"1480. Running Sum of 1d Array","url":"/interview/1480/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(7).jpeg\"></p>\n<p>Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]…nums[i]).</p>\n<p>Return the running sum of nums.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [1,2,3,4]</span><br><span class=\"line\">Output: [1,3,6,10]</span><br><span class=\"line\">Explanation: Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4].</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [1,1,1,1,1]</span><br><span class=\"line\">Output: [1,2,3,4,5]</span><br><span class=\"line\">Explanation: Running sum is obtained as follows: [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1].</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [3,1,2,10,1]</span><br><span class=\"line\">Output: [3,4,6,16,17]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>這篇要求array值某位值一直不斷加總前幾位的值，那就給個迴圈，尋訪過程不斷加前一位，學到迴圈用range(len())取得計數。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/1480-Running-Sum-of-1d-Array?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n","categories":["面試"],"tags":["力扣"]},{"title":"1560. Most Visited Sector in a Circular Track","url":"/interview/1560/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(8).jpeg\"></p>\n<p>Given an integer n and an integer array rounds. We have a circular track which consists of n sectors labeled from 1 to n. A marathon will be held on this track, the marathon consists of m rounds. The ith round starts at sector rounds[i - 1] and ends at sector rounds[i]. For example, round 1 starts at sector rounds[0] and ends at sector rounds[1]</p>\n<p>Return an array of the most visited sectors sorted in ascending order.</p>\n<p>Notice that you circulate the track in ascending order of sector numbers in the counter-clockwise direction (See the first example).</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 4, rounds &#x3D; [1,3,1,2]</span><br><span class=\"line\">Output: [1,2]</span><br><span class=\"line\">Explanation: The marathon starts at sector 1. The order of the visited sectors is as follows:</span><br><span class=\"line\">1 --&gt; 2 --&gt; 3 (end of round 1) --&gt; 4 --&gt; 1 (end of round 2) --&gt; 2 (end of round 3 and the marathon)</span><br><span class=\"line\">We can see that both sectors 1 and 2 are visited twice and they are the most visited sectors. Sectors 3 and 4 are visited only once.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 2, rounds &#x3D; [2,1,2,1,2,1,2,1,2]</span><br><span class=\"line\">Output: [2]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 7, rounds &#x3D; [1,3,5,7]</span><br><span class=\"line\">Output: [1,2,3,4,5,6,7]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>這篇我沒想出來，所以程式是外國網友的，題意是找跑幾圈後經過最多次的扇形區域，一圈分成四塊，一開始給幾個round(跑幾次)跟每次停留的區塊，解題思路是看起終點的扇形區域，起&gt;=終，起到終一定是多的，起&gt;終一定從1過一圈，再加上起點到過了幾圈，學到可以直接把range轉list。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/1560-Most-Visited-Sector-in-a-Circular-Track?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n","categories":["面試"],"tags":["力扣"]},{"title":"1640. Check Array Formation Through Concatenation","url":"/interview/1640/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(12).jpeg\"></p>\n<p>You are given an array of distinct integers arr and an array of integer arrays pieces, where the integers in pieces are distinct. Your goal is to form arr by concatenating the arrays in pieces in any order. However, you are not allowed to reorder the integers in each array pieces[i].</p>\n<p>Return true if it is possible to form the array arr from pieces. Otherwise, return false.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: arr &#x3D; [85], pieces &#x3D; [[85]]</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: arr &#x3D; [15,88], pieces &#x3D; [[88],[15]]</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: Concatenate [15] then [88]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: arr &#x3D; [49,18,16], pieces &#x3D; [[16,18,49]]</span><br><span class=\"line\">Output: false</span><br><span class=\"line\">Explanation: Even though the numbers match, we cannot reorder pieces[0].</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: arr &#x3D; [91,4,64,78], pieces &#x3D; [[78],[4,64],[91]]</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: Concatenate [91] then [4,64] then [78]</span><br></pre></td></tr></table></figure>\n\n<p>Example 5:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: arr &#x3D; [1,3,5,7], pieces &#x3D; [[2,4,6,8]]</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>這篇給一個陣列，如果陣列內元素移動可以得到跟輸入相同結果則回傳True，學到如何簡潔尋訪dict.</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/1640-Check-Array-Formation-Through-Concatenation?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"171. Excel Sheet Column Number","url":"/interview/171/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(2).jpeg\"></p>\n<p>Given a column title as appear in an Excel sheet, return its corresponding column number.</p>\n<p>For example:</p>\n<pre><code>A -&gt; 1\nB -&gt; 2\nC -&gt; 3\n...\nZ -&gt; 26\nAA -&gt; 27\nAB -&gt; 28 \n...</code></pre>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: &quot;A&quot;</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: &quot;AB&quot;</span><br><span class=\"line\">Output: 28</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: &quot;ZY&quot;</span><br><span class=\"line\">Output: 701 </span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>這題在說把英文字母照順序排列計數，因為只有大寫，這題用ord(輸入)-ord(‘A’)+1取得一個字的位數，再在下個字時再加一輪(26)，學到了字元用ord取得ascii數值。   </p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/171-Excel-Sheet-Column-Number?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n","categories":["面試"],"tags":["力扣"]},{"title":"217. Contains Duplicate","url":"/interview/217/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(9).jpeg\"></p>\n<p>Given an array of integers, find if the array contains any duplicates.  </p>\n<p>Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.  </p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [1,2,3,1]</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [1,2,3,4]</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [1,1,1,3,3,4,3,2,4,2]</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>直接比對加入集合前個數或加入看過集合比對都可以</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution(object):</span><br><span class=\"line\">    def containsDuplicate(self, nums):</span><br><span class=\"line\">        return len(nums) !&#x3D; len(set(nums))</span><br><span class=\"line\">        </span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def containsDuplicate(self, nums: List[int]) -&gt; bool:</span><br><span class=\"line\">        seen&#x3D; set()</span><br><span class=\"line\">        for n in nums:</span><br><span class=\"line\">            if n in seen:</span><br><span class=\"line\">                return True</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                seen.add(n)</span><br><span class=\"line\">        return False</span><br></pre></td></tr></table></figure>\n","categories":["面試"],"tags":["力扣"]},{"title":"344. Reverse String","url":"/interview/344/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(18).jpeg\"></p>\n<p>Write a function that reverses a string. The input string is given as an array of characters char[].</p>\n<p>Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.</p>\n<p>You may assume all the characters consist of printable ascii characters.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [&quot;h&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]</span><br><span class=\"line\">Output: [&quot;o&quot;,&quot;l&quot;,&quot;l&quot;,&quot;e&quot;,&quot;h&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [&quot;H&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;h&quot;]</span><br><span class=\"line\">Output: [&quot;h&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;H&quot;]</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n\n<p>好久沒看到這麼平易近人的題目了(淚)，就是反轉字串，感謝python又拯救了工程師的一天。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/344-Reverse-String?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n","categories":["面試"],"tags":["力扣"]},{"title":"412. Fizz Buzz","url":"/interview/412/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(20).jpeg\"></p>\n<p>Write a program that outputs the string representation of numbers from 1 to n.</p>\n<p>But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”.</p>\n<p>Example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">n &#x3D; 15,</span><br><span class=\"line\"></span><br><span class=\"line\">Return:</span><br><span class=\"line\">[</span><br><span class=\"line\">    &quot;1&quot;,</span><br><span class=\"line\">    &quot;2&quot;,</span><br><span class=\"line\">    &quot;Fizz&quot;,</span><br><span class=\"line\">    &quot;4&quot;,</span><br><span class=\"line\">    &quot;Buzz&quot;,</span><br><span class=\"line\">    &quot;Fizz&quot;,</span><br><span class=\"line\">    &quot;7&quot;,</span><br><span class=\"line\">    &quot;8&quot;,</span><br><span class=\"line\">    &quot;Fizz&quot;,</span><br><span class=\"line\">    &quot;Buzz&quot;,</span><br><span class=\"line\">    &quot;11&quot;,</span><br><span class=\"line\">    &quot;Fizz&quot;,</span><br><span class=\"line\">    &quot;13&quot;,</span><br><span class=\"line\">    &quot;14&quot;,</span><br><span class=\"line\">    &quot;FizzBuzz&quot;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n<p>這篇說3的倍數印Fizz，5的倍數印Buzz，15倍數印FizzBuzz，其他印出數字。  </p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/412-Fizz-Buzz?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\n","categories":["面試"],"tags":["力扣"]},{"title":"788. Rotated Digits","url":"/interview/788/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(9).jpeg\"></p>\n<p>X is a good number if after rotating each digit individually by 180 degrees, we get a valid number that is different from X.  Each digit must be rotated - we cannot choose to leave it alone.</p>\n<p>A number is valid if each digit remains a digit after rotation. 0, 1, and 8 rotate to themselves; 2 and 5 rotate to each other (on this case they are rotated in a different direction, in other words 2 or 5 gets mirrored); 6 and 9 rotate to each other, and the rest of the numbers do not rotate to any other number and become invalid.</p>\n<p>Now given a positive number N, how many numbers X from 1 to N are good?</p>\n<p>Example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: 10</span><br><span class=\"line\">Output: 4</span><br><span class=\"line\">Explanation: </span><br><span class=\"line\">There are four good numbers in the range [1, 10] : 2, 5, 6, 9.</span><br><span class=\"line\">Note that 1 and 10 are not good numbers, since they remain unchanged after rotating.</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>這篇再說給個數值，從1開始列會有幾個數值倒轉還會相同，他也給出2,5:6,9是倒轉相同的例子，那就把數值依序讀入，計算有範例的數值，學到要將數字依序讀入可以轉成字串。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/788-Rotated-Digits?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"929. Unique Email Addresses","url":"/interview/929/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(10).jpeg\"></p>\n<p>Every email consists of a local name and a domain name, separated by the @ sign.</p>\n<p>For example, in <a href=\"mailto:&#97;&#x6c;&#x69;&#99;&#101;&#64;&#108;&#101;&#x65;&#116;&#x63;&#x6f;&#x64;&#x65;&#x2e;&#x63;&#x6f;&#x6d;\">&#97;&#x6c;&#x69;&#99;&#101;&#64;&#108;&#101;&#x65;&#116;&#x63;&#x6f;&#x64;&#x65;&#x2e;&#x63;&#x6f;&#x6d;</a>, alice is the local name, and leetcode.com is the domain name.</p>\n<p>Besides lowercase letters, these emails may contain ‘.’s or ‘+’s.</p>\n<p>If you add periods (‘.’) between some characters in the local name part of an email address, mail sent there will be forwarded to the same address without dots in the local name.  For example, “<a href=\"mailto:&#97;&#x6c;&#105;&#99;&#101;&#46;&#122;&#x40;&#x6c;&#101;&#x65;&#116;&#x63;&#111;&#x64;&#101;&#46;&#x63;&#111;&#x6d;\">&#97;&#x6c;&#105;&#99;&#101;&#46;&#122;&#x40;&#x6c;&#101;&#x65;&#116;&#x63;&#111;&#x64;&#101;&#46;&#x63;&#111;&#x6d;</a>“ and “<a href=\"mailto:&#97;&#108;&#x69;&#x63;&#101;&#x7a;&#64;&#x6c;&#101;&#x65;&#x74;&#x63;&#111;&#x64;&#101;&#46;&#x63;&#x6f;&#x6d;\">&#97;&#108;&#x69;&#x63;&#101;&#x7a;&#64;&#x6c;&#101;&#x65;&#x74;&#x63;&#111;&#x64;&#101;&#46;&#x63;&#x6f;&#x6d;</a>“ forward to the same email address.  (Note that this rule does not apply for domain names.)</p>\n<p>If you add a plus (‘+’) in the local name, everything after the first plus sign will be ignored. This allows certain emails to be filtered, for example <a href=\"mailto:&#109;&#x2e;&#x79;&#43;&#110;&#97;&#109;&#101;&#x40;&#101;&#109;&#x61;&#105;&#108;&#46;&#99;&#111;&#109;\">&#109;&#x2e;&#x79;&#43;&#110;&#97;&#109;&#101;&#x40;&#101;&#109;&#x61;&#105;&#108;&#46;&#99;&#111;&#109;</a> will be forwarded to <a href=\"mailto:&#109;&#x79;&#64;&#x65;&#109;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;\">&#109;&#x79;&#64;&#x65;&#109;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;</a>.  (Again, this rule does not apply for domain names.)</p>\n<p>It is possible to use both of these rules at the same time.</p>\n<p>Given a list of emails, we send one email to each address in the list.  How many different addresses actually receive mails? </p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [&quot;test.email+alex@leetcode.com&quot;,&quot;test.e.mail+bob.cathy@leetcode.com&quot;,&quot;testemail+david@lee.tcode.com&quot;]</span><br><span class=\"line\">Output: 2</span><br><span class=\"line\">Explanation: &quot;testemail@leetcode.com&quot; and &quot;testemail@lee.tcode.com&quot; actually receive mails</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>這篇依照e-mail收件規則判斷有幾個不同信箱，規則是忽略. 跟刪去+之後的<br>，依照規則，學到字串操作。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/929-Unique-Email-Addresses?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n","categories":["面試"],"tags":["力扣"]},{"title":"Android小技巧","url":"/engineer/android/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/2020-10-01.jpeg\"></p>\n<h1 id=\"常駐APP\"><a href=\"#常駐APP\" class=\"headerlink\" title=\"常駐APP\"></a>常駐APP</h1><ul>\n<li>Pocket: 蒐集控利器  </li>\n<li>Shazam: 常聽到不錯的旋律又不知道歌名，用這個可以辨識  </li>\n<li>MixerBox: Shazam辨識完用這個記起來</li>\n<li>Drops: 學習語言必備</li>\n<li>Tandem: Drops邊學邊跟外國人聊天 </li>\n<li>Telegram: 聊天外用來當稍後閱讀工具，各平台都可以裝，互相分享資料很方便 </li>\n<li>水滴發票: 最好用的發票對獎APP</li>\n<li>AZ Screen Recorder: 螢幕錄影方便</li>\n<li>CX 檔案總管: 整理控必備  </li>\n<li>獎勵: 買遊戲(AppSales)或書(Google圖書)</li>\n<li>Google lens: 翻譯圖片中文字，遇到不知名的植物可以辨識    </li>\n<li>G Suite:日曆，新聞，郵件，地圖…</li>\n<li>IFTTT: 自動化神器，結合Google日曆控制鬧鐘開關    </li>\n</ul>\n<h2 id=\"Android-限免\"><a href=\"#Android-限免\" class=\"headerlink\" title=\"Android 限免\"></a>Android 限免</h2><ul>\n<li>想看書：myBook  </li>\n<li>想用其他APP: AppsFree  </li>\n<li>想學東西: Facebook Free Udemy 社團</li>\n</ul>\n<a id=\"more\"></a>\n\n<h1 id=\"情境：平時設定鬧鐘一週幾天固定時間會響，但有時候那幾天放假會被鬧鐘叫醒很困擾\"><a href=\"#情境：平時設定鬧鐘一週幾天固定時間會響，但有時候那幾天放假會被鬧鐘叫醒很困擾\" class=\"headerlink\" title=\"情境：平時設定鬧鐘一週幾天固定時間會響，但有時候那幾天放假會被鬧鐘叫醒很困擾\"></a>情境：平時設定鬧鐘一週幾天固定時間會響，但有時候那幾天放假會被鬧鐘叫醒很困擾</h1><p>1.Google日曆新增一個放假日曆<br>2.放假日曆輸入放假日期<br>3.ifttt連動日曆與手機設定，並開啟ifttt控制權限，當日曆有事件時開啟勿擾模式<br>4.勿擾模式設定不忽略鬧鐘<br>當有輸入那天放假ifttt就會開啟勿擾模式不會被吵起來了  </p>\n<h1 id=\"當完成以上步驟\"><a href=\"#當完成以上步驟\" class=\"headerlink\" title=\"當完成以上步驟\"></a>當完成以上步驟</h1><p>1.每週工作日固定時間叫我起床（鬧鐘<br>2.不過有放假的日子想睡到自然醒（ifttt+Google日曆+手機請勿打擾<br>3.ifttt啟動時間最好持續到自己打開（日曆選整天<br>4.連續假期就算自己關了還是不想隔天放假聽到鬧鐘（日曆event連續要照天斷  </p>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><p>日曆要選整天，而且要跨天要一天一天設定，不然關掉了隔天還是會被吵起來  </p>\n<h1 id=\"日常使用情境\"><a href=\"#日常使用情境\" class=\"headerlink\" title=\"日常使用情境\"></a>日常使用情境</h1><p>因為我常在Google鬧鐘響前就醒來，但不繼續睡又不甘心，一般會設定4個鬧鐘，前2個是週一到五週期性，間格10分鐘，除非當天公司宣布休假，我在Google日曆寫放假會自動靜音，否則我會先把前2個關掉，開啟後面2個非週期性，這2個是上班前deadline，不醒不行，所以最後一個我設定Google姐說今天Google日曆寫的注意事項跟天氣，還有說“不能再睡啦”</p>\n","categories":["工程"],"tags":["好用"]},{"title":"瀏覽器選擇","url":"/engineer/browsers/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/2020-10-02.jpeg\"></p>\n<h1 id=\"瀏覽器這麼多種，大家一定不知道要選哪個吧。\"><a href=\"#瀏覽器這麼多種，大家一定不知道要選哪個吧。\" class=\"headerlink\" title=\"瀏覽器這麼多種，大家一定不知道要選哪個吧。\"></a>瀏覽器這麼多種，大家一定不知道要選哪個吧。</h1><a id=\"more\"></a>\n\n<h1 id=\"Brave\"><a href=\"#Brave\" class=\"headerlink\" title=\"Brave\"></a>Brave</h1><ul>\n<li>優：自帶擋廣告  </li>\n<li>缺：某些頁面按鈕顯示不出來<br>快速，隱私，自帶ad block，也可以裝chrome插件，隱私分頁是duckduckgo，還能用Alt+Shift+N開tor分頁<br><a href=\"https://brave.com/tor-tabs-beta\">https://brave.com/tor-tabs-beta</a><br><a href=\"https://brave.com/\">https://brave.com</a>  </li>\n</ul>\n<h1 id=\"Vivaldi\"><a href=\"#Vivaldi\" class=\"headerlink\" title=\"Vivaldi\"></a>Vivaldi</h1><ul>\n<li>優: 自帶檔廣告與截圖  </li>\n<li>缺：要註冊帳號維持現有設定，某次沒註冊設定跑掉<br>自從opera被中國接手後，原團隊開發另一個Vivaldi快速簡便，高自訂功能，自帶網頁截圖還可以裝chrome插件，預設搜尋引擎是bing，要改一下<br><a href=\"https://vivaldi.com/\">https://vivaldi.com</a>   </li>\n</ul>\n<h1 id=\"Cent-Browser\"><a href=\"#Cent-Browser\" class=\"headerlink\" title=\"Cent Browser\"></a>Cent Browser</h1><p>鄉民愛用<br><a href=\"https://www.centbrowser.com/\">https://www.centbrowser.com/</a> </p>\n<h1 id=\"Chromium\"><a href=\"#Chromium\" class=\"headerlink\" title=\"Chromium\"></a>Chromium</h1><ul>\n<li>優：Ubuntu App Store安裝方便，可以綁Google帳號sync  </li>\n<li>缺：不能用 Google遠端桌面  </li>\n</ul>\n<h1 id=\"Chrome\"><a href=\"#Chrome\" class=\"headerlink\" title=\"Chrome\"></a>Chrome</h1><ul>\n<li>優：Google親兒子，支援完整，可以用遠端桌面，截圖，擋廣告可以裝擴充  </li>\n<li>缺：Ubuntu上需用指令安裝，廣告太多，除了裝檔廣告外掛，外部連結搭配Brave   </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">linux安裝步驟</span><br><span class=\"line\">wget -c https:&#x2F;&#x2F;dl.google.com&#x2F;linux&#x2F;direct&#x2F;google-chrome-stable_current_amd64.deb </span><br><span class=\"line\">sudo dpkg -i google-chrome-stable_current_amd64.deb</span><br><span class=\"line\">sudo apt-get install -f</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"結論\"><a href=\"#結論\" class=\"headerlink\" title=\"結論\"></a>結論</h1><p>平常用Chrome支援度最佳，但被眾多廣告干擾時，除了安裝檔廣告插件，還可以搭配Brave使用。 </p>\n","categories":["工程"],"tags":["好用"]},{"title":"瀏覽器插件推薦","url":"/engineer/chrome/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/2020-10-04.jpeg\"></p>\n<h1 id=\"這邊列出使用chrome-based瀏覽器需要知道的資訊。\"><a href=\"#這邊列出使用chrome-based瀏覽器需要知道的資訊。\" class=\"headerlink\" title=\"這邊列出使用chrome based瀏覽器需要知道的資訊。\"></a>這邊列出使用chrome based瀏覽器需要知道的資訊。</h1><a id=\"more\"></a>\n\n<h1 id=\"實驗功能\"><a href=\"#實驗功能\" class=\"headerlink\" title=\"實驗功能\"></a>實驗功能</h1><p>chrome://flags/  </p>\n<ol>\n<li>Enable sharing page via OR Code: 網頁右鍵變QR Code分享 </li>\n<li>Parallel downloading: 加快下載速度  </li>\n<li>Force Dark Mode for Web Contents: 全面黑化，但google doc顯示結果不好看，不推     </li>\n<li>只有外框黑色，比較好看  <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ defaults write com.google.Chrome     </span><br><span class=\"line\">$ NSRequiresAquaSystemAppearance -bool YES  </span><br></pre></td></tr></table></figure></li>\n<li>TLS 1.3 hardening for local anchors: 增強安全，減少延遲 </li>\n</ol>\n<h1 id=\"歷史圖表\"><a href=\"#歷史圖表\" class=\"headerlink\" title=\"歷史圖表\"></a>歷史圖表</h1><p>chrome://discards/graph  </p>\n<h1 id=\"實用\"><a href=\"#實用\" class=\"headerlink\" title=\"實用\"></a>實用</h1><h2 id=\"Google-Translate\"><a href=\"#Google-Translate\" class=\"headerlink\" title=\"Google Translate\"></a>Google Translate</h2><blockquote>\n<p>最常用的功能<br><a href=\"https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb/RK%3D2/RS%3DBBFW_pnWkPY0xPMYsAZI5xOgQEE-\">https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb/RK%3D2/RS%3DBBFW_pnWkPY0xPMYsAZI5xOgQEE-</a></p>\n</blockquote>\n<h2 id=\"FireShot\"><a href=\"#FireShot\" class=\"headerlink\" title=\"FireShot\"></a>FireShot</h2><blockquote>\n<p>chrome中截圖<br><a href=\"https://chrome.google.com/webstore/detail/take-webpage-screenshots/mcbpblocgmgfnpjjppndjkmgjaogfceg?hl=zh-TW\">https://chrome.google.com/webstore/detail/take-webpage-screenshots/mcbpblocgmgfnpjjppndjkmgjaogfceg?hl=zh-TW</a><br>如果用vivaldi瀏覽器就自帶這個插件了<br>如果windows系統自帶截圖小工具  </p>\n</blockquote>\n<h2 id=\"Enable-Copy\"><a href=\"#Enable-Copy\" class=\"headerlink\" title=\"Enable Copy\"></a>Enable Copy</h2><blockquote>\n<p>突破右鍵限制<br><a href=\"https://chrome.google.com/webstore/detail/enable-copy/lmnganadkecefnhncokdlaohlkneihio/related?hl=zh-TW\">https://chrome.google.com/webstore/detail/enable-copy/lmnganadkecefnhncokdlaohlkneihio/related?hl=zh-TW</a> </p>\n</blockquote>\n<h2 id=\"Url-Shortener\"><a href=\"#Url-Shortener\" class=\"headerlink\" title=\"Url Shortener\"></a>Url Shortener</h2><blockquote>\n<p>短網址生成器<br><a href=\"https://chrome.google.com/webstore/detail/url-shortener/oodfdmglhbbkkcngodjjagblikmoegpa\">https://chrome.google.com/webstore/detail/url-shortener/oodfdmglhbbkkcngodjjagblikmoegpa</a>  </p>\n</blockquote>\n<h2 id=\"Touch-VPN-Secure-and-unlimited-VPN-proxy\"><a href=\"#Touch-VPN-Secure-and-unlimited-VPN-proxy\" class=\"headerlink\" title=\"Touch VPN - Secure and unlimited VPN proxy\"></a>Touch VPN - Secure and unlimited VPN proxy</h2><blockquote>\n<p>簡單跳VPN，不台灣不被大陸封鎖<br><a href=\"https://chrome.google.com/webstore/detail/touch-vpn-secure-and-unli/bihmplhobchoageeokmgbdihknkjbknd/related\">https://chrome.google.com/webstore/detail/touch-vpn-secure-and-unli/bihmplhobchoageeokmgbdihknkjbknd/related</a>  </p>\n</blockquote>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><h2 id=\"Pandas-HD-Wallpapers-Panda-New-Tab-Theme\"><a href=\"#Pandas-HD-Wallpapers-Panda-New-Tab-Theme\" class=\"headerlink\" title=\"Pandas HD Wallpapers Panda New Tab Theme\"></a>Pandas HD Wallpapers Panda New Tab Theme</h2><blockquote>\n<p>新分頁貓熊圖<br><a href=\"https://chrome.google.com/webstore/detail/pandas-hd-wallpapers-pand/bbjkbnakcplpamecagcjckfcbjkpcbba/related?page=1&amp;hl=zh_CN&amp;itemlang=ta\">https://chrome.google.com/webstore/detail/pandas-hd-wallpapers-pand/bbjkbnakcplpamecagcjckfcbjkpcbba/related?page=1&amp;hl=zh_CN&amp;itemlang=ta</a> </p>\n</blockquote>\n<h2 id=\"Grammarly\"><a href=\"#Grammarly\" class=\"headerlink\" title=\"Grammarly\"></a>Grammarly</h2><blockquote>\n<p>Google doc英文除錯很方便<br><a href=\"https://chrome.google.com/webstore/detail/grammarly-for-chrome/kbfnbcaeplbcioakkpcpgfkobkghlhen\">https://chrome.google.com/webstore/detail/grammarly-for-chrome/kbfnbcaeplbcioakkpcpgfkobkghlhen</a>  </p>\n</blockquote>\n<h2 id=\"Adblock-Plus\"><a href=\"#Adblock-Plus\" class=\"headerlink\" title=\"Adblock Plus\"></a>Adblock Plus</h2><blockquote>\n<p>檔橫幅<br><a href=\"https://chrome.google.com/webstore/detail/adblock-plus-free-ad-bloc/cfhdojbkjhnklbpkdaibdccddilifddb/related?hl=zh-TW\">https://chrome.google.com/webstore/detail/adblock-plus-free-ad-bloc/cfhdojbkjhnklbpkdaibdccddilifddb/related?hl=zh-TW</a></p>\n</blockquote>\n<h2 id=\"Adblock-for-Youtube\"><a href=\"#Adblock-for-Youtube\" class=\"headerlink\" title=\"Adblock for Youtube\"></a>Adblock for Youtube</h2><blockquote>\n<p>聽音樂不會卡廣告<br><a href=\"https://chrome.google.com/webstore/detail/adblock-for-youtube/cmedhionkhpnakcndndgjdbohmhepckk?hl=zh-TW\">https://chrome.google.com/webstore/detail/adblock-for-youtube/cmedhionkhpnakcndndgjdbohmhepckk?hl=zh-TW</a>  </p>\n</blockquote>\n<h2 id=\"uAutoPagerize\"><a href=\"#uAutoPagerize\" class=\"headerlink\" title=\"uAutoPagerize\"></a>uAutoPagerize</h2><blockquote>\n<p>Google搜尋到底自動接下一頁<br><a href=\"https://chrome.google.com/webstore/detail/uautopagerize/kdplapeciagkkjoignnkfpbfkebcfbpb\">https://chrome.google.com/webstore/detail/uautopagerize/kdplapeciagkkjoignnkfpbfkebcfbpb</a> </p>\n</blockquote>\n<h2 id=\"Isometric-Contributions\"><a href=\"#Isometric-Contributions\" class=\"headerlink\" title=\"Isometric Contributions\"></a>Isometric Contributions</h2><blockquote>\n<p>美美的github貢獻<br><a href=\"https://chrome.google.com/webstore/detail/isometric-contributions/mjoedlfflcchnleknnceiplgaeoegien\">https://chrome.google.com/webstore/detail/isometric-contributions/mjoedlfflcchnleknnceiplgaeoegien</a>   </p>\n</blockquote>\n<h2 id=\"Octotree\"><a href=\"#Octotree\" class=\"headerlink\" title=\"Octotree\"></a>Octotree</h2><blockquote>\n<p>方便列表跳轉github<br><a href=\"https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc/related?hl=en-US\">https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc/related?hl=en-US</a>  </p>\n</blockquote>\n<h2 id=\"Enhanced-Github\"><a href=\"#Enhanced-Github\" class=\"headerlink\" title=\"Enhanced Github\"></a>Enhanced Github</h2><blockquote>\n<p>github下載時只需下載單個文件<br><a href=\"https://chrome.google.com/webstore/detail/enhanced-github/anlikcnbgdeidpacdbdljnabclhahhmd/related?hl=zh-tw\">https://chrome.google.com/webstore/detail/enhanced-github/anlikcnbgdeidpacdbdljnabclhahhmd/related?hl=zh-tw</a>  </p>\n</blockquote>\n<h2 id=\"Sourcegraph\"><a href=\"#Sourcegraph\" class=\"headerlink\" title=\"Sourcegraph\"></a>Sourcegraph</h2><blockquote>\n<p>程式跳轉功能<br><a href=\"https://chrome.google.com/webstore/detail/sourcegraph/dgjhfomjieaadpoljlnidmbgkdffpack/related\">https://chrome.google.com/webstore/detail/sourcegraph/dgjhfomjieaadpoljlnidmbgkdffpack/related</a>  </p>\n</blockquote>\n<h2 id=\"JsonView\"><a href=\"#JsonView\" class=\"headerlink\" title=\"JsonView\"></a>JsonView</h2><blockquote>\n<p>方便看json<br><a href=\"https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc?hl=zh-TW\">https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc?hl=zh-TW</a>  </p>\n</blockquote>\n","categories":["工程"],"tags":["好用"]},{"title":"Linux小技巧","url":"/engineer/linux/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/2020-10-05.jpeg\"></p>\n<h1 id=\"工作上最常用到linux，這邊列出常會用到的一些指令。\"><a href=\"#工作上最常用到linux，這邊列出常會用到的一些指令。\" class=\"headerlink\" title=\"工作上最常用到linux，這邊列出常會用到的一些指令。\"></a>工作上最常用到linux，這邊列出常會用到的一些指令。</h1><a id=\"more\"></a>\n\n<h1 id=\"查電腦資訊\"><a href=\"#查電腦資訊\" class=\"headerlink\" title=\"查電腦資訊\"></a>查電腦資訊</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo apt install hardinfo  </span><br><span class=\"line\">$ hardinfo | less  </span><br><span class=\"line\">$ cat &#x2F;etc&#x2F;hostname  </span><br><span class=\"line\">$ lscpu  </span><br><span class=\"line\"></span><br><span class=\"line\">架構：               x86_64</span><br><span class=\"line\">CPU 作業模式：       32-bit, 64-bit</span><br><span class=\"line\">CPU(s):              8</span><br></pre></td></tr></table></figure>\n\n<p>$ cat /proc/cpuinfo  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">eric_lu@T-01009658UP:~$ cat &#x2F;proc&#x2F;cpuinfo | grep &quot;model name&quot;</span><br><span class=\"line\">model name\t: Intel(R) Core(TM) i7-2600 CPU @ 3.40GHz</span><br><span class=\"line\">model name\t: Intel(R) Core(TM) i7-2600 CPU @ 3.40GHz</span><br><span class=\"line\">model name\t: Intel(R) Core(TM) i7-2600 CPU @ 3.40GHz</span><br><span class=\"line\">model name\t: Intel(R) Core(TM) i7-2600 CPU @ 3.40GHz</span><br><span class=\"line\">model name\t: Intel(R) Core(TM) i7-2600 CPU @ 3.40GHz</span><br><span class=\"line\">model name\t: Intel(R) Core(TM) i7-2600 CPU @ 3.40GHz</span><br><span class=\"line\">model name\t: Intel(R) Core(TM) i7-2600 CPU @ 3.40GHz</span><br><span class=\"line\">model name\t: Intel(R) Core(TM) i7-2600 CPU @ 3.40GHz</span><br></pre></td></tr></table></figure>\n<p>$ cat /proc/meminfo<br>$ lsblk # HD  </p>\n<h1 id=\"Clay-Technology-World\"><a href=\"#Clay-Technology-World\" class=\"headerlink\" title=\"Clay-Technology World\"></a>Clay-Technology World</h1><p><a href=\"https://clay-atlas.com/blog/2020/09/17/linux-cn-change-or-check-date/\">https://clay-atlas.com/blog/2020/09/17/linux-cn-change-or-check-date/</a>  日期時間<br><a href=\"https://clay-atlas.com/blog/2020/08/04/linux-cn-note-using-trash-rm-remove-delete/\">https://clay-atlas.com/blog/2020/08/04/linux-cn-note-using-trash-rm-remove-delete/</a>  用trash取代rm避免誤刪<br><a href=\"https://clay-atlas.com/blog/2020/05/21/linux-cn-note-shell-script-input-argument/\">https://clay-atlas.com/blog/2020/05/21/linux-cn-note-shell-script-input-argument/</a> Shell Script 輸入參數$# 0 1 2 3<br><a href=\"https://clay-atlas.com/blog/2020/03/21/linux-cn-note-copy-progress-bar/\">https://clay-atlas.com/blog/2020/03/21/linux-cn-note-copy-progress-bar/</a> 複製檔案顯示進度 gcp<br><a href=\"https://clay-atlas.com/blog/2019/12/10/ubuntu-os-crontab-settings/\">https://clay-atlas.com/blog/2019/12/10/ubuntu-os-crontab-settings/</a>  定期執行 crontab<br><a href=\"https://clay-atlas.com/blog/2020/01/16/linux-chinese-note-speedtest-cli/\">https://clay-atlas.com/blog/2020/01/16/linux-chinese-note-speedtest-cli/</a> 測網速sudo pip3 install speedtest-cli<br><a href=\"https://clay-atlas.com/blog/2019/10/29/python-chinese-tutorial-jupyter-notebook/\">https://clay-atlas.com/blog/2019/10/29/python-chinese-tutorial-jupyter-notebook/</a>  遠端jupyter<br><a href=\"https://clay-atlas.com/blog/2020/01/11/linux-chinese-tutorial-command-du-check-file-size/\">https://clay-atlas.com/blog/2020/01/11/linux-chinese-tutorial-command-du-check-file-size/</a> 顯示檔案大小du<br><a href=\"https://clay-atlas.com/blog/2020/02/04/linux-ubuntu-chinese-note-remove-ppa/\">https://clay-atlas.com/blog/2020/02/04/linux-ubuntu-chinese-note-remove-ppa/</a> 刪除ppa sudo ls /etc/apt/sources.list.d<br><a href=\"https://clay-atlas.com/blog/2020/01/29/linux-chinese-notes-tree-command-visualization-folder/\">https://clay-atlas.com/blog/2020/01/29/linux-chinese-notes-tree-command-visualization-folder/</a> tee 資料夾看階層  </p>\n<h1 id=\"看網頁資訊\"><a href=\"#看網頁資訊\" class=\"headerlink\" title=\"看網頁資訊\"></a>看網頁資訊</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$  curl -v http:&#x2F;&#x2F;ec1ecdc57218.ngrok.io&#x2F;</span><br><span class=\"line\">*   Trying 3.134.39.220...</span><br><span class=\"line\">* TCP_NODELAY set</span><br><span class=\"line\">* Connected to ec1ecdc57218.ngrok.io (3.134.39.220) port 80 (#0)</span><br><span class=\"line\">&gt; GET &#x2F; HTTP&#x2F;1.1</span><br><span class=\"line\">&gt; Host: ec1ecdc57218.ngrok.io</span><br><span class=\"line\">&gt; User-Agent: curl&#x2F;7.58.0</span><br><span class=\"line\">&gt; Accept: *&#x2F;*</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&lt; HTTP&#x2F;1.1 200 OK</span><br><span class=\"line\">&lt; Content-Length: 117</span><br><span class=\"line\">&lt; Content-Type: application&#x2F;json</span><br><span class=\"line\">&lt; Date: Wed, 30 Sep 2020 06:52:11 GMT</span><br><span class=\"line\">&lt; Server: Werkzeug&#x2F;1.0.1 Python&#x2F;3.6.9</span><br><span class=\"line\">&lt; </span><br><span class=\"line\">* Connection #0 to host ec1ecdc57218.ngrok.io left intact</span><br><span class=\"line\">&#123;&quot;id&quot;: &quot;xidGidfid0idKidxid6idF&quot;, &quot;date&quot;: &quot;09&#x2F;30&#x2F;2020&quot;, &quot;choseNumber&quot;: [8, 2, 0], &quot;probability&quot;: 0.008333333333333333&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"在colab-安靜安裝的幾種方法\"><a href=\"#在colab-安靜安裝的幾種方法\" class=\"headerlink\" title=\"在colab 安靜安裝的幾種方法\"></a>在colab 安靜安裝的幾種方法</h1><p>!pip3 install vpython&gt; /dev/null<br>!pip3 install -q vpython    </p>\n<p>%%capture<br>!pip3 install vpython  </p>\n<h1 id=\"alpine\"><a href=\"#alpine\" class=\"headerlink\" title=\"alpine\"></a>alpine</h1><p><code>極小的linux方便裝在docker</code><br>$ docker run -ti –rm -v ${HOME}:/root -v $(pwd):/git alpine/git<br>$ docker run –name da1 -d -p 81:80 alpine/git<br>b117b223cb2003f09b8d697967666744ab81e7686165ccbabbce825aad2392d9<br>$ docker run alpine echo ‘123’<br>123</p>\n<h1 id=\"軟體\"><a href=\"#軟體\" class=\"headerlink\" title=\"軟體\"></a>軟體</h1><p>Yakuake: 下拉式終端<br>Terminator: 可以輸入指令到多個終端  </p>\n<h1 id=\"短指令\"><a href=\"#短指令\" class=\"headerlink\" title=\"短指令\"></a>短指令</h1><p>which 找指令位置<br>top 看目前執行程式<br>free -h 看記憶體容量<br>lsb_release -a 看作業系統<br>ctrl+shift+t 開新terminal<br>history | less  可以用PageUp Down<br>curl -vvvv  網址 v越多內容顯示越多<br>echo 檔案 ｜ wc -l 顯示行數  </p>\n<h1 id=\"長指令\"><a href=\"#長指令\" class=\"headerlink\" title=\"長指令\"></a>長指令</h1><p>cat a.txt | grep -A20 “Package [com.google.android.gms”  抓gms package發出的訊息<br>cat a.txt | awk ‘!/Something/‘ | grep ‘B|C|D’  可以結合awk, grew<br>rm -rf ~/.local/share/Trash/* 清垃圾桶<br>cat .ssh/id_rsa.pub  印pub key  </p>\n<h1 id=\"快捷建\"><a href=\"#快捷建\" class=\"headerlink\" title=\"快捷建\"></a>快捷建</h1><p>Ctrl+Alt+T 開terminal  </p>\n<h1 id=\"硬碟\"><a href=\"#硬碟\" class=\"headerlink\" title=\"硬碟\"></a>硬碟</h1><p>lsblk<br>blkid<br>mount<br>sudo fdisk -l  </p>\n<h1 id=\"14-04桌面時鐘消失\"><a href=\"#14-04桌面時鐘消失\" class=\"headerlink\" title=\"14.04桌面時鐘消失\"></a>14.04桌面時鐘消失</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt-get install indicator-datetime  </span><br><span class=\"line\">sudo dpkg-reconfigure --frontend noninteractive tzdata  </span><br><span class=\"line\">sudo killall unity-panel-service  </span><br><span class=\"line\">或  </span><br><span class=\"line\">sudo restart lightdm  </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"18-04-按enter-持續重複輸入\"><a href=\"#18-04-按enter-持續重複輸入\" class=\"headerlink\" title=\"18.04  按enter 持續重複輸入\"></a>18.04  按enter 持續重複輸入</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">檢查  </span><br><span class=\"line\">$ gsettings get org.gnome.desktop.peripherals.keyboard repeat    </span><br><span class=\"line\">出現true 則輸入  </span><br><span class=\"line\">$ gsettings set org.gnome.desktop.peripherals.keyboard repeat false    </span><br><span class=\"line\"></span><br><span class=\"line\">https:&#x2F;&#x2F;askubuntu.com&#x2F;questions&#x2F;1029776&#x2F;keys-get-stuck-randomly-and-type-endless-line-of-a-particular-letter-command</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"18-04-KVM-permission-denied-error\"><a href=\"#18-04-KVM-permission-denied-error\" class=\"headerlink\" title=\"18.04 KVM permission denied error\"></a>18.04 KVM permission denied error</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sudo apt install qemu-kvm  </span><br><span class=\"line\">$ sudo adduser &lt;username&gt; kvm  </span><br><span class=\"line\">$ sudo chown &lt;username&gt; &#x2F;dev&#x2F;kvm  </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"18-04-openjdk\"><a href=\"#18-04-openjdk\" class=\"headerlink\" title=\"18.04 openjdk\"></a>18.04 openjdk</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt install openjdk-8-jdk  </span><br><span class=\"line\">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-8-openjdk-amd64  </span><br><span class=\"line\">echo $JAVA_HOME  </span><br><span class=\"line\">export PATH&#x3D;$PATH:$JAVA_HOME&#x2F;bin  </span><br><span class=\"line\">echo $PATH  </span><br><span class=\"line\">java -version  </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"18-04-postman\"><a href=\"#18-04-postman\" class=\"headerlink\" title=\"18.04 postman\"></a>18.04 postman</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget https:&#x2F;&#x2F;dl.pstmn.io&#x2F;download&#x2F;latest&#x2F;linux64 -O postman.tar.gz  </span><br><span class=\"line\">sudo tar -xzf postman.tar.gz -C &#x2F;opt  </span><br><span class=\"line\">sudo ln -s &#x2F;opt&#x2F;Postman&#x2F;Postman &#x2F;usr&#x2F;bin&#x2F;postman </span><br><span class=\"line\">&#96;&#96;&#96; </span><br><span class=\"line\"></span><br><span class=\"line\"># 20.04 chrome</span><br></pre></td></tr></table></figure>\n<p>$ sudo apt install gdebi-core wget<br>$ wget <a href=\"https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\">https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</a><br>$ sudo gdebi google-chrome-stable_current_amd64.deb<br>$ google-chrome</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 20.04 7z</span><br></pre></td></tr></table></figure>\n<p>$ sudo apt-get update<br>$ sudo apt-get install p7zip-full<br>$ 7z</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## Create a Desktop Entry  </span><br><span class=\"line\">cat &gt; ~&#x2F;.local&#x2F;share&#x2F;applications&#x2F;postman.desktop &lt;&lt;EOL  </span><br></pre></td></tr></table></figure>\n<p>[Desktop Entry]<br>Encoding=UTF-8<br>Name=Postman<br>Exec=postman<br>Icon=/opt/Postman/app/resources/app/assets/icon.png<br>Terminal=false<br>Type=Application<br>Categories=Development;<br>EOL</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 清垃圾桶</span><br><span class=\"line\">cd ~&#x2F;. local&#x2F;share&#x2F;Trash&#x2F;files&#x2F;  </span><br><span class=\"line\">rm -rf *  </span><br><span class=\"line\"></span><br><span class=\"line\"># 無法安裝軟體 </span><br><span class=\"line\">sudo chmod 7755 &#x2F;usr&#x2F;lib&#x2F;policykit-1&#x2F;polkit-agent-helper-1  </span><br><span class=\"line\"></span><br><span class=\"line\"># 目錄中文轉英文</span><br><span class=\"line\">$ export LANG&#x3D;en_US  </span><br><span class=\"line\">$ xdg-user-dirs-gtk-update  </span><br><span class=\"line\"></span><br><span class=\"line\"># 顯示跑掉</span><br><span class=\"line\">1.先換條螢幕線  </span><br><span class=\"line\">https:&#x2F;&#x2F;www.ubuntu-tw.org&#x2F;modules&#x2F;newbb&#x2F;viewtopic.php?topic_id&#x3D;33458</span><br><span class=\"line\"></span><br><span class=\"line\"># 讓Windows遠端連線</span><br><span class=\"line\">1.xface  </span><br><span class=\"line\">sudo apt update  </span><br><span class=\"line\">sudo apt install xfce4 xfce4-goodies xorg dbus-x11 x11-xserver-utils  </span><br><span class=\"line\"></span><br><span class=\"line\">2.xrdp  </span><br><span class=\"line\">sudo apt install xrdp  </span><br><span class=\"line\">check: sudo systemctl status xrdp  </span><br><span class=\"line\"></span><br><span class=\"line\">3.啟動  </span><br><span class=\"line\">可以用 systemctl 指令來啟動，輸入  </span><br><span class=\"line\">sudo systemctl restart xrdp  </span><br><span class=\"line\">並且確認在開機時自動啟動 xrdp  </span><br><span class=\"line\">sudo systemctl enable xrdp   </span><br><span class=\"line\">sudo vim &#x2F;etc&#x2F;xrdp&#x2F;xrdp.ini  </span><br><span class=\"line\">在最後一行加上  </span><br><span class=\"line\">exec startxfce4</span><br><span class=\"line\">儲存檔案並重新啟動 Xrdp 服務  </span><br><span class=\"line\">sudo systemctl restart xrdp   </span><br><span class=\"line\"></span><br><span class=\"line\">4.設定防火牆</span><br><span class=\"line\">要允許從特定 IP 或 IP 範圍連接 Xrdp 伺服器，在此範例中 192.168.1.0&#x2F;24 運行以下命令  </span><br><span class=\"line\">sudo ufw allow from 192.168.1.0&#x2F;24 to any port 3389  </span><br><span class=\"line\">如果您想允許從任何地方進行連線(基於安全原因不鼓勵)，請輸入     </span><br><span class=\"line\">sudo ufw allow 3389  </span><br><span class=\"line\"></span><br><span class=\"line\">5.遠端空白問題  </span><br><span class=\"line\">sudo apt-get install xorgxrdp  </span><br><span class=\"line\">https:&#x2F;&#x2F;c-nergy.be&#x2F;blog&#x2F;?p&#x3D;13390  </span><br><span class=\"line\"></span><br><span class=\"line\">6.重啟  </span><br><span class=\"line\">sudo service xrdp restart    </span><br><span class=\"line\">netstat -na | grep 3389   </span><br><span class=\"line\"></span><br><span class=\"line\"># NoMachine</span><br><span class=\"line\">https:&#x2F;&#x2F;briian.com&#x2F;59310&#x2F; </span><br><span class=\"line\"></span><br><span class=\"line\"># Tab</span><br><span class=\"line\">1、pycharm使多行代碼同時縮進  </span><br><span class=\"line\">   鼠標選中多行代碼後，按下Tab鍵，一次縮進四個字符  </span><br><span class=\"line\"></span><br><span class=\"line\">2、pycharm使多行代碼同時左移  </span><br><span class=\"line\">  鼠標選中多行代碼後，同時按住shift+Tab鍵，一次左移四個字符   </span><br><span class=\"line\"></span><br><span class=\"line\"># 安全重啟</span><br><span class=\"line\">1. 同時按住 Ctrl 和 Alt 鍵，按住不要放  </span><br><span class=\"line\">2. 按一下 SysRq 鍵  </span><br><span class=\"line\">3. 按一下 R 鍵  </span><br><span class=\"line\">4. 按一下 E 鍵  </span><br><span class=\"line\">5. 依次按下 I , S , U , B 鍵  </span><br><span class=\"line\"></span><br><span class=\"line\"># Android Studio</span><br><span class=\"line\">Ctrl+Alt+L 自動排版  </span><br><span class=\"line\"></span><br><span class=\"line\">## 可以Sh雙擊執行</span><br><span class=\"line\">在桌面 vim androidstudio.desktop  </span><br></pre></td></tr></table></figure>\n<p>[Desktop Entry]<br>Name=AndroidStudio<br>Comment=open android studio<br>Exec=sh /home/eric_lu/android-studio-ide-192.6392135-linux/android-studio/bin/studio.sh<br>Icon=/home/eric_lu/android-studio-ide-192.6392135-linux/android-studio/bin/studio.png<br>Terminal=false<br>Type=Application</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">右鍵點擊程式，來到最下方的『屬性』，選擇『權限』  </span><br><span class=\"line\">將『允許檔案作為程式執行(E)』打勾，然後關閉視窗  </span><br><span class=\"line\"></span><br><span class=\"line\">cp androidstudio.desktop ~&#x2F;.local&#x2F;share&#x2F;applications&#x2F;  </span><br><span class=\"line\">將我們剛建立好的 .desktop 檔案移動至應用程式區，就可以在『搜尋』當中找到這個應用程式  </span><br><span class=\"line\"></span><br><span class=\"line\">## 在Ubuntu可以加速</span><br><span class=\"line\">https:&#x2F;&#x2F;confluence.jetbrains.com&#x2F;display&#x2F;IDEADEV&#x2F;Inotify+Watches+Limit  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>sudo vim  /etc/sysctl.conf<br>fs.inotify.max_user_watches = 524288<br>sudo sysctl -p –system  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 裝完開啟很慢改記憶體大小</span><br><span class=\"line\">..\\Android Studio\\bin\\*.vmoptions  </span><br></pre></td></tr></table></figure>\n<p>-Xms5120m<br>-Xmx10240m<br>-XX:MaxPermSize=1024m<br>-XX:ReservedCodeCacheSize=440m<br>-XX:+UseCompressedOops<br>-XX:-HeapDumpOnOutOfMemoryError<br>-Dfile.encoding=UTF-8</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">之後在file&gt;Invalidate caches  </span><br><span class=\"line\"></span><br><span class=\"line\">## 載入慢要改設定</span><br><span class=\"line\">解決 androidstudio 在獲取Android sdk ...位置暫停導致androidstudio 啟動慢  </span><br><span class=\"line\">打開android studio的bin目錄  </span><br><span class=\"line\">修改idea.properties文件如下：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>…<br> idea.fatal.error.notification = enabled<br> disable.android .first.run = true </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Python</span><br><span class=\"line\">## 2 to 3  </span><br></pre></td></tr></table></figure>\n<p>$ sudo add-apt-repository ppa:deadsnakes/ppa<br>$ sudo apt-get update<br>$ sudo apt-get install python3.6<br>$ sudo apt-get install python3.7<br>$ sudo apt install python3-pip<br>$ sudo update-alternatives - install /usr/bin/python3 python3 /usr/bin/python3.6 1<br>$ sudo update-alternatives - install /usr/bin/python3 python3 /usr/bin/python3.7 2  </p>\n<p>```</p>\n<h2 id=\"虛擬環境\"><a href=\"#虛擬環境\" class=\"headerlink\" title=\"虛擬環境\"></a>虛擬環境</h2><p> python -m venv .venv<br>.venv\\Scripts\\activate.bat  </p>\n<h2 id=\"換版本\"><a href=\"#換版本\" class=\"headerlink\" title=\"換版本\"></a>換版本</h2><ol>\n<li>Check python version on terminal - python –version  </li>\n<li>Get root user privileges. On terminal type - sudo su  </li>\n<li>Write down the root user password  </li>\n<li>Execute this command to switch to python 3.6 -  </li>\n<li>update-alternatives –install /usr/bin/python python /usr/bin/python3 1  </li>\n<li>Check python version - python –version  </li>\n</ol>\n","categories":["工程"],"tags":["好用"]},{"title":"Mac小技巧","url":"/engineer/macintosh/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/2020-10-06.jpeg\"></p>\n<h1 id=\"想樣windows一樣方便又想像linux打指令，還夠潮？-Mac來解救你啦。\"><a href=\"#想樣windows一樣方便又想像linux打指令，還夠潮？-Mac來解救你啦。\" class=\"headerlink\" title=\"想樣windows一樣方便又想像linux打指令，還夠潮？ Mac來解救你啦。\"></a>想樣windows一樣方便又想像linux打指令，還夠潮？ Mac來解救你啦。</h1><a id=\"more\"></a>\n\n<h1 id=\"一般\"><a href=\"#一般\" class=\"headerlink\" title=\"一般\"></a>一般</h1><p>1.control + command + space叫出emoji列表  </p>\n<p>2.系统偏好设置 - 一般 選深色主題  </p>\n<p>3.快捷鍵<br>command ＋ a 全選<br>command ＋ c 複製<br>command ＋ e 退出裝置<br>command ＋ o 開新檔案<br>command ＋ q 結束程式<br>command ＋ s 保存<br>command ＋ x 剪下<br>command ＋ v 貼上<br>command ＋ tab 切換程式<br>command ＋ z 回上一步<br>command ＋ 空白 換輸入法<br>command ＋ b 加粗<br>command + Option + Esc 關閉無反應程式<br>command + shift + 5 截圖工具  </p>\n<p>4.全選以後直接space空格鍵，可以全部在一個窗口打開所有圖片預覽  </p>\n<p>按住option &gt; 左上蘋果 &gt; 電源 &gt; 電池循環次數  </p>\n<h1 id=\"常用軟體\"><a href=\"#常用軟體\" class=\"headerlink\" title=\"常用軟體\"></a>常用軟體</h1><p>BetterTouchTool <a href=\"https://folivora.ai/\">https://folivora.ai</a>  客制TouchBar<br>MacDown 寫blog md好用<br>ImageOptim 縮圖 加快blog加載  </p>\n<h1 id=\"影音播放\"><a href=\"#影音播放\" class=\"headerlink\" title=\"影音播放\"></a>影音播放</h1><p><a href=\"https://iina.io/\">IINA</a> </p>\n<h1 id=\"終端裝iTerm方便看在哪個目錄分支\"><a href=\"#終端裝iTerm方便看在哪個目錄分支\" class=\"headerlink\" title=\"終端裝iTerm方便看在哪個目錄分支\"></a>終端裝iTerm方便看在哪個目錄分支</h1><p><a href=\"https://medium.com/@chuanjen.wang/mac%E9%85%B7%E7%82%ABterminal-%E6%A8%A3%E5%BC%8F-%E9%A1%AF%E7%A4%BAgit-%E5%88%86%E6%94%AF-712cfb02b327\">https://medium.com/@chuanjen.wang/mac酷炫terminal-樣式-顯示git-分支-712cfb02b327</a><br><a href=\"https://guahsu.io/2017/11/mac-update-cant-use-git/\">https://guahsu.io/2017/11/mac-update-cant-use-git/</a><br><a href=\"https://andy6804tw.github.io/2018/01/01/iterm2-zsh-intro/\">https://andy6804tw.github.io/2018/01/01/iterm2-zsh-intro/</a>  </p>\n<h1 id=\"MagicMouse在windows使用滾輪\"><a href=\"#MagicMouse在windows使用滾輪\" class=\"headerlink\" title=\"MagicMouse在windows使用滾輪\"></a>MagicMouse在windows使用滾輪</h1><p><a href=\"http://s000.tinyupload.com/?file_id=00759423031899869092\">http://s000.tinyupload.com/?file_id=00759423031899869092</a>  </p>\n","categories":["工程"],"tags":["好用"]},{"title":"Nbextension小技巧","url":"/engineer/nbextensions/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/2020-10-07.jpeg\"></p>\n<h1 id=\"什麼是jupyter-nbextensions\"><a href=\"#什麼是jupyter-nbextensions\" class=\"headerlink\" title=\"什麼是jupyter nbextensions\"></a>什麼是jupyter nbextensions</h1><p>Jupyter是個交互式IDE，方便學習，撰寫，呈現julia, python, r等程式，nbextensions是IDE的生產力工具。  </p>\n<p>當裝好Anaconda就自帶Jupyter了。    </p>\n<a id=\"more\"></a>\n\n<h1 id=\"怎麼安裝\"><a href=\"#怎麼安裝\" class=\"headerlink\" title=\"怎麼安裝\"></a>怎麼安裝</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">＄ pip install jupyter_contrib_nbextensions &amp;&amp; jupyter contrib nbextension install  </span><br><span class=\"line\">＄ jupyter notebook</span><br><span class=\"line\">就會在右邊tab顯示  </span><br><span class=\"line\">[nbextensions](https:&#x2F;&#x2F;www.google.com&#x2F;imgres?imgurl&#x3D;https%3A%2F%2Fcdn-images-1.medium.com%2Fmax%2F1600%2F1*Lei-MjkVmmTjq0XPG3PfSA.png&amp;imgrefurl&#x3D;https%3A%2F%2Fmedium.com%2F%40yanweiliu%2Fjupyter-notebook-nbextension%25E6%2593%25B4%25E5%2585%2585%25E5%25A5%2597%25E4%25BB%25B6-4e43a910402&amp;docid&#x3D;ZiXDSAbIGZm7PM&amp;tbnid&#x3D;y6W8L2sLXoVDBM%3A&amp;vet&#x3D;10ahUKEwiq8u3S1eDgAhWOv5QKHdo4D9AQMwg-KAAwAA..i&amp;w&#x3D;1600&amp;h&#x3D;739&amp;safe&#x3D;off&amp;bih&#x3D;547&amp;biw&#x3D;1237&amp;q&#x3D;nbextension&amp;ved&#x3D;0ahUKEwiq8u3S1eDgAhWOv5QKHdo4D9AQMwg-KAAwAA&amp;iact&#x3D;mrc&amp;uact&#x3D;8)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"推薦不錯的nbextensions\"><a href=\"#推薦不錯的nbextensions\" class=\"headerlink\" title=\"推薦不錯的nbextensions\"></a>推薦不錯的nbextensions</h1><p>1.Table of Contents管理cell<br>2.Autopep8自動格式化 須先pip install autopep8<br>3.variable inspector管理變數<br>4.ExecuteTime儲存格耗時<br>5.Hinterland下拉選單<br>6.Split Cells Notebook拆分cell<br>7.Collapsible headings折疊程式區塊<br>8.Code folding折疊範圍在函數內部程式碼<br>9.Notify執行完成瀏覽器通知<br>10.jupyter簡報展示<br>pip install RISE<br>jupyter-nbextension install rise –py –sys-prefix<br>jupyter-nbextension enable rise –py –sys-prefix  </p>\n<h1 id=\"小技巧\"><a href=\"#小技巧\" class=\"headerlink\" title=\"小技巧\"></a>小技巧</h1><p>1.開頭打!指令 可以直接執行bash指令<br>2.help(可以查看說明文擋)<br>3.shift+tab查看函數用法<br>4.tab看有什麼函數可用<br>5.尋找取代：對cell按f可以取代這個cell所有找尋的字<br>6.Multicursor：按著windows:alt|mac:option就可以選取多行，像notpad++<br>7.快速開啟虛擬環境：其實就是在linux:.bashrc|mac:.bash_profile加上alias py36=’conda activate py36’再source .bash_profile以後就只要打py36就能快速開啟虛擬環境了<br>8.Shell Commands：<br>就是用過colab的人都知道的!+[指令]<br>9.寫公式：<br>\\begin{align}<br>…latex…<br>\\end{align}<br>10.Magic commands:<br>%%latex<br>%%bash<br>%%HTML<br>%%python2<br>%%python3<br>%%ruby<br>%%perl  </p>\n<h1 id=\"Jupytext單元格轉文字方便貼到Pycharm\"><a href=\"#Jupytext單元格轉文字方便貼到Pycharm\" class=\"headerlink\" title=\"Jupytext單元格轉文字方便貼到Pycharm\"></a>Jupytext單元格轉文字方便貼到Pycharm</h1><p><a href=\"https://github.com/mwouts/jupytext/blob/master/README.md#installation\">https://github.com/mwouts/jupytext/blob/master/README.md#installation</a>  </p>\n<h1 id=\"nbviewer-線上瀏覽-ipynb中的內容\"><a href=\"#nbviewer-線上瀏覽-ipynb中的內容\" class=\"headerlink\" title=\"nbviewer: 線上瀏覽 ipynb中的內容\"></a>nbviewer: 線上瀏覽 ipynb中的內容</h1><p><a href=\"https://medium.com/@yanweiliu/nbviewer-%E7%B7%9A%E4%B8%8A%E7%80%8F%E8%A6%BD-ipynb%E4%B8%AD%E7%9A%84%E5%85%A7%E5%AE%B9-7cf7ff6d5b70\">https://medium.com/@yanweiliu/nbviewer-%E7%B7%9A%E4%B8%8A%E7%80%8F%E8%A6%BD-ipynb%E4%B8%AD%E7%9A%84%E5%85%A7%E5%AE%B9-7cf7ff6d5b70</a>  </p>\n","categories":["工程"],"tags":["好用"]},{"title":"Vim小技巧","url":"/engineer/vim/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/2020-10-08.jpeg\"></p>\n<h1 id=\"這邊列出一些常用指令，分指令與編輯模式，編輯模式輸入完請習慣-esc-。\"><a href=\"#這邊列出一些常用指令，分指令與編輯模式，編輯模式輸入完請習慣-esc-。\" class=\"headerlink\" title=\"這邊列出一些常用指令，分指令與編輯模式，編輯模式輸入完請習慣[esc]。\"></a>這邊列出一些常用指令，分指令與編輯模式，編輯模式輸入完請習慣[esc]。</h1><a id=\"more\"></a>\n\n<h1 id=\"指令模式\"><a href=\"#指令模式\" class=\"headerlink\" title=\"指令模式\"></a>指令模式</h1><p>:set nu(mber) #加行號<br>:set nonumber #不加行號<br>/ #關鍵字<br>cw #刪除該字<br>. #重複之前動作<br>hjkl #左下上右移動<br>/ #找下一個<br>？ #找下一個<br>0 #當行第一個<br>$ #當行最後一個<br>x #刪除一個字<br>dd #刪除一行<br>yy #記錄一行<br>p #貼上<br>u #放棄上個動作<br>[Ctrl]+r #放棄u<br>J #貼上下一行<br>:%s/eric/lunski/g #取代eric成lunski  </p>\n<h1 id=\"編輯模式\"><a href=\"#編輯模式\" class=\"headerlink\" title=\"編輯模式\"></a>編輯模式</h1><p>i #游標左<br>a #游標右<br>o #游標下一行<br>:wq #存檔<br>:wq! #強制存檔  </p>\n","categories":["工程"],"tags":["好用"]},{"title":"Windows小技巧","url":"/engineer/windows/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/2020-10-11.jpeg\"></p>\n<h1 id=\"Windows也是可以很好用的\"><a href=\"#Windows也是可以很好用的\" class=\"headerlink\" title=\"Windows也是可以很好用的!!!\"></a>Windows也是可以很好用的!!!</h1><a id=\"more\"></a>\n\n<h1 id=\"換目錄\"><a href=\"#換目錄\" class=\"headerlink\" title=\"換目錄\"></a>換目錄</h1><p>檔案總管中選取想要的目錄&gt;在網址列輸入：「cmd」，按一下 Enter 鍵  </p>\n<h1 id=\"子系統\"><a href=\"#子系統\" class=\"headerlink\" title=\"子系統\"></a>子系統</h1><p><a href=\"https://blog.miniasp.com/post/2019/02/01/Useful-tool-WSL-Windows-Subsystem-for-Linux\">https://blog.miniasp.com/post/2019/02/01/Useful-tool-WSL-Windows-Subsystem-for-Linux</a>  </p>\n<h1 id=\"截圖\"><a href=\"#截圖\" class=\"headerlink\" title=\"截圖\"></a>截圖</h1><p>win+shift+S  </p>\n<h1 id=\"更改cmd顏色\"><a href=\"#更改cmd顏色\" class=\"headerlink\" title=\"更改cmd顏色\"></a>更改cmd顏色</h1><p>COLOR 背景前景<br>COLOR 0A<br>    0 = 黑色        8 = 灰色<br>    1 = 藍色        9 = 淡藍色<br>    2 = 綠色        A = 淡綠色<br>    3 = 藍綠色      B = 但藍綠色<br>    4 = 紅色        C = 淡紅色<br>    5 = 紫色        D = 淡紫色<br>    6 = 黃色        E = 淡黃色<br>    7 = 白色        F = 亮白色  </p>\n<h1 id=\"Windows-media-player將cd存成音樂檔\"><a href=\"#Windows-media-player將cd存成音樂檔\" class=\"headerlink\" title=\"Windows media player將cd存成音樂檔\"></a>Windows media player將cd存成音樂檔</h1><p><a href=\"https://blog.xuite.net/yh96301/blog/47552086-Windows+Media+Player%E5%B0%87CD%E9%9F%B3%E6%A8%82%E8%BD%89%E6%8F%9B%E7%82%BAMP3\">https://blog.xuite.net/yh96301/blog/47552086-Windows+Media+Player%E5%B0%87CD%E9%9F%B3%E6%A8%82%E8%BD%89%E6%8F%9B%E7%82%BAMP3</a>  </p>\n<h1 id=\"合併csv\"><a href=\"#合併csv\" class=\"headerlink\" title=\"合併csv\"></a>合併csv</h1><p>將所有的csv檔案放到一個資料夾，位置任意。<br>開啟cmd，切換到存放csv的資料夾，也可以在csv資料夾中，按住shift加滑鼠右鍵，選擇在此處開啟命令視窗。<br>輸入copy *.csv all-groups.csv，all-group的名字，可以任意。然後按enter，等待完成就可以了。<br>開啟csv資料夾就可以看到all-group.csv  </p>\n","categories":["工程"],"tags":["好用"]},{"title":"米其林一星大腕燒肉","url":"/life/daWan/","content":"<p><img src=\"https://i.imgur.com/F7MlYm4.jpg\" alt=\"img\"></p>\n<a id=\"more\"></a>\n\n<p>這間肉食主義者應該很愛，可以很專精吃到不同部位的肉，整個吃起來比山海樓貴，但沒有比較飽XD。</p>\n<p>總之就是滿滿的肉XD (素食者的哀嚎</p>\n<p><img src=\"https://i.imgur.com/13ZFH2V.jpg\" alt=\"Imgur\"><br><img src=\"https://i.imgur.com/dhozB2b.jpg\" alt=\"Imgur\"><br><img src=\"https://i.imgur.com/KrHVgcl.jpg\" alt=\"Imgur\"><br><img src=\"https://i.imgur.com/cY794O7.jpg\" alt=\"Imgur\"><br><img src=\"https://i.imgur.com/b0CDF7d.jpg\" alt=\"Imgur\"></p>\n<p>還記得來之前我問主管如果吃素怎麼辦，主管說那可能就被裁掉了吧（抖…</p>\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3614.7377932184413!2d121.54804721500652!3d25.04297098396811!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3442abc4e2067da9%3A0xc2018f1e20ab3162!2z5aSn6IWV!5e0!3m2!1szh-TW!2stw!4v1606555757449!5m2!1szh-TW!2stw\" width=\"600\" height=\"450\" frameborder=\"0\" style=\"border:0;\" allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>\n\n<p>這是我第二次吃米其林餐廳，感謝主管，也感謝拍照片的同事。</p>\n","categories":["生活"],"tags":["飲食"]},{"title":"重訓的吃","url":"/life/eat/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(17).jpeg\"></p>\n<p>這篇開始要跟大家分享我怎麼會想開始重訓的，因為受傷的關係一直很怕吃太多又不能做有氧，意外開始飲食控制與重訓的旅程。</p>\n<a id=\"more\"></a>\n\n<iframe src=\"https://docs.google.com/spreadsheets/d/e/2PACX-1vTxm0oa9Wlsf7GkXNT3oMLRL4RCRSmxKKlKoNs80JB3dXsgZtUKqS4Fb9u1a6xJ22Mbea-_PE5G01Wm/pubhtml?gid=0&amp;single=true&amp;widget=true&amp;headers=false\" width=\"550\" height=\"500\"></iframe>\n\n<p>首先從基代與TDEE知道自己每天需要多少熱量跟營養著手，受到節流再開源觀念啟發，先控制每日飲食，配合高低碳做波動再加強運動達到更大熱量赤字。</p>\n<p>因為平常上班時間固定，有重訓中午只想睡覺，索性就變成下午3點到10點才吃東西的17/7斷食，不過如果要這樣還是要尋求專業意見，我只是習慣懶得吃東西並跟大家介紹我的日常，沒有要推廣XD。</p>\n","categories":["生活"],"tags":["運動"]},{"title":"種植介質","url":"/life/medium/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(16).jpeg\"></p>\n<p>不管種什麼東西介質(土壤，水，石頭等)都是第一要務，這篇就讓我們來探討這些介質吧</p>\n<a id=\"more\"></a>\n<p><code>這篇是跟小耕園學習植栽心得。</code></p>\n<h1 id=\"介質\"><a href=\"#介質\" class=\"headerlink\" title=\"介質\"></a>介質</h1><h2 id=\"排水層\"><a href=\"#排水層\" class=\"headerlink\" title=\"排水層\"></a>排水層</h2><ul>\n<li>陶粒: 大顆粒、質地輕、多孔、透氣性好、穩定  </li>\n<li>缽底石: 質地輕、透氣、保水  </li>\n<li>碎竹炭: 質地堅硬、通氣性好、具有良好的吸附能力，抑制細菌  </li>\n<li>綠沸石：用綠沸配土最大的作用在於防止植株根腐爛，有效抑制土壤中有害物質繁殖，提高肉肉抗病抗旱抗逆能力。同時具有吸附緩釋分子能力，緩釋養分，防止燒苗，通氣性好，可長期保持疏鬆，具有貯存和提供氧氮的功能  </li>\n<li>粗椰纖: 可以避免介質流失又能保持良好排水</li>\n</ul>\n<h2 id=\"中層\"><a href=\"#中層\" class=\"headerlink\" title=\"中層\"></a>中層</h2><h2 id=\"土\"><a href=\"#土\" class=\"headerlink\" title=\"土\"></a>土</h2><ul>\n<li><p>泥炭土：又稱黑土、草炭，是古代低溫、濕地的植物遺體，被埋在地下，經數千萬年的堆積，在氣溫較低、雨水較少或缺少空氣的條件下，植物殘體緩慢分解而形成的特殊有機物，多呈棕黃色或淺褐色。也是一種多肉配土的最佳介質。 盆栽常用，管理時最好在介質未完全乾燥之前即應澆水，  久了會軟腐黏膩而降低透氣性與排水性，如果還是密集澆水就很容易造成過度潮濕的爛根現象 </p>\n</li>\n<li><p>火山土：火山土是由火山噴發後的灰燼凝固而成，蘊含多種微量元素和礦物質，這些成分讓火山泥的物理特性十分穩定，並且廣泛應用於各種領域，因其獨具的高通透性與保水性更是廣泛用於多肉植物的栽培基質  </p>\n</li>\n</ul>\n<ul>\n<li>硅藻土：硅藻土是一種優良的基質成分,其吸水、保水性能強，栽培花卉的生理指標和形態指標更優,不易爛根。是作為多肉植物、景天、生石花等鋪面土，十二卷等混合顆粒緩釋肥直接使用，也可以與泥炭土等混合使用  </li>\n</ul>\n<ul>\n<li>赤玉土：由火山灰堆積而成，是運用最廣泛的一種土壤介質。這也是在日本運用最廣泛的一種栽培介質。它是高通透性的火山泥，暗紅色圓狀顆粒，沒有有害細菌，PH值呈微酸。 含有一定磷鉀肥，PH呈微酸性，高通透性，蓄水排水能力佳，無蟲卵細菌 </li>\n</ul>\n<ul>\n<li>鹿沼土：一種罕見的物質，產於鹿沼地區的火山區，是由下層火山土生成，呈火山沙的形式，PH值呈酸性，有很高的通透性、蓄水力和通氣性。產於火山區，是由下層火山土生成，呈火山沙的形式。PH值呈酸性，有很高的通透性、蓄水力和通氣性。尤其適合嫌氣、忌濕、耐瘠薄的植物，如各類盆景、蘭花、高山花卉  </li>\n</ul>\n<h2 id=\"填充\"><a href=\"#填充\" class=\"headerlink\" title=\"填充\"></a>填充</h2><ul>\n<li>白火山岩：又稱火山石，具有保水和透氣的特性，同時質地較硬，比赤玉土還硬，富含矽、鋁鐵、鉀、鈉、鈣、鎂、錳、磷等常量元素以及其它多種微量元素，適合用來種植多肉、國蘭等這類對透氣性要求較高的植物  </li>\n</ul>\n<ul>\n<li>黑火山岩：又稱黑金砂，富士砂，是火山爆發後形成的多孔形石材。具有質地硬朗，良好的通氣排水性能，含多種火山有益元素，在種植上可用於植物混料、鋪面、墊底等方面。適合於仙肉、盆景、蘭花種植等品種  </li>\n</ul>\n<ul>\n<li>椰糠：椰糠是椰子外殼纖維粉末，是加工後的椰子副產物或廢棄物。是從椰子外殼纖維加工過程中脫落下的一種純天然的有機質介質。經加工處理後的椰糠非常適合於培植植物。一、天然、純有機；二、對環境不會造成污染；三、保水性強；四、透氣性佳；五、植物成長最佳的有機介質， 純椰纖排水透氣很好，但夏季可能因此乾的太快，混合泥炭可調整平衡 </li>\n</ul>\n<ul>\n<li>稻殼灰：稻殼灰又稱薰炭，是以稻殼為原料經薰制而成。質量輕，透氣性、保肥性好，吸附性強。PH值呈鹼性，含有植物所需的磷、鉀、鎂等元素。同時稻殼灰有很多的細孔，為微生物提供了良好的生存環境，很好地促進了土壤微生物的活化。含有一定的鉀肥，鹼性比較高，不適用於種植喜酸性土壤的花卉（例如茉莉、梔子），但喜歡偏鹼性土壤的植物就非常適合（例如鐵線蓮）  </li>\n</ul>\n<ul>\n<li>珍珠岩：一種火山噴發的酸性熔岩，經急劇冷卻而成的玻璃質岩石，因其具有珍珠裂隙結構而得名。珍珠岩的本身性質穩定，持水保肥能力強，可用來做盆栽混合物和土壤改良與泥炭土依體積以1：1混合，是良好蘭花栽培介質，  但時間久了很容易崩解而失去功能（用手一捏就碎），  白火山岩比較好    </li>\n</ul>\n<ul>\n<li>蛭 石：蛭石主要作用是增加土壤（介質）的通氣性和保水性。因其易碎，隨著使用時間的延長，容易使介質緻密而失去通氣性和保水性，所以粗的蛭石比細的使用時間長，且效果好。質地輕、保水透氣性好，蛭石效果不若珍珠石  </li>\n</ul>\n<ul>\n<li>彩虹沙：彩虹沙有很好的透氣性，使用彩虹沙配土可以增強土壤的防澇能力，特別適用於大多數喜歡澆水的手賤黨。使用彩虹沙配土的土壤具有較好的持水力不易分解，變碎，不滋生蚊蟲，保肥能力強等特點  </li>\n</ul>\n<ul>\n<li>粗河沙: 常與泥炭土、園林土等混合使用改善土塘結構，增大孔隙度，但久了容易板結    </li>\n</ul>\n<ul>\n<li>鍛燒粘土: 適用於栽培期較長的盆栽介質  </li>\n</ul>\n<ul>\n<li>植金石：植金石也是一種火山石，是火山爆發之後，釋放大量氣體、熱量，經特殊溫度而形成的多孔、體輕、能迅速吸取養分、保持水分的石頭，再經過高科技技術加工而成。因而其具備體輕、排水、保濕、透氣性俱佳的特性。不論單獨使用，或與其他基質混合使用，均可發揮極佳效果  </li>\n</ul>\n<ul>\n<li>虹彩石：也稱彩虹石，是一種配方型介質，各個廠家生產的配方略有不同。一般來說，基本都包含：輕石、沸石、熔岩石、控釋肥等。在植物栽培過程中通常用作底石及鋪面使用  </li>\n</ul>\n<h2 id=\"蘭\"><a href=\"#蘭\" class=\"headerlink\" title=\"蘭\"></a>蘭</h2><ul>\n<li>薇根: 含有2～3%的氮，可慢慢分解釋出  </li>\n<li>蛇木: 排水迅速、通氣性高而保水性低  </li>\n<li>樹皮: 分解時有大量的微生物參與，故氮肥的施用量要較多  </li>\n<li>水苔: 吸水性、保水性特佳  </li>\n<li>岩棉: 歐美盛行用岩棉做養液栽培種植番茄、小黃瓜、甜椒、玫瑰、非洲菊、東亞蘭及蝴蝶蘭等。台灣則應用於蝴蝶蘭及蕙蘭類  </li>\n</ul>\n<h2 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h2><ol>\n<li>粗椰纖鋪底  </li>\n<li>舖底層土  </li>\n<li>舖底肥  </li>\n<li>舖滿土  </li>\n<li>以原盆為模具做出植穴並敲緊土  </li>\n<li>放入苗（注意方向性）  </li>\n<li>澆「定根水」  </li>\n<li>再補滿土  </li>\n</ol>\n<h2 id=\"配土\"><a href=\"#配土\" class=\"headerlink\" title=\"配土\"></a>配土</h2><p>適合多數植物：泥炭土+珍珠岩+赤玉土+稻殼灰\\碎竹炭<br>適合播種育苗：泥炭土+稻殼灰+粗河沙<br>適合扦插育苗：泥炭土+蛭石<br>多肉植物配土比例：泥炭土+椰糠+珍珠岩+粗河沙  </p>\n<h2 id=\"鋪面\"><a href=\"#鋪面\" class=\"headerlink\" title=\"鋪面\"></a>鋪面</h2><ul>\n<li>松鱗: 質地輕、透氣、保水排水性能好、微酸性  </li>\n<li>麥飯石：麥飯石是一種天然的矽酸鹽礦物，含有微量元素能夠穩定和提高、平衡土壤的物理機能，所以它比其它土壤改良劑更有優勢。正因為這樣，麥飯石成為廣大多肉植物愛好者的必備的配土介質。 </li>\n</ul>\n","categories":["生活"],"tags":["植栽"]},{"title":"米其林一星山海樓","url":"/life/mountainAndSea/","content":"<p><img src=\"https://i.imgur.com/7sn3H87.jpg\" alt=\"Imgur\"></p>\n<a id=\"more\"></a>\n\n<p>明福台菜山海樓是間令人難忘的餐廳，裝潢復古華麗，餐點考究，連氣氛都有種走入老上海的感覺。</p>\n<p>因為還有間明福循古台菜也是米其林，不過兩間風格不一樣，記得不要走錯了(我就是走錯那個)。</p>\n<p>記得那天看到許多我沒見過的工夫菜，每道都有吉祥寓意，但我只記得服務生推什麼出來看起來都很好吃。</p>\n<p><img src=\"https://i.imgur.com/kZaybwR.jpg\" alt=\"Imgur\"></p>\n<p>第一道是這個拼盤，一開始就看到整條人參就覺得不得了，白斬雞軟嫩細緻，香腸也不死鹹，直接配蒜就很好吃。</p>\n<p><img src=\"https://i.imgur.com/HJ59eRd.jpg\" alt=\"Imgur\"></p>\n<p>再來是黃瓜鑲肉，看黃瓜切得條條分明，不只好看還很好入口。</p>\n<p><img src=\"https://i.imgur.com/mhngBLR.jpg\" alt=\"Imgur\"><br>不久服務生推出半隻豬?! 正納悶該怎麼吃，不久就又被推回去了，原來只是讓我們拍照，只能說店家真的很對顧客胃口。</p>\n<p><img src=\"https://i.imgur.com/CIkmpDR.jpg\" alt=\"Imgur\"><br><img src=\"https://i.imgur.com/9gtkT7p.jpg\" alt=\"Imgur\"><br><del>最後豬被碎屍萬段</del> 被分成北京烤鴨跟虎咬豬，我很喜歡那個卦包，外皮香甜鬆軟，裡面肉汁飽滿豪好吃啊。</p>\n<p><img src=\"https://i.imgur.com/Ynv2Dp3.jpg\" alt=\"Imgur\"><br>這道不得了，是快失傳的五柳枝魚，聽說是台南古早辦桌菜，五柳是指金針、酸筍、黑木耳、紅蘿蔔和香菇切成絲，醬汁也是酸香爽口。</p>\n<p><img src=\"https://i.imgur.com/1GiAqq7.jpg\" alt=\"Imgur\"><br>山珍海味不能沒有海參，富含膠質，可能還可以美容？  </p>\n<p><img src=\"https://i.imgur.com/GKqHwKg.jpg\" alt=\"Imgur\"><br><img src=\"https://i.imgur.com/riO2ARP.jpg\" alt=\"Imgur\"><br>湯品部分第一道好像也很有名，不過我想不起來了，因為那時候身體還不是很好，餐廳又很冷，第二道剛好讓身體比較溫暖一些，雞湯味道也是很純厚的，下次有去另一家明福再跟大家說湯品味道的差異。</p>\n<p><img src=\"https://i.imgur.com/WEKP2p2.jpg\" alt=\"Imgur\"><br>甜品是檸檬愛玉野薑花(白色那塊)，野薑花很香，跟檸檬搭配下肚之後剛好消除之前大魚大肉的油膩感，整體餐點搭配就像一場戲，演完之後還會有餘韻，跟人想再看一次的感動。</p>\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3614.8847201101776!2d121.52923065011451!3d25.037985983891833!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3442a968c6e42e47%3A0xb2c852ea68392c00!2z5bGx5rW35qiT!5e0!3m2!1szh-TW!2stw!4v1605368633302!5m2!1szh-TW!2stw\" width=\"600\" height=\"450\" frameborder=\"0\" style=\"border:0;\" allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>\n\n<p>這是我第一次吃米其林餐廳，感謝主管，也感謝拍照片的同事。</p>\n","categories":["生活"],"tags":["飲食"]},{"title":"種植守則","url":"/life/plantingRule/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(14).jpeg\"></p>\n<a id=\"more\"></a>\n<p><code>這篇是跟小耕園學習植栽心得。</code></p>\n<h1 id=\"催芽\"><a href=\"#催芽\" class=\"headerlink\" title=\"催芽\"></a>催芽</h1><p>種子要先放衛生紙噴水，在溫暖陽光下發芽再土植，比較難出芽的植株可以先放溫水一晚再放衛生紙(溫湯浸種)，幼苗先用緩效肥促進生長   </p>\n<h1 id=\"間拔\"><a href=\"#間拔\" class=\"headerlink\" title=\"間拔\"></a>間拔</h1><p>去弱留強，選莖粗的苗   </p>\n<h1 id=\"生根\"><a href=\"#生根\" class=\"headerlink\" title=\"生根\"></a>生根</h1><p>香草類植株剪莖放水裡生根再土植，發根前植株要蓋著保濕  </p>\n<h2 id=\"壓條\"><a href=\"#壓條\" class=\"headerlink\" title=\"壓條\"></a>壓條</h2><blockquote>\n<p>把靠近土面的枝條壓入土中固定，等長根後再剪下來    </p>\n</blockquote>\n<h2 id=\"高壓條\"><a href=\"#高壓條\" class=\"headerlink\" title=\"高壓條\"></a>高壓條</h2><blockquote>\n<p>枝條位置太高或太硬，無法直接壓入土中，就把土搬到枝條上包覆，是草&gt;本，通常直接包覆就好；如果是木本，通常會先做環狀剝皮促進發根  </p>\n</blockquote>\n<h1 id=\"澆水\"><a href=\"#澆水\" class=\"headerlink\" title=\"澆水\"></a>澆水</h1><p>『土乾再澆、每澆必濕』，『澆水要暴飲暴食、施肥要少量多餐』  </p>\n<h2 id=\"太乾\"><a href=\"#太乾\" class=\"headerlink\" title=\"太乾\"></a>太乾</h2><blockquote>\n<p>準備一個比花盆大的容器<br>放入花盆後緩緩加水，讓水由下往上滲入<br>如果花盆因為介質太乾太輕而浮起，先暫停等它吸水下沉，不要讓它「翻船」<br>加水到接近盆緣，但不要超過<br>等到盆內界值表面開始出現水滲出且全濕時即可將花盆拿出滴乾，通常 30 ~ 60分鐘即可回魂<br>如果回不來或要很常補水，枯掉的可以做堆肥  </p>\n</blockquote>\n<h2 id=\"板結\"><a href=\"#板結\" class=\"headerlink\" title=\"板結\"></a>板結</h2><p>土壤中有機質含量不足造成溶出的礦物質易結晶而使土壤微粒固結<br>先將土壤澆濕或泡水、等半乾後會比較容易分散，拌入大量有機質如堆肥或基肥、培養土、粗糠等打散後就可以使用  </p>\n<h1 id=\"摘葉\"><a href=\"#摘葉\" class=\"headerlink\" title=\"摘葉\"></a>摘葉</h1><p>要留幾片行光合作用  </p>\n<h1 id=\"種植\"><a href=\"#種植\" class=\"headerlink\" title=\"種植\"></a>種植</h1><p>深不埋心 淺不漏根 </p>\n<blockquote>\n<p>生長期: 氮肥<br>開花前期: 高磷肥催花<br>結果期: 高磷鉀肥幫助果實發育  </p>\n</blockquote>\n<h1 id=\"土耕轉水耕\"><a href=\"#土耕轉水耕\" class=\"headerlink\" title=\"土耕轉水耕\"></a>土耕轉水耕</h1><p>採收時留下粗壯健康莖，剪頂端大概一個手指長的莖，拔除底葉水插生根移到土裡  </p>\n<h1 id=\"水耕轉土耕\"><a href=\"#水耕轉土耕\" class=\"headerlink\" title=\"水耕轉土耕\"></a>水耕轉土耕</h1><p>匍匐莖移除葉子壓條加蓋，避免太陽直曬，生根剪除連接部份莖，移到大容器，再施點肥  </p>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><p>植物不怕水，但怕悶濕<br>舊土曝曬混熟成堆肥<br>除非是原本的植物有土傳性的病蟲害感染，否則健康的土壤中有許多益蟲益菌和植物共生，殺死這些益蟲益菌後植物失去保護反而更容易感染  </p>\n","categories":["生活"],"tags":["植栽"]},{"title":"Kygo, Justin Jesso - Stargazing ft. Justin Jesso","url":"/life/stargazing/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(15).jpeg\"></p>\n<p>在健身房聽到不錯的歌，這篇當歌曲翻譯文章的開端應該很適合，MV意境知道這首歌是小男孩表達對父親的思念，想打造火箭追尋爸爸的蹤跡，不斷仰望星空，不斷追尋父愛，尤其是副歌那串斷斷續續的意境表達不斷追尋但找不回來的感受，有種當初聽到爐心融解或看命運石之門的感受（好啦我很宅）總之希望大家會喜歡。</p>\n<a id=\"more\"></a>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/hEdvvTF5js4\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">情境為主超譯？！版歌詞</span><br><span class=\"line\"></span><br><span class=\"line\">[A]醫生跟家人的對話 </span><br><span class=\"line\">You&#39;re saying it&#39;s hopeless </span><br><span class=\"line\">你說沒希望了</span><br><span class=\"line\">That I should hope less </span><br><span class=\"line\">我也該這麼想</span><br><span class=\"line\">Heaven can help us </span><br><span class=\"line\">只有天堂能幫我們</span><br><span class=\"line\">Well maybe she might </span><br><span class=\"line\">恩... 也許是吧</span><br><span class=\"line\">You say it&#39;s beyond us </span><br><span class=\"line\">你說這超出你們處理範圍了</span><br><span class=\"line\">What is beyond us </span><br><span class=\"line\">是什麼超出了</span><br><span class=\"line\">Let&#39;s see and decide </span><br><span class=\"line\">看看再決定吧</span><br><span class=\"line\"></span><br><span class=\"line\">We&#39;ve been meteoric </span><br><span class=\"line\">我們(醫生)曾是流星</span><br><span class=\"line\">Even before this</span><br><span class=\"line\">很久之前就是了</span><br><span class=\"line\">It&#39;s burns half as long when it&#39;s </span><br><span class=\"line\">當人們看到雙倍閃耀的同時</span><br><span class=\"line\">Twice as bright</span><br><span class=\"line\">有一半是燃燒著自己的(醫生也是很花心力救治)</span><br><span class=\"line\"></span><br><span class=\"line\">So if it&#39;s beyond us </span><br><span class=\"line\">所以如果你們(醫生)說沒辦法了</span><br><span class=\"line\">Then it&#39;s beyond us </span><br><span class=\"line\">那應該就真的沒辦法了  </span><br><span class=\"line\">Let&#39;s see and decide</span><br><span class=\"line\">看著辦吧  </span><br><span class=\"line\"></span><br><span class=\"line\">[B]小男孩的話</span><br><span class=\"line\">And I will still be here </span><br><span class=\"line\">而我會一直在這</span><br><span class=\"line\">stargazing </span><br><span class=\"line\">仰望星空</span><br><span class=\"line\">I still look up look up look up for love </span><br><span class=\"line\">持續追尋爸爸的身影</span><br><span class=\"line\">I will still be here </span><br><span class=\"line\">一直持續的</span><br><span class=\"line\">stargazing </span><br><span class=\"line\">仰望星空</span><br><span class=\"line\">I still look up look up look up for love </span><br><span class=\"line\">持續追尋爸爸的身影</span><br><span class=\"line\"></span><br><span class=\"line\">[C]不斷的嘗試設計火箭</span><br><span class=\"line\">Don&#39;t you, give up, for me</span><br><span class=\"line\">Don&#39;t fall, don&#39;t give up, for love</span><br><span class=\"line\"> </span><br><span class=\"line\">[A]小男孩對醫生的心裡話</span><br><span class=\"line\">I&#39;m trying to save us</span><br><span class=\"line\">我試著把爸爸找回來</span><br><span class=\"line\">You don&#39;t wanna save us</span><br><span class=\"line\">你們(醫生)不也這樣想嗎？</span><br><span class=\"line\">You blame human nature and </span><br><span class=\"line\">你們抱怨病患都這樣</span><br><span class=\"line\">Say it&#39;s unkind,</span><br><span class=\"line\">對醫護人員不友善</span><br><span class=\"line\">Let&#39;s make up our own minds </span><br><span class=\"line\">算了，重新整理思緒</span><br><span class=\"line\"></span><br><span class=\"line\">We&#39;ve got our whole lives </span><br><span class=\"line\">就算用盡一生，也要造出火箭</span><br><span class=\"line\">Let&#39;s see and decide</span><br><span class=\"line\">我一定會做出來的</span><br><span class=\"line\">Decide</span><br><span class=\"line\">你們看著吧</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\">[B]不放棄的小男孩</span><br><span class=\"line\">And I will still be here </span><br><span class=\"line\">而我會一直在這</span><br><span class=\"line\">stargazing </span><br><span class=\"line\">仰望星空</span><br><span class=\"line\">I still look up look up look up for love </span><br><span class=\"line\">持續追尋爸爸的身影</span><br><span class=\"line\">stars don&#39;t disappear  </span><br><span class=\"line\">星星(小男孩)不放棄</span><br><span class=\"line\">The keep blazing </span><br><span class=\"line\">永遠懷抱希望</span><br><span class=\"line\">Even When the night is over </span><br><span class=\"line\">當造出來之後</span><br><span class=\"line\">That&#39;s how I find the light</span><br><span class=\"line\">一定會找到爸爸的</span><br><span class=\"line\">That&#39;s how I find the light</span><br><span class=\"line\">一定會的</span><br></pre></td></tr></table></figure>","categories":["生活"],"tags":["音樂"]},{"title":"閱讀原子習慣","url":"/manager/atomichabit/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/2020-10-12.jpeg\"></p>\n<p>複利效應：堅持微小正向的改變<br>千里之行 積於跬步<br>重點在達成目標的過程<br>達成的那一刻就停止進步了<br>習慣成自然<br>想要比得到的時候有更多吸引力<br>塑造文化環境，之後就近朱者赤，近墨者黑<br>把時間花在讓未來更便利的活動是有價值的<br>讓正確的事容易做，錯誤的事難做，習慣養成才會是正向的<br>不要一開始設定太難的目標，之後才好維持<br>不要放棄好習慣超過2次<br>每個人天賦不同，選擇適合自己的習慣也會做的比較好<br>適合自己的事會進入心流，也比其他人容易達成<br>一開始選對戰場比較重要<br>難度適當的事避免太簡單無聊或太難失望<br>要注意避免習慣導致的粗心  </p>\n<a id=\"more\"></a>\n\n<h1 id=\"提示顯而易見：好做\"><a href=\"#提示顯而易見：好做\" class=\"headerlink\" title=\"提示顯而易見：好做\"></a>提示顯而易見：好做</h1><p>如何建立新習慣：多嘗試，擇優（寫下來，明確時間地點行為）<br>如何選擇：選能得到成長回饋的<br>避免壞習慣：不斷擇優（讓壞習慣難做）<br>打造好環境：提前準備，預想防範（創造明確提示，自然融入，讓好習慣暗示顯而易見）<br>永遠無法避免壞習慣：認同，一開始都會先用方便的方式，再不斷修正<br>如何培養自制力：打造環境，當到那邊自然告訴自己該做什麼（避免壞行為提示）  </p>\n<h1 id=\"讓習慣有吸引力：會想持續\"><a href=\"#讓習慣有吸引力：會想持續\" class=\"headerlink\" title=\"讓習慣有吸引力：會想持續\"></a>讓習慣有吸引力：會想持續</h1><p>習慣無聊了：嘗試新方法，順便優化原方法（調整心態，想要後接著做需要）<br>違反社會常理：不危害人身跟道德，值得去探索  </p>\n<h1 id=\"行動輕而易舉：-容易持續\"><a href=\"#行動輕而易舉：-容易持續\" class=\"headerlink\" title=\"行動輕而易舉： 容易持續\"></a>行動輕而易舉： 容易持續</h1><p>無法開始行動：把做法步驟條列，按表操課（降低阻力）<br>無法自律：問自己真的想要這樣嗎？真的確定那已經是種改變不了的習慣，那就不要改了（打造環境）<br>培養習慣要多久：約莫2-4週（沒有限定，但最好小到可以2分鐘達成）<br>改變如何容易發生：一次改一點<br>如何小到有用：融入生活（方便自動化）  </p>\n<h1 id=\"獎賞令人滿意：覺得值得\"><a href=\"#獎賞令人滿意：覺得值得\" class=\"headerlink\" title=\"獎賞令人滿意：覺得值得\"></a>獎賞令人滿意：覺得值得</h1><p>一項最佳習慣：能讓之後生活更好的習慣<br>如何維持：些微改變一定造成不同結果，些微回饋是成長動力（找人督促，錯過不超過2次）<br>如何負責養成的習慣：全然接受<br>如何回歸正軌：不斷細微修正<br>如何追蹤：時刻反思（不中斷的紀錄下來）  </p>\n<h1 id=\"改變\"><a href=\"#改變\" class=\"headerlink\" title=\"改變\"></a>改變</h1><ol>\n<li>結果：想成為什麼樣的人  </li>\n<li>過程：累積原子習慣  </li>\n<li>信念：每個小改變都幫助自己成為那樣的人  </li>\n</ol>\n<h1 id=\"改變行為法則，重複執行，持續修正直到最好\"><a href=\"#改變行為法則，重複執行，持續修正直到最好\" class=\"headerlink\" title=\"改變行為法則，重複執行，持續修正直到最好\"></a>改變行為法則，重複執行，持續修正直到最好</h1><ol>\n<li>明顯提示，能見度（養）：取得顧客注意，顯而易見  </li>\n<li>渴望，認同度（套）：讓顧客不經意想到你，覺得自己需要你，覺得自己有能力控制      </li>\n<li>回應，易用度（套）：更簡單的使用你的產品，除去誘惑    </li>\n<li>獎賞回饋，黏滯性（殺）：上癮了離不開，覺得自己在做對的事      </li>\n</ol>\n","categories":["管理"],"tags":["文書"]},{"title":"圖書宣傳","url":"/manager/book/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/suzuo.jpg\">  </p>\n<p>《清初蘇州崑劇劇壇研究》是胞兄寫的書，有興趣歡迎到以下連結。</p>\n<a id=\"more\"></a>\n\n<p><a href=\"http://www.eslite.com/product.aspx?pgid=1001116742881752\">誠品</a><br><a href=\"https://www.books.com.tw/products/0010873984?loc=M_0016_047\">博客來</a></p>\n<p>或github聯繫我唷。</p>\n","categories":["管理"],"tags":["文書"]},{"title":"閱讀感想","url":"/manager/cycle/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(30).jpeg\"></p>\n<p>這篇提到我對讀書方法的一些感悟，大家可以參考看看</p>\n<a id=\"more\"></a>\n\n<p>OKR：做最重要的事<br>如果做不到 (機會效應：刻意製造混亂讓自己成長 刻意練習：挑戰自己做不到的事)<br>挑戰時知道關鍵 (目標：找出事情瓶頸)<br>每次改變一點克服關鍵 (原子習慣：讓事情容易重複執行)<br>克服時會有充實感 (心流：專注做事時的感受)<br>遇到挫折仍願意不斷用正確方法嘗試 (高績效心智：做事要聰明有毅力)<br>經過反覆驗證後得到真實（真確：客觀評估）  </p>\n<h1 id=\"內外雙循環\"><a href=\"#內外雙循環\" class=\"headerlink\" title=\"內外雙循環\"></a>內外雙循環</h1><p>閱讀-思考-可行計畫-行動-改善行動  </p>\n<ol>\n<li>內：閱讀-思考-可行計畫  </li>\n<li>外：可行計畫-行動-改善行動  </li>\n</ol>\n<h1 id=\"閱讀-思考\"><a href=\"#閱讀-思考\" class=\"headerlink\" title=\"閱讀-思考\"></a>閱讀-思考</h1><p>重點式閱讀到探求式閱讀<br>0. 先看目錄，思考這本書怎麼看比較好  </p>\n<ol>\n<li>只看書上寫的重點  </li>\n<li>只寫書上重點  </li>\n<li>知道自己極限（不想再看了），從一週看三本書，每本只看2章到2週看一本書，一次看半本，但邊看邊想，不斷訓練速度  </li>\n<li>只寫自己看完後想到的  </li>\n<li>用於生活  </li>\n<li>突破2章限制，寫下可以用在生活的策略並實際去做  </li>\n<li>從做的過程持續想怎麼做更好  </li>\n<li>如果沒有更好再回到第7點修正  </li>\n<li>一段時間覺得有點厭倦這種模式就先抽離一段時間，休息夠了再回來看  </li>\n</ol>\n","categories":["管理"],"tags":["文書"]},{"title":"閱讀性格的DISA","url":"/manager/disa/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(7).jpeg\"></p>\n<p>GTD探討怎麼做(How)，但過程中會牽扯到很多人，尤其是我們的上司，DISA是(Who)。</p>\n<a id=\"more\"></a>\n\n<p>源自於美國心理學家威廉．馬斯頓（William Marston）的 DISC 行為理論，埃里克森延伸成 DISA 性格學。</p>\n<h1 id=\"紅色——支配型（Dominance）獅\"><a href=\"#紅色——支配型（Dominance）獅\" class=\"headerlink\" title=\"紅色——支配型（Dominance）獅\"></a>紅色——支配型（Dominance）獅</h1><p>外向、屬於行動派積極主動解決問題，注重效率，結果和目標<br>取得他的信任  </p>\n<h1 id=\"黃色——鼓舞型（Inspiration）鳳凰\"><a href=\"#黃色——鼓舞型（Inspiration）鳳凰\" class=\"headerlink\" title=\"黃色——鼓舞型（Inspiration）鳳凰\"></a>黃色——鼓舞型（Inspiration）鳳凰</h1><p>外向、屬於行動派樂觀、有創意，注重人際關係，做事效率高，但厭倦細節<br>成為他唯一朋友  </p>\n<h1 id=\"綠色——穩定型（Stability）無尾熊\"><a href=\"#綠色——穩定型（Stability）無尾熊\" class=\"headerlink\" title=\"綠色——穩定型（Stability）無尾熊\"></a>綠色——穩定型（Stability）無尾熊</h1><p>保守和內向，工作上以團隊氣氛融洽、沒有任何衝突為優先考量；喜歡幫助別人，是很好的聽眾<br>製造衝突他就會因怕跟你吵而被說服  </p>\n<h1 id=\"藍色——分析型（Analytical-ability）貓頭鷹\"><a href=\"#藍色——分析型（Analytical-ability）貓頭鷹\" class=\"headerlink\" title=\"藍色——分析型（Analytical ability）貓頭鷹\"></a>藍色——分析型（Analytical ability）貓頭鷹</h1><p>內向和任務導向，喜歡事情井然有序，偏好單打獨鬥；重視品質，對任何細節都非常要求<br>明確說出你不想要的原因  </p>\n<h1 id=\"總結\"><a href=\"#總結\" class=\"headerlink\" title=\"總結\"></a>總結</h1><p>DI外向幫對方想，SA內向替自己想，可以用作向上管理。    </p>\n","categories":["管理"],"tags":["文書"]},{"title":"閱讀心流","url":"/manager/flow/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/2020-10-14.jpeg\"></p>\n<p>因單純想完成某件事，在執行中意識和諧有秩序而感到快樂富足的心理狀態，是一種禪，讓人拋下自我然後重新建立更大的自我，達成有挑戰的事不一定都是好的<br>身體心流在持續精進自己極限  </p>\n<a id=\"more\"></a>\n\n<p>本體焦慮/內在焦慮：缺乏內在秩序而焦慮的狀態<br>極度專注模式是自然將意識與書本文字交流時達成的狀態<br>事情可以分外在跟內在處理，外在安全感可以增加武裝，內在是知道無法避免，但求內心安定  </p>\n<h1 id=\"樂趣8大要素\"><a href=\"#樂趣8大要素\" class=\"headerlink\" title=\"樂趣8大要素\"></a>樂趣8大要素</h1><ol>\n<li>達成有挑戰但有機會成功的事</li>\n<li>必須投注心力</li>\n<li>有明確目標</li>\n<li>有立即回饋</li>\n<li>因為全心投入而忘卻煩惱</li>\n<li>能掌控自己行動</li>\n<li>忘卻時間流逝</li>\n<li>享受這種體驗過程而且想再來一次</li>\n</ol>\n<h1 id=\"遊戲體驗探索創造\"><a href=\"#遊戲體驗探索創造\" class=\"headerlink\" title=\"遊戲體驗探索創造\"></a>遊戲體驗探索創造</h1><ol>\n<li>競爭型提升自身技能面對挑戰</li>\n<li>投機型掌控不可知的幻覺</li>\n<li>暈眩型改變現實認知帶來樂趣</li>\n<li>模仿型忘卻自我</li>\n</ol>\n<h1 id=\"自成目標家庭\"><a href=\"#自成目標家庭\" class=\"headerlink\" title=\"自成目標家庭\"></a>自成目標家庭</h1><ol>\n<li>親子間目標與回饋明確</li>\n<li>父母對自己在乎的事情也在乎</li>\n<li>自己有選擇</li>\n<li>親子關係的信任</li>\n<li>放手讓孩子挑戰</li>\n</ol>\n<h1 id=\"培養抵抗挫折能力\"><a href=\"#培養抵抗挫折能力\" class=\"headerlink\" title=\"培養抵抗挫折能力\"></a>培養抵抗挫折能力</h1><ol>\n<li>不以自我為中心</li>\n<li>對不確定事情開放樂觀</li>\n<li>願意投入心力，找出路</li>\n</ol>\n<h1 id=\"心流模式\"><a href=\"#心流模式\" class=\"headerlink\" title=\"心流模式\"></a>心流模式</h1><ol>\n<li>設立目標</li>\n<li>全心投入</li>\n<li>注意當下發生什麼</li>\n<li>從善如流</li>\n</ol>\n<h1 id=\"感想\"><a href=\"#感想\" class=\"headerlink\" title=\"感想\"></a>感想</h1><p>人生有了要一輩子做的目標就能走的有意義<br>而我一輩子的目標就是想幫助我接觸到的人  </p>\n","categories":["管理"],"tags":["文書"]},{"title":"閱讀高績效心智","url":"/manager/greatWork/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/2020-10-13.jpeg\"></p>\n<ol>\n<li>找最重要的事，全心投入  </li>\n<li>比起目標，價值更重要  </li>\n<li>疊代學習，不斷精進  </li>\n<li>找到自己有熱情的定位  </li>\n<li>說服人，克服阻力  </li>\n<li>避免浪費時間的工作  </li>\n<li>參與好的團隊，讓團隊更聰明  </li>\n</ol>\n<a id=\"more\"></a>\n\n<h2 id=\"施行方法\"><a href=\"#施行方法\" class=\"headerlink\" title=\"施行方法\"></a>施行方法</h2><h3 id=\"雙重專注\"><a href=\"#雙重專注\" class=\"headerlink\" title=\"雙重專注\"></a>雙重專注</h3><ol>\n<li>減掉所以不必要的  </li>\n<li>不留後路，抗拒誘惑  </li>\n</ol>\n<h3 id=\"創造價值\"><a href=\"#創造價值\" class=\"headerlink\" title=\"創造價值\"></a>創造價值</h3><ol>\n<li>減少沒價值事務  </li>\n<li>做對，讓人驚艷的事  </li>\n<li>自己五星評分  </li>\n<li>持續改進  </li>\n</ol>\n<h3 id=\"學習迴圈\"><a href=\"#學習迴圈\" class=\"headerlink\" title=\"學習迴圈\"></a>學習迴圈</h3><ol>\n<li>做/重做  </li>\n<li>衡量  </li>\n<li>回饋  </li>\n<li>修正後回到1  </li>\n</ol>\n<h3 id=\"策略\"><a href=\"#策略\" class=\"headerlink\" title=\"策略\"></a>策略</h3><ol>\n<li>每天留一定時間在想增進的技能  </li>\n<li>技能分解成每天可改進的小步驟  </li>\n<li>注意小步驟的改善  </li>\n<li>尋求簡單回饋  </li>\n<li>能不能更好？  </li>\n</ol>\n<h3 id=\"使命感金字塔\"><a href=\"#使命感金字塔\" class=\"headerlink\" title=\"使命感金字塔\"></a>使命感金字塔</h3><ol>\n<li>追求強烈社會使命感  </li>\n<li>發展各人意義  </li>\n<li>創造價值  </li>\n</ol>\n","categories":["管理"],"tags":["文書"]},{"title":"閱讀Google","url":"/manager/google/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(33).jpeg\"></p>\n<p>Google是我很景仰的公司，本業瀏覽器，搜尋引擎，Gmail跟地圖都非常方便，雲端硬碟裡各個office軟體，colab也成了我每天必須使用的工具，而GCP，Youtube則是工作跟學各種課程必備工具，每當使用時總會好奇這家公司為什麼可以做到這些，為了瞭解這家公司文化跟處世方法，我決定開始閱讀Google。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"《Google-Work-Rules》\"><a href=\"#《Google-Work-Rules》\" class=\"headerlink\" title=\"《Google Work Rules》\"></a>《Google Work Rules》</h1><p><strong>文化</strong><br>《Google信條》  </p>\n<ol>\n<li>使用者至上  </li>\n<li>一切水到渠成  </li>\n<li>專心做好一件事，還要做到完美  </li>\n<li>快比慢好  </li>\n<li>網路上講民主  </li>\n<li>資訊需求無所不在  </li>\n<li>賺錢不必爲惡  </li>\n<li>資訊無國界  </li>\n<li>資訊無止盡  </li>\n<li>認真不在穿著  </li>\n<li>精益求精  </li>\n</ol>\n<p><strong>策略</strong><br>《翻轉工作10守則》  </p>\n<ol>\n<li>找到工作意義  </li>\n<li>信任員工，別只聽顧客的，要以技術洞見為基礎    </li>\n<li>結交比自己厲害的人   </li>\n<li>員工發展與績效脫鉤  </li>\n<li>聚焦頂尖與墊底員工  </li>\n<li>能省則省，該花就花  </li>\n<li>薪資不公平才公平  </li>\n<li>暗示好行為  </li>\n<li>預防福利當權利心態  </li>\n<li>樂於其中，再來一次  </li>\n</ol>\n<p>《70/20/10法則》<br>70%:核心事務<br>20%:初步成功產品<br>10%:創新  </p>\n<p><strong>人才</strong><br>《優秀人才的特質》  </p>\n<ol>\n<li>聰明，肯學，適應力佳，接受失敗，從錯誤中學習  </li>\n<li>不自我，不侷限達成目標過程，不抗拒跟不喜歡的人共事  </li>\n<li>像Google的感覺，善待他人，專業且有趣    </li>\n<li>通才  </li>\n</ol>\n<p>《好主管特質》  </p>\n<ol>\n<li>扮演良師  </li>\n<li>懂得授權  </li>\n<li>關心團隊成員成功  </li>\n<li>成果導向  </li>\n<li>溝通 聆聽 分享  </li>\n<li>幫成員規劃職涯  </li>\n<li>明確團隊願景  </li>\n<li>技術專業<br>員工可以用這些特質調查主管優劣  </li>\n</ol>\n<p><strong>決策</strong><br>大家一起討論出共識，但異議必須存在<br>包容，合作，平等<br>決策者必須有耐心(Patience)，資訊(Information)，選擇(Alternative)<br>守時，專住在會議本身  </p>\n<p><strong>溝通</strong><br>Bill Gates: 力量不是來自保留知識，而是在分享知識<br>每個員工每季向全公司更新他們的OKRs (包含CEO)<br>溝通是否會強化想讓所有人知道的核心主題<br>溝通有效嗎? (必須要有新鮮的內容)<br>溝通必須有趣好玩或具有啟發性<br>溝通訊息必須真實<br>溝通是否傳達給適當的群組<br>使用了對的媒介嗎?<br>誠實、謙遜，為不時之需預存好信譽  </p>\n<p><strong>創新</strong><br>新奇並且”非常”實用<br>是否要進行創新的三要件  </p>\n<ol>\n<li>大挑戰或是大機會  </li>\n<li>想要重新開始  </li>\n<li>在不遠的未來必須可以達成  </li>\n</ol>\n<p><strong>必要的條件</strong>  </p>\n<ol>\n<li>別探索空無一人的領域  </li>\n<li>是否有相對應的技術  </li>\n</ol>\n","categories":["管理"],"tags":["文書"]},{"title":"閱讀高效能的待辦事項管理法","url":"/manager/gtd/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(6).jpeg\"></p>\n<p>Getting Things Done(GTD)在使用OKR確認好需要做什麼(What)之後，探討怎麼做(How)</p>\n<a id=\"more\"></a>\n\n<h1 id=\"事情分類處理流程\"><a href=\"#事情分類處理流程\" class=\"headerlink\" title=\"事情分類處理流程\"></a>事情分類處理流程</h1><h2 id=\"暫時不需行動\"><a href=\"#暫時不需行動\" class=\"headerlink\" title=\"暫時不需行動\"></a>暫時不需行動</h2><p>1.參考資料In-basket(telegram記錄下來，或google calendar事件)<br>2.有空再做的事(telegram紀錄下來的事明天再分類整理)<br>3.垃圾(沒意義資訊或整理完資訊直接刪除)  </p>\n<h2 id=\"需要行動\"><a href=\"#需要行動\" class=\"headerlink\" title=\"需要行動\"></a>需要行動</h2><p>1.project<br>定目標定期追蹤<br>2.task<br>耗時短(2分鐘內)立即完成，長的交給適合的人做(快又不出錯)，如果特定時間要做先寫入google calendar   </p>\n<h1 id=\"持續追蹤\"><a href=\"#持續追蹤\" class=\"headerlink\" title=\"持續追蹤\"></a>持續追蹤</h1><p>每天review清理In-basket<br>1.工作量太大<br>2.有些事做不完<br>3.忘了處理<br>評估是否超出能力範圍(斷捨離，尋求協助)確實做GTD </p>\n","categories":["管理"],"tags":["文書"]},{"title":"閱讀OKR做最重要的事","url":"/manager/okr/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(5).jpeg\"></p>\n<p>Objectives and Key Results(OKR)是Google績效考核的一環，我們熟知的Key Performance Indicator(KPI)是上對下，OKR主張讓員工自動自發，這篇文章主要在介紹各種績效標準，這也是我回公司讀的第一本書。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"KPI-Key-Performance-Indicator-關鍵績效指標\"><a href=\"#KPI-Key-Performance-Indicator-關鍵績效指標\" class=\"headerlink\" title=\"KPI(Key Performance Indicator)關鍵績效指標\"></a>KPI(Key Performance Indicator)關鍵績效指標</h1><p>代表的是你與團隊的「完成度」，就像「里程表」<br>KPI用來判斷還需要多久才能完成<br>好的KPI應該具備三樣特質：可衡量、普遍性、前瞻性  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.可衡量：必須是有意義的評斷標準。如之前提到的「到訪率vs購買率」，或「時間vs利潤」，雖然都是量化指標，但意義與貢獻度完全不同。同樣的，「提案數vs達成數」，雖然都是量化目標，但哪個才是較優的KPI？你心裡應該有答案。</span><br><span class=\"line\"></span><br><span class=\"line\">2.普遍性：這些指標不只能用在一個員工，還能用在其他員工上，就算他們個性、做事方法完全不同，這樣的KPI才是好的KPI。</span><br><span class=\"line\"></span><br><span class=\"line\">例如被分配到難纏客戶的員工，談成一件案子的難度是不是比較高？而本來就已經談的差不多的客戶，接手的人是不是就比較容易？如果兩個人都以談成交易案件數量當成KPI，是不是不太公平？</span><br><span class=\"line\"></span><br><span class=\"line\">3.前瞻性：KPI不應該只侷限在「過去到現在」完成了什麼，這是落後指標；而應該是「現在到未來」應該做到什麼，這才是領先指標。而且KPI不應該是年初訂下後，就一成不變地用到年底。如果6月就發現既定目標不可能達成，卻一直堅持用到12月，每個員工年底的成績當然都不好看。管理的目的在激發鬥志，而非創造挫折感或處罰。</span><br><span class=\"line\"></span><br><span class=\"line\">KPI不能缺少的要素</span><br><span class=\"line\">首先，當然是可以量化的表現。與其談公司要成為業界第一，不如談做到那些指標可以成為第一。這包括以下5個面向：</span><br><span class=\"line\"></span><br><span class=\"line\">1.對比：包括自己的歷史紀錄，與對手（企業）</span><br><span class=\"line\"></span><br><span class=\"line\">2.改善：面對問題如何解決，在現有達成率上更進一步。</span><br><span class=\"line\"></span><br><span class=\"line\">3.提醒：何種狀況下，例如1個月或3個月，達成率不到50%，就該提醒成員，或是每半年一次總檢討。</span><br><span class=\"line\"></span><br><span class=\"line\">4.分析：為何A方案目前的達成率低於預期，原因何在？假設如果改成Ｂ方案，會不會更好？</span><br><span class=\"line\"></span><br><span class=\"line\">5.風險：掌握以往或到目前為止所碰到的變數，為未來可能發生的風險制定應變計畫。</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"OKR-Objectives-and-Key-Results-目標與關鍵成果\"><a href=\"#OKR-Objectives-and-Key-Results-目標與關鍵成果\" class=\"headerlink\" title=\"OKR(Objectives and Key Results)目標與關鍵成果\"></a>OKR(Objectives and Key Results)目標與關鍵成果</h1><p>代表的是你與團隊的「方向」，就像「指南針」<br>OKR用來找到對的方向<br>支持工作的行動，最高層級與公司使命，核心價值相關，例行性事務不需要OKRs<br>1.專注投入優先事項，短中長OKR<br>2.將目標跟團隊結合<br>3.持續追蹤<br>4.激發潛能，突破成就<br>1個主目標，1-3,最多5個子目標，子目標可能是他人的主目標，串起一個樹狀結構，大家朝同個主目標前進，子目標有0-0.3（未達成）0.4-0.6（部分達成）0.7-1(達成）,目標可視情況改進替換，找最有傑出績效目標，未達成目標也要想遇到什麼障礙，該怎麼改進，目標需具體實際，公開透明，有挑戰性，知道該如何與何時達成，關鍵結果需額外關注可升為目標，Google將OKR分決心達成與艱難達成2種，追求艱難目標就算沒達成也會得到巨大成就  </p>\n<h2 id=\"季初OKR\"><a href=\"#季初OKR\" class=\"headerlink\" title=\"季初OKR\"></a>季初OKR</h2><p>其中的戴明循環PDCA：<br>Plan 計劃<br>Do 執行<br>Check 成效檢查<br>Act 制定下次行動    </p>\n<h2 id=\"季末OKR\"><a href=\"#季末OKR\" class=\"headerlink\" title=\"季末OKR\"></a>季末OKR</h2><p>由上到下制定OKR，OKR裡一個目標：<br>O（目標）: 打造業內最好的產品<br>KR1（關鍵結果 1): 可用性提高 99.5%<br>KR2（關鍵結果 2): API 響應時間 500 ms<br>KR3（關鍵結果 3): 0 安全事故<br>制訂時最好以SMART原則確保目標可行  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">OKR應用時的一般原則</span><br><span class=\"line\">1.明確（significant）：專注於達成特定結果。</span><br><span class=\"line\"></span><br><span class=\"line\">2.具體（concrete）：達成結果的方法必須具體可行。</span><br><span class=\"line\"></span><br><span class=\"line\">3.行動導向（action-oriented）：能夠化成具體行動，且可被衡量。</span><br><span class=\"line\"></span><br><span class=\"line\">4.願景（inspirational）：讓團隊能達成看起來有難度卻並非不可能之事。</span><br><span class=\"line\"></span><br><span class=\"line\">OKR的陷阱與限制</span><br><span class=\"line\">不少企業都證明OKR有效，但並非一把OKR搬出來就萬事OK。可能的問題包括：</span><br><span class=\"line\"></span><br><span class=\"line\">1.目標太過遠大，以致根本無法達成：確實，OKR的目標必須能夠激勵人心，但千萬要腳踏實地，類似營業額年成長500％之類的目標，雖然不是完全不可能，但實際達成機率太低。</span><br><span class=\"line\"></span><br><span class=\"line\">2.目標太多：根據統計，一般企業年度的OKR計畫最好限制在4至6個，超過這個數量就有可能難以達到。</span><br><span class=\"line\"></span><br><span class=\"line\">3.關鍵結果不夠明確：類似銷售額增加、瀏覽率提高，雖然聽起來不錯，但增加多少、提高多少，實際數字不夠明確才是問題。</span><br><span class=\"line\"></span><br><span class=\"line\">4.資源配合不上：這種現象經常出現在缺乏溝通時，如果第一線猛衝，後勤卻配合不上，拿到的戰果也很可能拱手送人。</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"CFR-Conversations-Feedback-and-Recognitions\"><a href=\"#CFR-Conversations-Feedback-and-Recognitions\" class=\"headerlink\" title=\"CFR(Conversations, Feedback and Recognitions)\"></a>CFR(Conversations, Feedback and Recognitions)</h1><p>相較OKR著重在人的情感<br>對話，回饋，讚揚<br>人際支援，善意表現  </p>\n<p>績效對談<br>員工<br>是否達成目標？知道各方面機會？工作跟主管目標一致？可以為主管提供什麼回饋？<br>主管<br>員工目標跟責任？實際表現？不佳如何改正？出色如何維持？投入工作情況？是否知道自己該關注的？<br>客戶至上，從連結創作價值，不必自己擁有內容，提供管道，從中牟利，社群創造的小眾經濟可能比主流大，公開，透明，創新<br>OKR 如果3.0以下表示不佳，連續幾季3.7以上通常會被升遷 </p>\n","categories":["管理"],"tags":["文書"]},{"title":"閱讀目標","url":"/manager/target/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(0).jpeg\"></p>\n<ol>\n<li>目標需簡單明確  </li>\n<li>表達目標方式為增加有效產出，減少存貨與營運費用  </li>\n<li>能從生活學習方法（遷移學習  </li>\n<li>要有知道瓶頸的洞察力，並解決他，追求局部效益沒用   </li>\n<li>瓶頸與非瓶頸資源看供需法則，供&gt;需：非瓶頸，供&lt;需：瓶頸  </li>\n<li>黑貓(老設備)白貓(新設備)，能抓老鼠(完成訂單)就是好貓  </li>\n<li>瞎忙沒用，產出至上  </li>\n</ol>\n<a id=\"more\"></a>\n\n<h1 id=\"TOC制約法則-theory-of-constraints\"><a href=\"#TOC制約法則-theory-of-constraints\" class=\"headerlink\" title=\"TOC制約法則(theory of constraints)\"></a>TOC制約法則(theory of constraints)</h1><ol>\n<li>找出制約因素  </li>\n<li>決定如何利用他  </li>\n<li>讓企業所有活動服從2的措施  </li>\n<li>打破瓶頸，鬆綁制約  </li>\n<li>重回1持續改善  </li>\n</ol>\n<h1 id=\"持續改善六個w\"><a href=\"#持續改善六個w\" class=\"headerlink\" title=\"持續改善六個w\"></a>持續改善六個w</h1><ol>\n<li>Who:了解自身能力與資源  </li>\n<li>Where:朝什麼方向改進  </li>\n<li>What:需改進什麼，知道自己要什麼  </li>\n<li>Why:為什麼要改，有更好的方式嗎  </li>\n<li>How:如何改變  </li>\n<li>When:什麼時機要進行  </li>\n</ol>\n<h1 id=\"SMART的設定目標\"><a href=\"#SMART的設定目標\" class=\"headerlink\" title=\"SMART的設定目標\"></a>SMART的設定目標</h1><ol>\n<li>具體(specific)：明確執行過程    </li>\n<li>可衡量(measurable)：可能遇到的阻礙與願意付出的代價    </li>\n<li>可實現(attainable):可分短中長期，有明確行動提示  </li>\n<li>合理(realistic)/相關(relevant)：需要考慮風險，子目標需與最終目標相關  </li>\n<li>有時限(time-targeted)：需限制時間  </li>\n</ol>\n<h1 id=\"執行時\"><a href=\"#執行時\" class=\"headerlink\" title=\"執行時\"></a>執行時</h1><ol>\n<li>知道目前自己有哪些資源，設定目標並寫下來  </li>\n<li>慎選目標，明確執行，探索自身需求選與實際需求或未來成功相關，不吝尋求幫助或幫助人  </li>\n<li>堅持，堅持，再堅持，保持熱誠與積極向上的心，相信自己會成功  </li>\n<li>無論成功與否要總結  </li>\n</ol>\n","categories":["管理"],"tags":["文書"]},{"title":"118. Pascal's Triangle","url":"/interview/118/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(28).jpeg\"></p>\n<p>In Pascal’s triangle, each number is the sum of the two numbers directly above it.</p>\n<p>Example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: 5</span><br><span class=\"line\">Output:</span><br><span class=\"line\">[</span><br><span class=\"line\">     [1],</span><br><span class=\"line\">    [1,1],</span><br><span class=\"line\">   [1,2,1],</span><br><span class=\"line\">  [1,3,3,1],</span><br><span class=\"line\"> [1,4,6,4,1]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n\n<p>想起一開始學Java用雙迴圈解(遠目)，當然可以用Python做一次，但對O(nˆ2)不太滿意，就參考網友動態規劃的做法。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/118-Pascals-Triangle?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"122. Best Time to Buy and Sell Stock II","url":"/interview/122/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(23).jpeg\"></p>\n<p>Say you have an array prices for which the ith element is the price of a given stock on day i.</p>\n<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).</p>\n<p>Note: You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [7,1,5,3,6,4]</span><br><span class=\"line\">Output: 7</span><br><span class=\"line\">Explanation: Buy on day 2 (price &#x3D; 1) and sell on day 3 (price &#x3D; 5), profit &#x3D; 5-1 &#x3D; 4.</span><br><span class=\"line\">             Then buy on day 4 (price &#x3D; 3) and sell on day 5 (price &#x3D; 6), profit &#x3D; 6-3 &#x3D; 3.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [1,2,3,4,5]</span><br><span class=\"line\">Output: 4</span><br><span class=\"line\">Explanation: Buy on day 1 (price &#x3D; 1) and sell on day 5 (price &#x3D; 5), profit &#x3D; 5-1 &#x3D; 4.</span><br><span class=\"line\">             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are</span><br><span class=\"line\">             engaging multiple transactions at the same time. You must sell before buying again.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [7,6,4,3,1]</span><br><span class=\"line\">Output: 0</span><br><span class=\"line\">Explanation: In this case, no transaction is done, i.e. max profit &#x3D; 0.</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>要找最大利益，那就是至少不虧錢，如果今天賣出價格比昨天好就賣，greedy的感覺，整個累積起來也是一筆錢，看leetcode長姿勢/。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/122-Best-Time-to-Buy-and-Sell-Stock-II?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"13. Roman to Integer","url":"/interview/13/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(27).jpeg\"></p>\n<p>Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.</p>\n<p>Symbol       Value<br>I             1<br>V             5<br>X             10<br>L             50<br>C             100<br>D             500<br>M             1000<br>For example, 2 is written as II in Roman numeral, just two one’s added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.</p>\n<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:</p>\n<p>I can be placed before V (5) and X (10) to make 4 and 9.<br>X can be placed before L (50) and C (100) to make 40 and 90.<br>C can be placed before D (500) and M (1000) to make 400 and 900.<br>Given a roman numeral, convert it to an integer.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;III&quot;</span><br><span class=\"line\">Output: 3</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;IV&quot;</span><br><span class=\"line\">Output: 4</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;IX&quot;</span><br><span class=\"line\">Output: 9</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;LVIII&quot;</span><br><span class=\"line\">Output: 58</span><br><span class=\"line\">Explanation: L &#x3D; 50, V&#x3D; 5, III &#x3D; 3.</span><br></pre></td></tr></table></figure>\n\n<p>Example 5:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;MCMXCIV&quot;</span><br><span class=\"line\">Output: 1994</span><br><span class=\"line\">Explanation: M &#x3D; 1000, CM &#x3D; 900, XC &#x3D; 90 and IV &#x3D; 4.</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>羅馬數字轉阿拉伯數字，可能需要先知道羅馬數字規則，題目有提到的對應表建個字典是必須的，再來就是遇到大的數字就開始算差值，以範例5來說，1000+(1000-100)+(100-10)+(5-1)=1994。  </p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/13-Roman-to-Integer?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"169. Majority Element","url":"/interview/169/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(21).jpeg\"></p>\n<p>Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.</p>\n<p>You may assume that the array is non-empty and the majority element always exist in the array.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [3,2,3]</span><br><span class=\"line\">Output: 3</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [2,2,1,1,1,2,2]</span><br><span class=\"line\">Output: 2</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n\n<p>找大多數值，一開始會想用個字典統計出現次數，但發現可以用set分出單個數字再統計出現次數，最後取得最大值，比之前想法簡便很多，學習了。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/169-Majority-Element?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"242. Valid Anagram","url":"/interview/242/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(12).jpeg\"></p>\n<p>Given two strings s and t , write a function to determine if t is an anagram of s.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;anagram&quot;, t &#x3D; &quot;nagaram&quot;</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;rat&quot;, t &#x3D; &quot;car&quot;</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n<p>Note:<br>You may assume the string contains only lowercase alphabets.</p>\n<a id=\"more\"></a>\n<p>anagram意思是數字字元都相同，我想排序後檢查是否一樣最直覺了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T:O(nlogn), S:O(n)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def isAnagram(self, s: str, t: str) -&gt; bool:</span><br><span class=\"line\">        return sorted(s) &#x3D;&#x3D; sorted(t)</span><br></pre></td></tr></table></figure>\n","categories":["面試"],"tags":["力扣"]},{"title":"283. Move Zeroes","url":"/interview/283/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(22).jpeg\"></p>\n<p>Given an array nums, write a function to move all 0’s to the end of it while maintaining the relative order of the non-zero elements.</p>\n<p>Example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [0,1,0,3,12]</span><br><span class=\"line\">Output: [1,3,12,0,0]</span><br></pre></td></tr></table></figure>\n\n<p>Note:</p>\n<ol>\n<li>You must do this in-place without making a copy of the array.  </li>\n<li>Minimize the total number of operations.  <a id=\"more\"></a>\n\n</li>\n</ol>\n<p>把所有0移到最後，那可以想成把非0的移到最前，剩下填0，注意這題必須在原本給出的array操作(in-place)。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/283-Move-Zeroes?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"閱讀機會效應","url":"/manager/chance/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(29).jpeg\"></p>\n<p>機會存在混亂與逆境中<br>刻意製造混亂讓自己成長<br>走錯了也沒關係，說不定是另一條正確的路  </p>\n<a id=\"more\"></a>\n\n<h2 id=\"發現技巧\"><a href=\"#發現技巧\" class=\"headerlink\" title=\"發現技巧\"></a>發現技巧</h2><p>疑問<br>觀察<br>社交<br>實驗<br>聯想  </p>\n<h2 id=\"破壞式創新\"><a href=\"#破壞式創新\" class=\"headerlink\" title=\"破壞式創新\"></a>破壞式創新</h2><p>開放積極<br>好奇探索<br>認真提升自我<br>列出心中景仰的人，歸納出特質，思考怎麼學特質  </p>\n<h2 id=\"逆境\"><a href=\"#逆境\" class=\"headerlink\" title=\"逆境\"></a>逆境</h2><p>改變認知<br>洞察需求<br>連結自身優勢<br>持續改變<br>在一項工作穩定後嘗試其他工作培養整合與破壞式創新能力  </p>\n<h2 id=\"創造機會\"><a href=\"#創造機會\" class=\"headerlink\" title=\"創造機會\"></a>創造機會</h2><p>刻意製造混亂<br>意外發現<br>絕境中正向思考<br>自我顛覆<br>適當分心</p>\n","categories":["管理"],"tags":["文書"]},{"title":"閱讀刻意練習","url":"/manager/practice/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(31).jpeg\"></p>\n<p>原子習慣再搭配刻意練習就是堅持每天進步一點點</p>\n<a id=\"more\"></a>\n\n<h2 id=\"記憶要點\"><a href=\"#記憶要點\" class=\"headerlink\" title=\"記憶要點\"></a>記憶要點</h2><p>學習遷移，把難懂的東西映射到其他領域可能會比較有意義幫助記憶<br>紀錄時一邊思考如何運用</p>\n<h2 id=\"刻意練習要點\"><a href=\"#刻意練習要點\" class=\"headerlink\" title=\"刻意練習要點\"></a>刻意練習要點</h2><p>領域必須純熟，不斷脫離舒適圈<br>要進入<code>極度專注</code>，追求卓越<br>不只盲目練習，要有明確<code>目標</code>跟評量回饋知道練習效果，用對方法，像<code>原子習慣</code>不斷微小修正，重質不重量<br>需要時刻進行，變成生活一部分，最好在進行時忘卻時間進入<code>心流</code>模式</p>\n<h2 id=\"領域學習要點\"><a href=\"#領域學習要點\" class=\"headerlink\" title=\"領域學習要點\"></a>領域學習要點</h2><ol>\n<li>找出領域專家</li>\n<li>了解他們為何強</li>\n<li>找出規律，組織起來方便運用</li>\n<li>刻意練習要點</li>\n<li>不斷評估自己學到的</li>\n<li>過程中幫助發覺錯誤，像目標說的找出瓶頸，才能突破</li>\n<li>找出適合自己的訓練方法，發現成長變慢回到1依個人改變更換專家</li>\n</ol>\n<h2 id=\"沒有領域專家時如何成為專家\"><a href=\"#沒有領域專家時如何成為專家\" class=\"headerlink\" title=\"沒有領域專家時如何成為專家\"></a>沒有領域專家時如何成為專家</h2><ol>\n<li>對領域產生興趣</li>\n<li>全心投入</li>\n<li>自己滿足感與改正, 他人意見回饋(父母鼓勵對小孩也很重要)</li>\n<li>持續精進，超越自身知識做出創意貢獻</li>\n</ol>\n","categories":["管理"],"tags":["文書"]},{"title":"米其林一星明福台菜海鮮","url":"/life/traditional/","content":"<p><img src=\"https://i.imgur.com/ezflDw9.jpg\" alt=\"img\"></p>\n<a id=\"more\"></a>\n\n<p>明福台菜海鮮，就是我第一次走錯的餐廳，最有名的是首圖佛跳牆跟糯米雞，如果想吃台灣老味道來這就對啦。</p>\n<p><img src=\"https://i.imgur.com/mf2ykXu.jpg\" alt=\"img\"><br>前菜酒醃蜆仔勾起以前跟爸爸媽媽喝喜酒的回憶，證實這家果然很台!!</p>\n<p><img src=\"https://i.imgur.com/f3n8FPE.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/JJdivlj.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/XQQadPm.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/1iTRdTW.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/eG2TBnO.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/iIWauN7.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/h7yIxOf.jpg\" alt=\"img\"><br>再來是曬菜?!時間。</p>\n<p><img src=\"https://i.imgur.com/gdGqLWw.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/ZvwecME.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/GBuYbFr.jpg\" alt=\"img\"><br>九孔，台菜必備紅蟳油飯跟獨特的鮪魚肉香腸，聽店員說是鮪魚混部分豬肉，不過我吃不太出鮪魚的感覺。</p>\n<p><img src=\"https://i.imgur.com/xsBwDFr.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/y6cuxaq.jpg\" alt=\"img\"><br>最後是鮮甜軟糯糯米雞跟佛跳牆，看到這麼大的雞佛倒抽一口氣，同事們推了一陣子我就把他嗑了，不去想是什麼其實還不錯吃，總之整個非常澎湃，辦桌就是這種感覺吧。</p>\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d16896.713906961613!2d121.52451909784267!3d25.06168054786644!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x8350490e74b2b7b!2z5piO56aP5Y-w6I-c5rW36a6u!5e0!3m2!1szh-TW!2stw!4v1607612216214!5m2!1szh-TW!2stw\" width=\"600\" height=\"450\" frameborder=\"0\" style=\"border:0;\" allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>\n\n<p>這是我第三次吃米其林餐廳，感謝主管，也感謝拍照片的同事。</p>\n","categories":["生活"],"tags":["飲食"]},{"title":"種植肥料","url":"/life/fertilizer/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(32).jpeg\"></p>\n<p>植物的糧食，化肥就像維他命，有機肥沒腐熟可能會傷根。</p>\n<a id=\"more\"></a>\n<p><code>這篇是跟小耕園學習植栽心得。</code></p>\n<h1 id=\"肥料\"><a href=\"#肥料\" class=\"headerlink\" title=\"肥料\"></a>肥料</h1><p>農委會所發表的資料說明，有機肥中的碳氮比最佳值在15:1-20:1之間，可以提供土壤中益菌與植物生長的共同需要<br>好氧性堆肥化所需時間約一個月，而厭氣性發酵法需四個月以上<br>味道變臭時可以加入碳元素，像是報紙，瓦楞紙，葉子之類的；不過如果堆肥一直沒有發酵，可以加入有點氮的東西<br>保持適當水分寧願少一點, 也不要過多。一般生垃圾含水率通常在 40-65% 範圍內，若作好氣性堆肥時以50-60% 含水率為最佳<br>半熟肥：一般指堆肥材料明顯或稍微還看得出原本的樣子；其肥份新鮮有效，對土壤改良效果佳<br>完熟肥：則是堆肥材料多數已經粉碎並轉為黑褐色手感膨鬆，不結塊，聞起來有泥土的香氣，沒有惡臭或阿摩尼亞的味道。以石蕊試紙測試時，酸鹼值&lt;PH值&gt;趨於中性。其肥份較差但較穩定，對土壤改良效果有限<br>一點點霉臭味，表示腐熟狀況好，強烈的氨刺鼻味，則表示腐熟不夠完全<br>腐熟堆肥會沈入水中<br>化學肥料之過度使用的結果，土壤中有益微生物死亡，農地呈現劣化、硬化、酸化現象，缺乏有機質及各種礦物元素，而使劣地生產力與產品品質降低，必須補充有機質肥料加以改良，以增進地力，提高作物品質<br>氮肥適合在枝葉即將長出時使用<br>堆肥應該無惡臭，稀釋1000-3000倍<br>奧斯魔肥有微量元素，比好康多好<br>底肥要看植物生長的階段下  </p>\n<h1 id=\"營養\"><a href=\"#營養\" class=\"headerlink\" title=\"營養\"></a>營養</h1><p>幼年期或正值成長發育階段，最需要高氮肥，能使它長大的營養，例如：花寶二號、花寶五號<br>開花結果期要施用含磷鉀肥較高的肥料，以使花美果大，例如花寶三號、漁人魚精開花肥<br>花謝果熟後，也要像人類產後補身一般，補充適當的肥料，應迅速施花寶二號<br>氮肥有助於莖葉的營養生長，磷肥則有助於花芽的生殖生長，而氮肥與磷肥的吸收上是會互相衝突的（兩者都是陰離子），氮肥太高會抑制磷肥的吸收而不利於花芽分化，此時就得提高磷肥而抑制氮肥吸收，也就是「壓氮」，如果有使用菌肥，則可利用提高碳值供應讓微生物來消耗過多的氮肥，也就是「沖氮」<br>促進「營養生長」轉化為「生殖生長」的另一個方法就是製造危機(斷水（讓植物盡量乾到萎軟缺水再澆）、製造傷害（如修剪、製造枝幹損傷等），傳說中的木瓜釘釘子會變性、玉蘭花不開花就是欠打等等，都是藉由製造危機意識促使植物轉化為「生殖生長」  </p>\n<h2 id=\"三要素-氮葉-磷根花果-鉀根莖花果\"><a href=\"#三要素-氮葉-磷根花果-鉀根莖花果\" class=\"headerlink\" title=\"三要素(氮葉 磷根花果 鉀根莖花果)\"></a>三要素(氮葉 磷根花果 鉀根莖花果)</h2><h3 id=\"葉肥的氮-N-葉肥大，顏色翠綠，生長速度快\"><a href=\"#葉肥的氮-N-葉肥大，顏色翠綠，生長速度快\" class=\"headerlink\" title=\"葉肥的氮(N):葉肥大，顏色翠綠，生長速度快\"></a>葉肥的氮(N):葉肥大，顏色翠綠，生長速度快</h3><p>構成胺基酸與葉綠素不可或缺的成分，而胺基酸又是構成一切生物細胞主要成分 - 蛋白質的原料，缺乏氮植株矮小，細弱；葉呈黃綠、黃橙等非正常綠色，基部葉片逐漸乾燥枯萎，過酸的土壤會造成氮肥吸收不良、也容易造成微量元素過度吸收而重金屬中毒、還會導致根部發展不良  </p>\n<ul>\n<li>堆肥：霉掉的豆類、花生米、瓜子、揀剩下來的菜葉、豆殼、瓜果皮或過期變質的奶粉等敲碎煮爛，放在小罈子里加滿水，再密封起來發酵腐熟。為讓其儘快腐熟，可放置在太陽照射處，增加溫度。當壇內的這些物質全部下沉，水發黑、無臭味時（約需3-6個月），說明已發酵腐熟。在夏季，10天後即可取出上層肥水使用  </li>\n<li>用法：加水稀釋後葉面追肥,沉在底下的渣子可以繼續泡,也可拌在土裡或墊在盆底作基肥  </li>\n</ul>\n<h3 id=\"花果肥的磷-P-苗期開根、成年開花、後期結果\"><a href=\"#花果肥的磷-P-苗期開根、成年開花、後期結果\" class=\"headerlink\" title=\"花果肥的磷(P):苗期開根、成年開花、後期結果\"></a>花果肥的磷(P):苗期開根、成年開花、後期結果</h3><p>是細胞遺傳物質主要成分 - 『核醣』不可或缺的重要成分，也是細胞能量運作的關鍵成分，對植物開花結果有重大的影響，  不足樹木生長緩慢，葉小、分枝或分櫱減少，花果小，成熟晚，下部葉片的葉脈間先黃化而後呈現紫紅色。缺磷時通常老葉先出現病症，過高的磷肥比也會抑制氮肥的吸收，於是植株生長就開始出現新葉脫肥與反捲的特殊現象 </p>\n<ul>\n<li>堆肥：魚刺、骨頭、雞蛋皮、淡水魚的魚鱗，倒入缸內並加入適量金寶貝發酵劑（厭氧型）後加入少量水，密封，經過一段時間的腐爛發酵便可摻水使用  </li>\n<li>用法：發酵的產物兌水後使用；碾碎的骨粉等可做基肥使用  </li>\n</ul>\n<h3 id=\"硼\"><a href=\"#硼\" class=\"headerlink\" title=\"硼\"></a>硼</h3><p>花粉萌芽的重要關鍵，缺硼會造成花粉活性不足而容易受粉失敗  </p>\n<h3 id=\"根肥的鉀-K-儲蓄養份長胖，果實大又甜，根、莖、葉、花、果實的大小\"><a href=\"#根肥的鉀-K-儲蓄養份長胖，果實大又甜，根、莖、葉、花、果實的大小\" class=\"headerlink\" title=\"根肥的鉀(K):儲蓄養份長胖，果實大又甜，根、莖、葉、花、果實的大小\"></a>根肥的鉀(K):儲蓄養份長胖，果實大又甜，根、莖、葉、花、果實的大小</h3><p>光合作用、呼吸作用，影響酵素的活化、氣孔開合，是植物體內包含醣類合成等數十種代謝的活化劑、也是根與莖葉間營養輸送的重要關鍵，對根莖生長與果實甜度有關鍵影響，鉀會引起葉片收縮、發黃或出現棕褐色斑點等症狀<br>缺鉀：鉀肥會促進光合作用能量的轉化與儲存，累積的養分能促進果實生長，如果鉀肥不足就容易使果實偏小、或甚至因營養不良而流產  </p>\n<ul>\n<li>堆肥：殘茶水、淘米水泔水和草木灰水，洗牛奶瓶子水等都是上好的鉀肥，可直接用來種菜澆花。都是含有一定的氮、磷、鉀等營養成分，用來澆灌菜、花，既能保持土質水，又能給植物增添養分，能促使根系發達，有效提高植物抗病能力  </li>\n<li>用法：充分腐熟  </li>\n</ul>\n<h2 id=\"次量要素\"><a href=\"#次量要素\" class=\"headerlink\" title=\"次量要素\"></a>次量要素</h2><p>鈣：細胞壁，補筋骨讓植物細胞強硬（所以能減少病蟲害<br>鎂：葉綠素關鍵成分， 鎂可以資源回收，所以會出現老葉的葉綠素被分解供應新葉使用，所以是老葉花葉而新葉正常，也能加強磷肥效果<br>硫：蛋白質  </p>\n<h2 id=\"微量元素\"><a href=\"#微量元素\" class=\"headerlink\" title=\"微量元素\"></a>微量元素</h2><p>鐵：製造葉綠素過程的重要成分、傳遞酵素，無法資源回收，所以直接出現新葉花葉、老葉則正常，大多數的缺鐵都是由於酸度問題所引發，鐵和鋅都是金屬元素，必須在酸性環境才會溶解而被植物吸收<br>錳：光合作用<br>鋅：酵素系統、氮素代謝，生長的新陳代謝、蛋白質合成等生理作用有關，缺鋅就會造成新芽發育受阻而有簇葉現象，在草莓的典型症狀就是葉片變的小而狹長<br>鉬：固氮酵素及硝酸還原酵素<br>銅：葉綠素、同化作用、呼吸作用<br>硼：分生組織生長及醣類運轉與代謝<br>氯：促進光合作用、調節氣孔張合  </p>\n","categories":["生活"],"tags":["植栽"]},{"title":"自動化","url":"/engineer/automation/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(34).jpeg\"></p>\n<p>Do you remember we have mentioned IFTTT in <a href=\"https://eric999j.github.io/engineer/android/\">Android Skill</a>? Automate repetitive things can make life more convenient.<br>This article shows the publication of the article to the promotion process.</p>\n<p>還記得<a href=\"https://eric999j.github.io/engineer/android/\">Android小技巧</a>提到的IFTTT嗎？自動化重複的事可以為生活帶來便利，這篇來說明整個部落格發文到推廣的流程。</p>\n<a id=\"more\"></a>\n\n<img src=\"https://docs.google.com/drawings/d/e/2PACX-1vTf7IqqyB5qY80HwRVp8qBCpv2b1Bm3YTABFzVUMje4k07ThR7XKAWfW7bKXro-VTn8njFcu3E4BRHT/pub?w=960&amp;h=720\">\n\n<h1 id=\"Self-produced\"><a href=\"#Self-produced\" class=\"headerlink\" title=\"Self-produced\"></a>Self-produced</h1><p><a href=\"https://instagram.com/shvara\">IG</a>: Shvara uploads cute panda pictures.<br><a href=\"https://eric999j.github.io/\">Blog</a>: Lunski write articles here.  </p>\n<h1 id=\"Direct-delivery\"><a href=\"#Direct-delivery\" class=\"headerlink\" title=\"Direct delivery\"></a>Direct delivery</h1><p>The first thing we need to know, <a href=\"https://ifttt.com/home\">IFTTT</a>「if this then that」 is a web service. Like Observer Pattern in design patterns, there will feedback when the conditions were met.<br>There is a similar service, <a href=\"https://zapier.com/\">Zapier</a>. I use it in those way:</p>\n<p>首先要先知道 <a href=\"https://ifttt.com/home\">IFTTT</a>「if this then that」是一個網路服務，像監聽者模式，在條件觸發時產生反饋，同類型的服務還有 <a href=\"https://zapier.com/\">Zapier</a>，我用的場域有：  </p>\n<p><code>IFTTT</code>  </p>\n<ol>\n<li>When I wrote “holiday” in Google Calendar, my phone will open do not disturb mode, then I will not be awakened. <a href=\"https://ifttt.com/applets/rLUs8FRT\">link</a>  </li>\n<li>When I post articles here, RSS changed, it will transfer my articles to <a href=\"https://t.me/pandasphere\">Telegram: Lunski’s Circle</a>. <a href=\"https://ifttt.com/applets/PSendT2z\">link</a>  </li>\n<li>When Shvara add pictures in <a href=\"https://instagram.com/shvara\">IG</a>, it will transfer to <a href=\"https://t.me/pandasphere\">Telegram: Lunski’s Circle</a>. <a href=\"https://ifttt.com/applets/YCB6Gvfg\">link</a></li>\n</ol>\n<hr>\n<ol>\n<li>當在Google日曆寫上放假，當天手機自動啟動勿擾模式，避免被吵醒 <a href=\"https://ifttt.com/applets/rLUs8FRT\">link</a>   </li>\n<li>當我在這邊發文RSS變動會自動發到<a href=\"https://t.me/pandasphere\">Telegram: Lunski的小圈圈</a> <a href=\"https://ifttt.com/applets/PSendT2z\">link</a>  </li>\n<li>當Shvara在<a href=\"https://instagram.com/shvara\">IG發文</a>自動導到<a href=\"https://t.me/pandasphere\">Telegram: Lunski的小圈圈</a> <a href=\"https://ifttt.com/applets/YCB6Gvfg\">link</a></li>\n</ol>\n<p><code>Zapier</code>  </p>\n<ol>\n<li>When I post articles here, RSS changed, it will transfer my articles to <a href=\"https://www.facebook.com/101394868530096/\">FB: Lunski’s Circle</a>. <a href=\"https://zapier.com/app/connections/facebook-pages\">link</a></li>\n</ol>\n<hr>\n<ol>\n<li>當我在這邊發文RSS變動會自動發到<a href=\"https://www.facebook.com/101394868530096/\">FB: Lunski的小圈圈</a> <a href=\"https://zapier.com/app/connections/facebook-pages\">link</a></li>\n</ol>\n<h1 id=\"Self-selling\"><a href=\"#Self-selling\" class=\"headerlink\" title=\"Self-selling\"></a>Self-selling</h1><p>Telegram: <a href=\"https://t.me/pandasphere\">Lunski’s Circle</a><br>FB：<a href=\"https://www.facebook.com/101394868530096/\">Lunski’s Circle</a></p>\n<h2 id=\"Shvara-Bot\"><a href=\"#Shvara-Bot\" class=\"headerlink\" title=\"Shvara Bot\"></a>Shvara Bot</h2><dl><dt><a href=\"https://t.me/i_love_panda_bot/\">robotShvara</a></dt><dd>A bot in Telegram, it has those instructions.<br><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/ch0.jpeg\"></dd></dl><ul>\n<li>When bot in a chanel or group only provides:<ul>\n<li>hi: reply “hi”</li>\n<li>shvara: Randomly speak a Japanese sentence of Shvara on each call.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Shvara-API\"><a href=\"#Shvara-API\" class=\"headerlink\" title=\"Shvara API\"></a>Shvara API</h3><p><a href=\"https://github.com/eric999j/ShvaraApi\">ShvaraAPI</a> : Source code of /shvara instruction, deployed on Vercel.<br><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/ch1.jpeg\"></p>\n<h3 id=\"Dockerize\"><a href=\"#Dockerize\" class=\"headerlink\" title=\"Dockerize\"></a>Dockerize</h3><p>The backend of this bot is execute <code>$ node bot.js</code> in a linux system. However, if we didn’t do dockerize, we will forgot how to setup the environment next time. So I decide to dockerize it.</p>\n<p>All depedency wrote in a dockerfile. Generally,  we need to upload this file to DockerHub, and host in Heroku, but it contains some private information, so I put in private Github repository. If I have approate linux environment, I can pull and execute <code>$ docker run node-docker</code> to build to docker image.</p>\n<p>這個Bot後端是在一個linux系統下<code>$ node bot.js</code>，可是所有相依都要在電腦裝好，下次也會忘記怎麼設定，所以我決定把這個nodejs app包成Docker。  </p>\n<p>相依套件都寫在dockerfile，一般來說直接上傳DockerHub，host在Heroku會更方便，但專案有機密資訊就改成放private Github repository，有linux環境再抓下來在系統下<code>$ docker run node-docker</code> build image。 </p>\n<p>這樣只要有適合環境就能再重現出我們的後端囉。 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ docker build --tag node-docker .</span><br><span class=\"line\">$ docker images # 47a0ef2fc28d</span><br><span class=\"line\">$ docker run node-docker # 就會在docker裡執行 node bot.js</span><br><span class=\"line\"></span><br><span class=\"line\"># Next time we need to run.</span><br><span class=\"line\">$ docker start 47a0ef2fc28d</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/dockerize.jpeg\"></p>\n<h3 id=\"Chatfuel\"><a href=\"#Chatfuel\" class=\"headerlink\" title=\"Chatfuel\"></a>Chatfuel</h3><p><a href=\"https://techcrunch.com/2016/04/19/all-your-bots-are-belong-to-us/?fbclid=IwAR0MDO9uGqIVLYmv264hy3YUGmf0PumTHT6DZwvm3CfCBsoolTTn1IVPPbw\">Chatfuel</a> is a platform to construct bot in Facebook group easily. Different from Shvara is a panda who loves Japanese. Lunski is a engineer, so I use TechCrunch bot, it’s convenient for me and group users.</p>\n<p><a href=\"https://techcrunch.com/2016/04/19/all-your-bots-are-belong-to-us/?fbclid=IwAR0MDO9uGqIVLYmv264hy3YUGmf0PumTHT6DZwvm3CfCBsoolTTn1IVPPbw\">Chatfuel</a>是一個Facebook社團方便的機器人建造平台，不同於Shvara是隻愛日文的貓熊，Lunski的定位在工程師，那就串個TechCrunch Headlines自己用著也方便。</p>\n<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/FB.jpeg\"></p>\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><p>All setting are easy, after those setting, Lunski only need to focus on post articles, and Shvara only need to acting cute. Everything looks good, isn’t it?</p>\n<p>設定都很簡單，之後我只需要專注在部落格發文，貓熊只需要賣萌就可以了，是不是很方便呢？</p>\n","categories":["工程"],"tags":["好用"]},{"title":"191. Number of 1 Bits","url":"/interview/191/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(1).jpeg\"></p>\n<p>Write a function that takes an unsigned integer and returns the number of ‘1’ bits it has (also known as the Hamming weight).</p>\n<p>Note:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Note that in some languages such as Java, there is no unsigned integer type. In this case, the input will be given as a signed integer type. It should not affect your implementation, as the integer&#39;s internal binary representation is the same, whether it is signed or unsigned.</span><br><span class=\"line\">In Java, the compiler represents the signed integers using 2&#39;s complement notation. Therefore, in Example 3 above, the input represents the signed integer. -3.</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>轉二進count 1  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># T:O(n), S:O(1)  </span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def hammingWeight(self, n: int) -&gt; int:</span><br><span class=\"line\">        return bin(n).count(&#39;1&#39;)</span><br></pre></td></tr></table></figure>\n","categories":["面試"],"tags":["力扣"]},{"title":"121. Best Time to Buy and Sell Stock","url":"/interview/121/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(29).jpeg\"></p>\n<p>Say you have an array for which the ith element is the price of a given stock on day i.</p>\n<p>If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.</p>\n<p>Note that you cannot sell a stock before you buy one.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [7,1,5,3,6,4]</span><br><span class=\"line\">Output: 5</span><br><span class=\"line\">Explanation: Buy on day 2 (price &#x3D; 1) and sell on day 5 (price &#x3D; 6), profit &#x3D; 6-1 &#x3D; 5.</span><br><span class=\"line\">             Not 7-1 &#x3D; 6, as selling price needs to be larger than buying price.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [7,6,4,3,1]</span><br><span class=\"line\">Output: 0</span><br><span class=\"line\">Explanation: In this case, no transaction is done, i.e. max profit &#x3D; 0.</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>他的上一題是用Greegy策略，只要明天價格比較高就賣出，這題要找最大利潤，先找當前跟歷史比最大售價，再由最大售價找最大價差，有2種解法。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Normal</span><br><span class=\"line\">T: O(n), S: O(1)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def maxProfit(self, prices: List[int]) -&gt; int:</span><br><span class=\"line\">            largest_profit &#x3D; 0</span><br><span class=\"line\">            min_purchase &#x3D; prices[0]</span><br><span class=\"line\">            for i in range(1, len(prices)):</span><br><span class=\"line\">                if prices[i] - min_purchase &gt; largest_profit:</span><br><span class=\"line\">                    largest_profit &#x3D; prices[i] - min_purchase</span><br><span class=\"line\">                if prices[i] &lt; min_purchase:</span><br><span class=\"line\">                    min_purchase &#x3D; prices[i]</span><br><span class=\"line\">            return largest_profit</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Kadane&#39;s algorithm</span><br><span class=\"line\">T: O(n), S: O(1)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def maxProfit(self, prices: List[int]) -&gt; int:</span><br><span class=\"line\">        result &#x3D; 0</span><br><span class=\"line\">        sell &#x3D; 0</span><br><span class=\"line\">        for i in range(len(prices)-1,-1,-1):</span><br><span class=\"line\">            sell &#x3D; max(sell, prices[i]) # get max sell price</span><br><span class=\"line\">            result &#x3D; max(result, sell - prices[i]) # get max profit</span><br><span class=\"line\">        return result </span><br></pre></td></tr></table></figure>\n\n","categories":["面試"],"tags":["力扣"]},{"title":"202. Happy Number","url":"/interview/202/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(39).jpeg\"></p>\n<p>Write an algorithm to determine if a number n is happy.</p>\n<p>A happy number is a number defined by the following process:</p>\n<p>Starting with any positive integer, replace the number by the sum of the squares of its digits.<br>Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.<br>Those numbers for which this process ends in 1 are happy.<br>Return true if n is a happy number, and false if not.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 19</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation:</span><br><span class=\"line\">1ˆ2 + 9ˆ2 &#x3D; 82</span><br><span class=\"line\">8ˆ2 + 2ˆ2 &#x3D; 68</span><br><span class=\"line\">6ˆ2 + 8ˆ2 &#x3D; 100</span><br><span class=\"line\">1ˆ2 + 0ˆ2 + 02 &#x3D; 1</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 2</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>題目說快樂數是把輸入各分位平方總和到只有個位，當最後這個數是1就快樂(不要問我為什麼這樣很快樂，我也不知道啊啊啊？</p>\n<p>主要就讓他一直算sum([int(i)**2 for i in str(n)])   </p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/202-Happy-Number?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"268. Missing Number","url":"/interview/268/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(14).jpeg\"></p>\n<p>Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array.</p>\n<p>Follow up: Could you implement a solution using only O(1) extra space complexity and O(n) runtime complexity?</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [3,0,1]</span><br><span class=\"line\">Output: 2</span><br><span class=\"line\">Explanation: n &#x3D; 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [0,1]</span><br><span class=\"line\">Output: 2</span><br><span class=\"line\">Explanation: n &#x3D; 2 since there are 2 numbers, so all numbers are in the range [0,2]. 2 is the missing number in the range since it does not appear in nums.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [9,6,4,2,3,5,7,0,1]</span><br><span class=\"line\">Output: 8</span><br><span class=\"line\">Explanation: n &#x3D; 9 since there are 9 numbers, so all numbers are in the range [0,9]. 8 is the missing number in the range since it does not appear in nums.</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [0]</span><br><span class=\"line\">Output: 1</span><br><span class=\"line\">Explanation: n &#x3D; 1 since there is 1 number, so all numbers are in the range [0,1]. 1 is the missing number in the range since it does not appear in nums.</span><br></pre></td></tr></table></figure>\n\n<p>Constraints:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">n &#x3D;&#x3D; nums.length</span><br><span class=\"line\">1 &lt;&#x3D; n &lt;&#x3D; 104</span><br><span class=\"line\">0 &lt;&#x3D; nums[i] &lt;&#x3D; n</span><br><span class=\"line\">All the numbers of nums are unique.</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>沒在集合就回傳</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T:O(n), S:O(1)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def missingNumber(self, nums: List[int]) -&gt; int:</span><br><span class=\"line\">        s&#x3D;set(nums)</span><br><span class=\"line\">        n &#x3D; len(nums)+1</span><br><span class=\"line\">        </span><br><span class=\"line\">        for num in range(n):</span><br><span class=\"line\">            if num not in s:</span><br><span class=\"line\">                return num</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"350. Intersection of Two Arrays II","url":"/interview/350/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(36).jpeg\"></p>\n<p>Given two arrays, write a function to compute their intersection.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums1 &#x3D; [1,2,2,1], nums2 &#x3D; [2,2]</span><br><span class=\"line\">Output: [2,2]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums1 &#x3D; [4,9,5], nums2 &#x3D; [9,4,9,8,4]</span><br><span class=\"line\">Output: [4,9]</span><br></pre></td></tr></table></figure>\n\n<p>Note:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Each element in the result should appear as many times as it shows in both arrays.</span><br><span class=\"line\">The result can be in any order.</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>這題要找兩list交集，第一個想法可能會用2個for尋訪，那會得到O(nˆ2)效率不佳，而python跟javaㄧ樣有collection，其中的Counter(list)可以算list元素個數給出dict，再用&amp;取交集，最後記得加.elements()，不然只會有單一元素。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/350-Intersection-of-Two-Arrays-II?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"米其林一星教父牛排","url":"/life/danny/","content":"<p><img src=\"https://i.imgur.com/nGmilW6.jpg\" alt=\"img\"></p>\n<a id=\"more\"></a>\n\n<p>教父牛排，以前常聽說，但始終沒踏進來過，餐廳走的是低調奢華路線，有兩層樓，一樓是餐廳，樓上是酒窖，廁所洗手乳散發淡淡柑橘香，除了有海鹽顆粒，感覺還很好吃？！</p>\n<p><img src=\"https://i.imgur.com/aC9MmEv.jpg\" alt=\"img\"><br>一開始上這個麵包外酥內軟，跟以前在寒舍艾麗吃的麵包如出一徹，也許高級餐廳起手式就是這種麵包沾油醋醬配氣泡/礦泉水吧。</p>\n<p><img src=\"https://i.imgur.com/gOJXwbt.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/Fn262DN.jpg\" alt=\"img\"><br>再來是番茄湯跟伊比利豬，之前在大脘同事也有給我咬了一口他的伊比利豬，我想這就是豬肉界的愛馬仕，只是火腿版要配麵包或哈密瓜吃，不然有點鹹。</p>\n<p><img src=\"https://i.imgur.com/nh42DaL.jpg\" alt=\"img\"><br>這個番茄茄子有瑪格麗特Pizza的感覺，但多了茄子香。</p>\n<p><img src=\"https://i.imgur.com/Yf3l4cd.jpg\" alt=\"img\"><br>蕈菇卡布奇諾是湯！！！不過好像只有主管見過世面，在我還在讚嘆怎麼不是甜的又有濃濃蕈菇香的時候露出一絲看鄉下人的眼光。</p>\n<p>總之我覺得很香濃很好喝。</p>\n<p><img src=\"https://i.imgur.com/AzFIhOk.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/OolGCg3.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/LMfYxWv.jpg\" alt=\"img\"></p>\n<p>重頭戲是龍蝦，羊排跟標配牛，龍蝦是蝦(無誤)，羊排沒腥味，牛排應該有舒肥過，外皮酥香，裡面沒筋，肉質吃起來不一樣，不過還是保有肉感，這裡的招牌果然不錯。</p>\n<p><img src=\"https://i.imgur.com/4zkvMID.jpg\" alt=\"img\"><br>甜點是熔岩巧克力，因為我也喜歡烘培有做過熔岩，其實裡面的岩漿跟蛋糕是同一種，只是裡面不能熟，另外一點是吃起來要有白蘭地或威士忌香，這兩點這個蛋糕都有，算是及格了，而旁邊的焦糖冰淇淋有加分，跟熱蛋糕搭配的天衣無縫。</p>\n<p>還記得離開前跟同事說沒看到教父，同事說你不會想看到他的(抖…</p>\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d57817.1673904772!2d121.51775732191619!3d25.082459090972232!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3442ac125d44abdb%3A0xfc320cd71a093aeb!2z5pWZ54i254mb5o6SIERhbm55J3MgU3RlYWsgSG91c2U!5e0!3m2!1szh-TW!2stw!4v1608462960233!5m2!1szh-TW!2stw\" width=\"600\" height=\"450\" frameborder=\"0\" style=\"border:0;\" allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>\n\n<p>這是我第四次吃米其林餐廳，感謝主管，也感謝拍照片的同事。</p>\n","categories":["生活"],"tags":["飲食"]},{"title":"聖誕金門味","url":"/life/kinmen/","content":"<p><img src=\"https://i.imgur.com/b6HlG06.jpg\" alt=\"img\"></p>\n<a id=\"more\"></a>\n\n<p><img src=\"https://i.imgur.com/h9dNwh6.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/cjHLN6i.jpg\" alt=\"img\"></p>\n<p>聖誕節前夕俺爹剛好要去金門出差，我查了一些傳統點心並列了許願清單，今天想來點金門味。</p>\n<p>金門是個有戰地風情的地方，地理上分為兩塊，比較靠近本島的大金門跟比較靠近對岸的小金門（烈嶼），點心們會在這2個地方。</p>\n<ul>\n<li><p>左上：傳統市場（大金門）</p>\n</li>\n<li><p>豆包仔粿，外層甜粿，裡面有點鹹鹹辣辣的胡椒豬肉餡。</p>\n</li>\n<li><p>左下：沙美怡馨糕餅（大金門）</p>\n</li>\n<li><p>牛軛餅，外表有像馬德蓮的肚臍，味道是甜的鹹光餅，吃起來有客家發糕（假柿子）的黏稠發酵感。</p>\n</li>\n<li><p>鳳片糕，介於娘惹糕跟紅龜粿，酸酸甜甜，台灣會包豆沙，而且比台灣的硬一些。</p>\n</li>\n<li><p>右上：沙美</p>\n</li>\n<li><p>寸棗酥，令人想到花蓮百棗糖，其實就是小小一條酥脆寸棗黏在一起，不過很甜。</p>\n</li>\n<li><p>右下：沙美</p>\n</li>\n<li><p>麻荖 外層薄，裡面細碎，是很好的茶點。</p>\n</li>\n</ul>\n<p><img src=\"https://i.imgur.com/32sqkEX.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/RbJ3mGB.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/7kw28PO.jpg\" alt=\"img\"></p>\n<ul>\n<li><p>一來順（大金門）</p>\n</li>\n<li><p>地雷Q餅，長得像地雷，外層巧克力脆殼，不沾手，裡面花生麻糬像地雷炸開一樣，令人玩味，重點是還不錯吃。</p>\n</li>\n<li><p>首圖右中：合成餅鋪（小金門）</p>\n</li>\n<li><p>桶餅，閩式燒餅皮，鹹的裡面類似新竹竹塹餅內餡，但少了脆脆的肥豬肉，甜甜鹹鹹，甜的我比較喜歡閩式燒餅，有脆脆糖塊又不膩。</p>\n</li>\n</ul>\n<p>小金門桶餅跟大金門閩式燒餅統稱為漢餅，是老北方國軍帶來的，也就是說大陸北方麵點應該更古老，滿餅是餑餑。</p>\n<p>如果大家有機會去金門可以吃吃看喔。</p>\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3632.426470764446!2d118.23467991470163!3d24.435984868156982!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3414993bb3e524d7%3A0x881e45c2d6aaf57!2z5ZCI5oiQ6aSF6Yuq!5e0!3m2!1szh-TW!2stw!4v1608877864100!5m2!1szh-TW!2stw\" width=\"600\" height=\"450\" frameborder=\"0\" style=\"border:0;\" allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>\n\n<p>意外發現金門東西都滿甜的，也許跟台南一樣，以前甜食是尊貴的象徵吧，記得配茶，感謝老爸。</p>\n<p>祝大家聖誕快樂。</p>\n","categories":["生活"],"tags":["飲食"]},{"title":"1. Two Sum","url":"/interview/1/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(1).jpeg\"></p>\n<p>Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.</p>\n<p>You may assume that each input would have exactly one solution, and you may not use the same element twice.</p>\n<p>You can return the answer in any order.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [2,7,11,15], target &#x3D; 9</span><br><span class=\"line\">Output: [0,1]</span><br><span class=\"line\">Output: Because nums[0] + nums[1] &#x3D;&#x3D; 9, we return [0, 1].</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [3,2,4], target &#x3D; 6</span><br><span class=\"line\">Output: [1,2]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [3,3], target &#x3D; 6</span><br><span class=\"line\">Output: [0,1]</span><br><span class=\"line\">&#96;&#96;&#96; </span><br><span class=\"line\"></span><br><span class=\"line\">Constraints:</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>2 &lt;= nums.length &lt;= 103<br>-109 &lt;= nums[i] &lt;= 109<br>-109 &lt;= target &lt;= 109<br>Only one valid answer exists.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- more --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">經典第一題，思路是先把需要的值減去尋訪到的值，如果剩下的值有沒有在array裡就回傳index。</span><br><span class=\"line\"></span><br><span class=\"line\">1. 列index  </span><br><span class=\"line\">for i, num in enumerate(nums):</span><br><span class=\"line\"></span><br><span class=\"line\">2. 由數字找index  </span><br><span class=\"line\">keys[remain]</span><br><span class=\"line\"></span><br><span class=\"line\">3. 列表對應  </span><br><span class=\"line\">keys[num] &#x3D; i   </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Time: O(n), Space: O(1)</p>\n<p>class Solution:<br>    def twoSum(self, nums: List[int], target: int) -&gt; List[int]:<br>        keys = {}<br>        for i, num in enumerate(nums):<br>            remain = target - num<br>            if remain in keys:<br>                return [keys[remain], i]<br>            else:<br>                keys[num] = i<br>```</p>\n","categories":["面試"],"tags":["力扣"]},{"title":"26. Remove Duplicates from Sorted Array","url":"/interview/26/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(2).jpeg\"></p>\n<p>Given a sorted array nums, remove the duplicates in-place such that each element appears only once and returns the new length.</p>\n<p>Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.</p>\n<p>Clarification:</p>\n<p>Confused why the returned value is an integer but your answer is an array?</p>\n<p>Note that the input array is passed in by reference, which means a modification to the input array will be known to the caller as well.</p>\n<p>Internally you can think of this:</p>\n<p>// nums is passed in by reference. (i.e., without making a copy)<br>int len = removeDuplicates(nums);</p>\n<p>// any modification to nums in your function would be known by the caller.<br>// using the length returned by your function, it prints the first len elements.<br>for (int i = 0; i &lt; len; i++) {<br>    print(nums[i]);<br>}</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [1,1,2]</span><br><span class=\"line\">Output: 2, nums &#x3D; [1,2]</span><br><span class=\"line\">Explanation: Your function should return length &#x3D; 2, with the first two elements of nums being 1 and 2 respectively. It doesn&#39;t matter what you leave beyond the returned length.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [0,0,1,1,1,2,2,3,3,4]</span><br><span class=\"line\">Output: 5, nums &#x3D; [0,1,2,3,4]</span><br><span class=\"line\">Explanation: Your function should return length &#x3D; 5, with the first five elements of nums being modified to 0, 1, 2, 3, and 4 respectively. It doesn&#39;t matter what values are set beyond the returned length.</span><br></pre></td></tr></table></figure>\n\n<p>Constraints:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">0 &lt;&#x3D; nums.length &lt;&#x3D; 3 * 104</span><br><span class=\"line\">-104 &lt;&#x3D; nums[i] &lt;&#x3D; 104</span><br><span class=\"line\">nums is sorted in ascending order.</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.<br>那我們就不能直接len(list(set(nums)))，但題目提到已經排序好了，那我們可以尋訪他，當數字變動就加1。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/26-Remove-Duplicates-from-Sorted-Array?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"38. Count and Say","url":"/interview/38/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(3).jpeg\"></p>\n<p>The count-and-say sequence is a sequence of digit strings defined by the recursive formula:</p>\n<p>countAndSay(1) = “1”<br>countAndSay(n) is the way you would “say” the digit string from countAndSay(n-1), which is then converted into a different digit string.<br>To determine how you “say” a digit string, split it into the minimal number of groups so that each group is a contiguous section all of the same character. Then for each group, say the number of characters, then say the character. To convert the saying into a digit string, replace the counts with a number and concatenate every saying.</p>\n<p>Given a positive integer n, return the nth term of the count-and-say sequence.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 1</span><br><span class=\"line\">Output: &quot;1&quot;</span><br><span class=\"line\">Explanation: This is the base case.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 4</span><br><span class=\"line\">Output: &quot;1211&quot;</span><br><span class=\"line\">Explanation:</span><br><span class=\"line\">countAndSay(1) &#x3D; &quot;1&quot;</span><br><span class=\"line\">countAndSay(2) &#x3D; say &quot;1&quot; &#x3D; one 1 &#x3D; &quot;11&quot;</span><br><span class=\"line\">countAndSay(3) &#x3D; say &quot;11&quot; &#x3D; two 1&#39;s &#x3D; &quot;21&quot;</span><br><span class=\"line\">countAndSay(4) &#x3D; say &quot;21&quot; &#x3D; one 2 + one 1 &#x3D; &quot;12&quot; + &quot;11&quot; &#x3D; &quot;1211&quot;</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>如果是給一個數列，前一個數是下個數的個數，例如”3322251”:<br>個數[2,3,1,1] 數字[3,2,5,1] 最後組成count-and-say sequence[2,3,3,2,1,5,1,1]</p>\n<p>那可以用Python的collection包下Counter的类。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">from collections import Counter</span><br><span class=\"line\">a &#x3D; [1, 2, 3, 1, 1, 2]</span><br><span class=\"line\">result &#x3D; Counter(a)</span><br><span class=\"line\">print result</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt;&#123;1: 3, 2: 2, 3: 1&#125;</span><br></pre></td></tr></table></figure>\n\n<p>不過題目輸入是個數字，一下子想不到，參考一個很漂亮的解法，下次再研究。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/38-Count-and-Say?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\n\n","categories":["面試"],"tags":["力扣"]},{"title":"53. Maximum Subarray","url":"/interview/53/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(14).jpeg\"></p>\n<p>Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [-2,1,-3,4,-1,2,1,-5,4]</span><br><span class=\"line\">Output: 6</span><br><span class=\"line\">Explanation: [4,-1,2,1] has the largest sum &#x3D; 6.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [1]</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [5,4,-1,7,8]</span><br><span class=\"line\">Output: 23</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>最大子字串，Kadane’s Algorithm問題。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># T: O(n), S: O(n)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def maxSubArray(self, nums: List[int]) -&gt; int:</span><br><span class=\"line\">        # Initialize our variables using the first element.</span><br><span class=\"line\">        current_subarray &#x3D; max_subarray &#x3D; nums[0]</span><br><span class=\"line\">        </span><br><span class=\"line\">        # Start with the 2nd element since we already used the first one.</span><br><span class=\"line\">        for num in nums[1:]:</span><br><span class=\"line\">            # If current_subarray is negative, throw it away. Otherwise, keep adding to it.</span><br><span class=\"line\">            current_subarray &#x3D; max(num, current_subarray + num) # use current_subarray + num if current_subarray + num bigger then num</span><br><span class=\"line\">            max_subarray &#x3D; max(max_subarray, current_subarray) # compare history max and current max  </span><br><span class=\"line\">        return max_subarray</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"70. Climbing Stairs","url":"/interview/70/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(20).jpeg\"></p>\n<p>You are climbing a staircase. It takes n steps to reach the top.</p>\n<p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 2</span><br><span class=\"line\">Output: 2</span><br><span class=\"line\">Explanation: There are two ways to climb to the top.</span><br><span class=\"line\">1. 1 step + 1 step</span><br><span class=\"line\">2. 2 steps</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 3</span><br><span class=\"line\">Output: 3</span><br><span class=\"line\">Explanation: There are three ways to climb to the top.</span><br><span class=\"line\">1. 1 step + 1 step + 1 step</span><br><span class=\"line\">2. 1 step + 2 steps</span><br><span class=\"line\">3. 2 steps + 1 step</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">f(1)&#x3D;1                       1</span><br><span class=\"line\">f(2)&#x3D;2                       11 2</span><br><span class=\"line\">f(3)&#x3D;3 &#x2F;&#x2F;f(1)+f(2)           111 12 21 </span><br><span class=\"line\">f(4)&#x3D;5 &#x2F;&#x2F;f(2)+f(3)           1111 112 211 121 22 </span><br><span class=\"line\">f(5)&#x3D;8  &#x2F;&#x2F;f(3)+f(4)          11111 2111 1211 1121 1112 221 122 212</span><br><span class=\"line\">f(n)&#x3D;f(n-2)+f(n-1) Fibonacci</span><br></pre></td></tr></table></figure>\n\n<p>每次爬1或2格，有幾種方法可以到終點，一開始不知道就先把例子都列出來找規律，最後知道 f(n)=f(n-2)+f(n-1)，這不是fiboncci嗎！知道規律就好辦了。  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T: O(n), S: O(1)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def climbStairs(self, n):</span><br><span class=\"line\">        a,b &#x3D; 1,0</span><br><span class=\"line\">        for _ in range(n):</span><br><span class=\"line\">            a,b &#x3D; a+b,a</span><br><span class=\"line\">        return a</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"重訓的十里坡","url":"/life/brute/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(18).jpeg\"></p>\n<p>上次跟大家提到重訓的吃，接下來就是開始動，問題是怎麼動呢？ 其實我一開始也不知道，所以這份課表叫十里坡，在不斷努力後，還是練成了劍神。</p>\n<a id=\"more\"></a>\n\n<iframe src=\"https://docs.google.com/spreadsheets/d/e/2PACX-1vSZnBmLeEzfsWoNhuCNhx2rl5etqkzhUlSqBNEYiSr74_sxxVo3joOSCEQzd2wW6j6nAsrDescakZXE/pubhtml?gid=0&amp;single=true&amp;widget=true&amp;headers=false\"  width=\"550\" height=\"500\"></iframe>\n\n<p>這份課表很明顯是從最輕重量，大量次數慢慢遞減，做的過程很忙，2小時感覺做不完，但練一個月，復健師都說我變壯了，也讓我體驗到總訓練量的重要性，但太花時間了，之後需要有更進步的作法…</p>\n","categories":["生活"],"tags":["運動"]},{"title":"種植用藥","url":"/life/pesticide/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(35).jpeg\"></p>\n<p>種植過程一定會遇到問題，對症下藥能讓你的植物頭好壯壯，脫離黑拇指稱號。</p>\n<a id=\"more\"></a>\n<p><code>這篇是跟小耕園學習植栽心得。</code></p>\n<h1 id=\"如何用藥如何治療？\"><a href=\"#如何用藥如何治療？\" class=\"headerlink\" title=\"如何用藥如何治療？\"></a>如何用藥如何治療？</h1><p>《蘇力菌》防治蝶蛾類蟲害<br>《苦練乳》在最佳的油、水、界面活性劑比例下，同時具備有展著劑功能<br>《二氧化氯》殺菌，用稀釋20倍泡根5分鐘殺菌<br>《枯草桿菌》防治葉面病害<br>《矽藻土》等各種莖葉表面的抗病防蟲防治資材時  </p>\n<h2 id=\"蘇力菌\"><a href=\"#蘇力菌\" class=\"headerlink\" title=\"蘇力菌\"></a>蘇力菌</h2><p>讓幼蟲無法進食<br>夜盜蟲<br>小菜蛾（吊絲蟲）<br>夜蛾類<br>黑肚蟲  </p>\n<h2 id=\"苦楝粕\"><a href=\"#苦楝粕\" class=\"headerlink\" title=\"苦楝粕\"></a>苦楝粕</h2><p>雞母蟲<br>馬陸<br>所有地底蟲卵  </p>\n<h2 id=\"苦茶粕\"><a href=\"#苦茶粕\" class=\"headerlink\" title=\"苦茶粕\"></a>苦茶粕</h2><p>蝸牛<br>蛞蝓<br>蚯蚓<br>所有地底軟殼類       </p>\n<h2 id=\"綠佑精-蔬果清\"><a href=\"#綠佑精-蔬果清\" class=\"headerlink\" title=\"綠佑精+蔬果清\"></a>綠佑精+蔬果清</h2><p>蚜蟲 ，芥殼蟲，粉芥殼蟲，銀葉粉蝨，蓟馬，蟎類<br>可除芽蟲，芥殼蟲，粉芥殼蟲，銀葉粉蝨<br>綠佑精或（葵克立）+蔬果清+蘇力菌  混搭使用<br>綠佑精抑制幼蟲褪殼蟲卵孵化<br>蔬果清由多種植物精油混合而成<br>蟲蟲對它有忌避作用  </p>\n<h2 id=\"綠佑精-蘇力菌\"><a href=\"#綠佑精-蘇力菌\" class=\"headerlink\" title=\"綠佑精+蘇力菌\"></a>綠佑精+蘇力菌</h2><p>鳞翅目，黑肚蟲，青蟲，切根蟲，根瘤線蟲，雞母蟲…等<br>綠佑精或（葵克立）可擇一+ 蔬果清+蘇力菌  </p>\n<h1 id=\"有機除蟲劑濃度使用\"><a href=\"#有機除蟲劑濃度使用\" class=\"headerlink\" title=\"有機除蟲劑濃度使用\"></a>有機除蟲劑濃度使用</h1><h2 id=\"1\"><a href=\"#1\" class=\"headerlink\" title=\"1\"></a>1</h2><p>水  1500cc<br>綠佑精 3cc<br>蔬果清 3cc  </p>\n<h2 id=\"2\"><a href=\"#2\" class=\"headerlink\" title=\"2\"></a>2</h2><p>水  1000cc<br>綠佑精  2cc<br>蔬果清  2cc  </p>\n<h2 id=\"3\"><a href=\"#3\" class=\"headerlink\" title=\"3\"></a>3</h2><p>水   500cc<br>綠佑精  1cc<br>蔬果清  1cc  </p>\n<h1 id=\"定根水\"><a href=\"#定根水\" class=\"headerlink\" title=\"定根水\"></a>定根水</h1><p>底層鋪1cm椰纖，再加底肥，隔離土，放植株，放土後盆敲地面再下定根水<br>定根水木黴菌發酵液 蕈狀菌發酵液個半  </p>\n<h1 id=\"自然農藥\"><a href=\"#自然農藥\" class=\"headerlink\" title=\"自然農藥\"></a>自然農藥</h1><p>生石灰、 硫磺粉、水以1：2：10 的比例，先將1 份生 石灰加10 份的水加熱後，再加入2 份的硫磺 繼續煮1 小時即成。 防治細蟎時，視發生情況 以水稀釋200∼500 倍噴施  </p>\n<h1 id=\"小耕園建議\"><a href=\"#小耕園建議\" class=\"headerlink\" title=\"小耕園建議\"></a>小耕園建議</h1><ol>\n<li>首先就是不能用菇蕈太空包回收木屑製成的廉價培養土，因為在製作過程會家禽畜糞尿露天發酵，除非有殺菌否則幾乎都帶有病原  </li>\n<li>發酵不完全的有機肥也可能帶菌、還欲過水受汙染的情況，而薰衣草抗性特別差，所以從店家買回來的盆栽最好先經過處理<br>【預防性與治療性的處理方式】<br>a. 先以二氧化氯稀釋澆灌並噴濕全株消毒，每天一次，連續2~3次<br>b. 消毒完成後，以《木黴菌》＋《蕈狀芽孢桿菌》稀釋澆灌，建立健康菌相避免再度感染  </li>\n</ol>\n","categories":["生活"],"tags":["植栽"]},{"title":"125. Valid Palindrome","url":"/interview/125/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(31).jpeg\"></p>\n<p>Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.</p>\n<p>Note: For the purpose of this problem, we define empty string as valid palindrome.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: &quot;A man, a plan, a canal: Panama&quot;</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: &quot;race a car&quot;</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>判斷是不是回文，把字串去掉大小寫跟符號，比對反轉是否相同就可以了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T: O(1), S: O(1)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def isPalindrome(self, s: str) -&gt; bool:</span><br><span class=\"line\">        s &#x3D; s.lower();</span><br><span class=\"line\">        s &#x3D; re.sub(&#39;[^a-z0-9]&#39;,&#39;&#39;,s) # clear everything except a-z, 0-9</span><br><span class=\"line\">        print(s)</span><br><span class=\"line\">        if s &#x3D;&#x3D; s[::-1]: </span><br><span class=\"line\">            return True</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            return False</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"190. Reverse Bits","url":"/interview/190/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(41).jpeg\"></p>\n<p>Reverse bits of a given 32 bits unsigned integer.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 00000010100101000001111010011100</span><br><span class=\"line\">Output:    964176192 (00111001011110000010100101000000)</span><br><span class=\"line\">Explanation: The input binary string 00000010100101000001111010011100 represents the unsigned integer 43261596, so return 964176192 which its binary representation is 00111001011110000010100101000000.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 11111111111111111111111111111101</span><br><span class=\"line\">Output:   3221225471 (10111111111111111111111111111111)</span><br><span class=\"line\">Explanation: The input binary string 11111111111111111111111111111101 represents the unsigned integer 4294967293, so return 3221225471 which its binary representation is 10111111111111111111111111111111.</span><br></pre></td></tr></table></figure>\n\n<p>Constraints:</p>\n<p>The input must be a binary string of length 32. </p>\n<p>Note:</p>\n<p>Note that in some languages such as Java, there is no unsigned integer type. In this case, both input and output will be given as a signed integer type. They should not affect your implementation, as the integer’s internal binary representation is the same, whether it is signed or unsigned.  </p>\n<p>In Java, the compiler represents the signed integers using 2’s complement notation. </p>\n<p>Therefore, in Example 2 above, the input represents the signed integer -3 and the output represents the signed integer -1073741825.</p>\n<a id=\"more\"></a>\n\n<ol>\n<li>bin() to binary</li>\n<li>[2:] remove 0b</li>\n<li>zfill(32) add 0 in left to 32 bit</li>\n<li>int(num[::-1], 2)   int(x, base=10) reverse base 2 and cover to int</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># T:O(n), S:O(1)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def reverseBits(self, n: int) -&gt; int:</span><br><span class=\"line\">        num &#x3D; bin(n)[2:].zfill(32)</span><br><span class=\"line\">        return int(num[::-1], 2)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"米其林一星侯布雄","url":"/life/robuchon/","content":"<p><img src=\"https://i.imgur.com/t4KAdxj.jpg\" alt=\"img\"></p>\n<a id=\"more\"></a>\n\n<p>侯布雄，貴婦百貨上的一家餐廳，店裡裝潢很精緻，有點像教父牛排，不過氣氛比較活潑，順帶一提，首圖一開始放桌上的花跟店內整排蝴蝶蘭都是真花喔。</p>\n<p><img src=\"https://i.imgur.com/79WMa6r.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/slIjhxh.jpg\" alt=\"img\"></p>\n<p>我們今天點C套餐，有2前菜，2主菜，1道甜點跟1杯咖啡，礦泉水或氣泡水跟寒舍艾麗一樣要加點。</p>\n<p><img src=\"https://i.imgur.com/NBckJM6.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/FqTsdpQ.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/c7VN6Xu.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/eNE9N2B.jpg\" alt=\"img\"><br>麵包是一個拼盤，可以自己選口味，喜歡底下侯布雄伴手禮商店也可以買回家。</p>\n<p><img src=\"https://i.imgur.com/8MUMlO5.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/BWG5z5z.jpg\" alt=\"img\"></p>\n<ol>\n<li>冰的馬格莉特pizza</li>\n<li>香蕉餃子濃湯</li>\n</ol>\n<p>菜單意思是番茄凍，看起來很漂亮，不過裡面羅勒香氣配上一旁脆餅就是冰的瑪格麗特Pizza啊啊啊啊。<br>豌豆冷湯的部份可能是冷的，味道沒有很強烈，起司餃不知道為什麼一直有種包香蕉的錯覺(掩)。</p>\n<p>之後來了一個法國人，用法文夾雜英文問我們要不要買紅酒(高級餐廳的酒促小姐？？！)後來才知道他應該是專業品酒師，會來推薦餐點搭配什麼酒有比較好的味道，但同事要開車，我們也沒什麼興趣就回絕了。</p>\n<p><img src=\"https://i.imgur.com/XMZYZZB.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/XakD0WN.jpg\" alt=\"img\"></p>\n<ol start=\"3\">\n<li>雞胸鴨肝 </li>\n<li>牛排3分熟</li>\n</ol>\n<p>主菜第一道醬油有種熟悉的味道(鹹鹹雞胸燒臘店醬油)，不過太高端了我不太懂，而雞胸軟嫩不柴，整道料理透出一絲絲茴香氣息是一大亮點。</p>\n<p>牛排是需要加價880的，因為主管說可以點個880的我就點下去了(汗)，肉質軟嫩Q彈，應該有舒肥過，一起搭配的還有馬鈴薯泥，完全沒有筋，還透著綿密奶香，非常好吃。</p>\n<p><img src=\"https://i.imgur.com/8mg6qoy.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/BFP2rU1.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/ETBFZKg.jpg\" alt=\"img\"></p>\n<ol start=\"5\">\n<li>威廉梨巴巴露亞與大溪地香草和柚子冰淇淋</li>\n</ol>\n<p>甜點部分長條蛋糕體有種我不知道的香甜氣味，可能是威廉梨醬或柚子香氣，而這個巴巴露亞(Bavarois)是那個泡沫，名稱從Bavarian cream (甜奶糖醬)而來，感覺有時間可以來做一下這2個醬XD。</p>\n<p>瑪德蓮馬卡龍跟泡芙是附的，不過建議搭配咖啡(吉力馬札羅圓豆)一起食用，不然法國甜點都很甜的。</p>\n<p>還記得訂位之前我還說店名好像某個大叔，原來是法文啊，失敬失敬。</p>\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d14459.317672839514!2d121.5676195!3d25.0398624!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0xfe9a2c13dc0092cb!2zTOKAmUFURUxJRVIgZGUgSm_Dq2wgUm9idWNob27kvq_luIPpm4Tms5XlvI_ppJDlu7M!5e0!3m2!1szh-TW!2stw!4v1609576451890!5m2!1szh-TW!2stw\" width=\"600\" height=\"450\" frameborder=\"0\" style=\"border:0;\" allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>\n\n<p>這是我第五次吃米其林餐廳，感謝主管，也感謝拍照的Shvara。</p>\n","categories":["生活"],"tags":["飲食"]},{"title":"198. House Robber","url":"/interview/198/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(2).jpeg\"></p>\n<p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and it will automatically contact the police if two adjacent houses were broken into on the same night.</p>\n<p>Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [1,2,3,1]</span><br><span class=\"line\">Output: 4</span><br><span class=\"line\">Explanation: Rob house 1 (money &#x3D; 1) and then rob house 3 (money &#x3D; 3).</span><br><span class=\"line\">             Total amount you can rob &#x3D; 1 + 3 &#x3D; 4.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [2,7,9,3,1]</span><br><span class=\"line\">Output: 12</span><br><span class=\"line\">Explanation: Rob house 1 (money &#x3D; 2), rob house 3 (money &#x3D; 9) and rob house 5 (money &#x3D; 1).</span><br><span class=\"line\">             Total amount you can rob &#x3D; 2 + 9 + 1 &#x3D; 12.</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>隔一戶前最大都可以搶，哪時搶錢存列表，再取最大的。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># T:O(n), S:O(n)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def rob(self, nums: List[int]) -&gt; int:</span><br><span class=\"line\">        if nums &#x3D;&#x3D; []:  return 0        </span><br><span class=\"line\">        for i in range(2,len(nums)):</span><br><span class=\"line\">            nums[i] +&#x3D; max(nums[:i-1])</span><br><span class=\"line\">        return max(nums)</span><br></pre></td></tr></table></figure>\n\n","categories":["面試"],"tags":["力扣"]},{"title":"326. Power of Three","url":"/interview/326/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(6).jpeg\"></p>\n<p>Given an integer n, return true if it is a power of three. Otherwise, return false.</p>\n<p>An integer n is a power of three, if there exists an integer x such that n == 3x.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 27</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 0</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 9</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 45</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>判斷某數是不是3的倍數就看他除以3餘數是不是1，並一直重複取餘數。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/326-Power-of-Three?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"66. Plus One","url":"/interview/66/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(4).jpeg\"></p>\n<p>Given a non-empty array of decimal digits representing a non-negative integer, increment one to the integer.</p>\n<p>The digits are stored such that the most significant digit is at the head of the list, and each element in the array contains a single digit.</p>\n<p>You may assume the integer does not contain any leading zero, except the number 0 itself.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: digits &#x3D; [1,2,3]</span><br><span class=\"line\">Output: [1,2,4]</span><br><span class=\"line\">Explanation: The array represents the integer 123.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: digits &#x3D; [4,3,2,1]</span><br><span class=\"line\">Output: [4,3,2,2]</span><br><span class=\"line\">Explanation: The array represents the integer 4321.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: digits &#x3D; [0]</span><br><span class=\"line\">Output: [1]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>給一個1-9數字陣列[8,8]，實作十進位器，從右邊開始，當遇到9以下加1，進位要考慮2個情況，一個是陣列內9加1要進到左邊一位[8,9]，另一個是超出陣列的進位，像[9,9]再加1 [1,0,0]。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/66-Plus-One?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"28. Implement strStr()","url":"/interview/28/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(10).jpeg\"></p>\n<p>Implement strStr().</p>\n<p>Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.</p>\n<p>Clarification:</p>\n<p>What should we return when needle is an empty string? This is a great question to ask during an interview.</p>\n<p>For the purpose of this problem, we will return 0 when needle is an empty string. This is consistent to C’s strstr() and Java’s indexOf().</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: haystack &#x3D; &quot;hello&quot;, needle &#x3D; &quot;ll&quot;</span><br><span class=\"line\">Output: 2</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: haystack &#x3D; &quot;aaaaa&quot;, needle &#x3D; &quot;bba&quot;</span><br><span class=\"line\">Output: -1</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: haystack &#x3D; &quot;&quot;, needle &#x3D; &quot;&quot;</span><br><span class=\"line\">Output: 0</span><br></pre></td></tr></table></figure>\n\n\n<p>Constraints:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">0 &lt;&#x3D; haystack.length, needle.length &lt;&#x3D; 5 * 10ˆ4</span><br><span class=\"line\"></span><br><span class=\"line\">haystack and needle consist of only lower-case English characters.</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>回傳子字串index，可以用find()</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/28-Implement-strStr?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"14. Longest Common Prefix","url":"/interview/14/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(9).jpeg\"></p>\n<p>Write a function to find the longest common prefix string amongst an array of strings.</p>\n<p>If there is no common prefix, return an empty string “”.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: strs &#x3D; [&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]</span><br><span class=\"line\">Output: &quot;fl&quot;</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: strs &#x3D; [&quot;dog&quot;,&quot;racecar&quot;,&quot;car&quot;]</span><br><span class=\"line\">Output: &quot;&quot;</span><br><span class=\"line\">Explanation: There is no common prefix among the input strings.</span><br></pre></td></tr></table></figure>\n\n<p>Constraints:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">0 &lt;&#x3D; strs.length &lt;&#x3D; 200</span><br><span class=\"line\">0 &lt;&#x3D; strs[i].length &lt;&#x3D; 200</span><br><span class=\"line\">strs[i] consists of only lower-case English letters.</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>這篇要找相同子字串，先用*取得array內容<br>flower flow flight<br>zip取得每個位元切片<br>(‘f’, ‘f’, ‘f’)<br>(‘l’, ‘l’, ‘l’)<br>(‘o’, ‘o’, ‘i’)<br>再加set合併相同位元<br>{‘f’}<br>{‘l’}<br>{‘i’, ‘o’}<br>再回傳只有1位的<br>fl</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/14-Longest-Common-Prefix?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"7. Reverse Integer","url":"/interview/7/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(11).jpeg\"></p>\n<p>Given a 32-bit signed integer, reverse digits of an integer.</p>\n<p>Note: Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. For this problem, assume that your function returns 0 when the reversed integer overflows.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: x &#x3D; 123</span><br><span class=\"line\">Output: 321</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: x &#x3D; -123</span><br><span class=\"line\">Output: -321</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: x &#x3D; 120</span><br><span class=\"line\">Output: 21</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: x &#x3D; 0</span><br><span class=\"line\">Output: 0</span><br></pre></td></tr></table></figure>\n\n<p>Constraints:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">-2ˆ31 &lt;&#x3D; x &lt;&#x3D; 231 - 1</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>負號要先轉正，再反轉字串後轉成數字</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/7-Reverse-Integer?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n","categories":["面試"],"tags":["力扣"]},{"title":"204. Count Primes","url":"/interview/204/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(12).jpeg\"></p>\n<p>Count the number of prime numbers less than a non-negative number, n.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 10</span><br><span class=\"line\">Output: 4</span><br><span class=\"line\">Explanation: There are 4 prime numbers less than 10, they are 2, 3, 5, 7.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 0</span><br><span class=\"line\">Output: 0</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 1</span><br><span class=\"line\">Output: 0</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>質數（Prime number），又稱素數，指在大於1的自然數中，除了1和該數自身外，無法被其他自然數整除的數（也可定義為只有1與該數本身兩個正因數的數）。- <a href=\"https://zh.wikipedia.org/wiki/%E8%B4%A8%E6%95%B0\">wikipedia</a></p>\n<p>判斷一個數是否是質數，只需判斷它是否能被小於它開根後的所有數整除。</p>\n<p>所以從2開始算到開根，其中有合數就設為false。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/204-Count-Primes?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"88. Merge Sorted Array","url":"/interview/88/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(12).jpeg\"></p>\n<p>Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.</p>\n<p>The number of elements initialized in nums1 and nums2 are m and n respectively. You may assume that nums1 has enough space (size that is equal to m + n) to hold additional elements from nums2.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums1 &#x3D; [1,2,3,0,0,0], m &#x3D; 3, nums2 &#x3D; [2,5,6], n &#x3D; 3</span><br><span class=\"line\">Output: [1,2,2,3,5,6]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums1 &#x3D; [1], m &#x3D; 1, nums2 &#x3D; [], n &#x3D; 0</span><br><span class=\"line\">Output: [1]</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n\n<p>合併2個已經排序過array，也有給出合併起始m，那就把第二個array添到第一個m之後再sort</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/88-Merge-Sorted-Array?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"閱讀一開口撩人又聊心","url":"/manager/hiton/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(32).jpeg\"></p>\n<p>最近遇到對聊天有困擾的朋友，所以我買了這本書，並分享筆記給他，如果對他有幫助，也能幫到一樣有困擾的小夥伴們就太好了。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"愛情三元素\"><a href=\"#愛情三元素\" class=\"headerlink\" title=\"愛情三元素\"></a>愛情三元素</h2><ol>\n<li>親密 （親密、連通、寄託的感覺，關心，分享祕密</li>\n<li>激情（造成浪漫、身體吸引、性關係和在愛情中相關現象的驅力</li>\n<li>義務（短期：愛上了他人的決定 長期：維繫愛的個人承諾</li>\n</ol>\n<h2 id=\"迷戀\"><a href=\"#迷戀\" class=\"headerlink\" title=\"迷戀\"></a>迷戀</h2><ol>\n<li>話不要說死</li>\n<li>留伏筆</li>\n</ol>\n<h2 id=\"聊天-演講要素\"><a href=\"#聊天-演講要素\" class=\"headerlink\" title=\"聊天/演講要素\"></a>聊天/演講要素</h2><ol>\n<li>非言語行為（表情，手勢，姿勢</li>\n<li>語調（大小適中，高：引發情緒 中：聆聽 低:敘述，停頓變化</li>\n<li>內容</li>\n<li>一個亮點，並配合感官元素襯托，讓故事更生動</li>\n<li>讓對方了解你</li>\n<li>正面情緒延伸與負面情緒反轉</li>\n</ol>\n<h2 id=\"關係不是靠追求，是靠吸引\"><a href=\"#關係不是靠追求，是靠吸引\" class=\"headerlink\" title=\"關係不是靠追求，是靠吸引\"></a>關係不是靠追求，是靠吸引</h2><p>循序漸進，彈性調整<br>提昇自己，進而有吸引力才是重點，不是一味討好別人，要建立平等關係<br>要讓對方有付出的機會，一直付出會造成壓力<br>聊天就是說故事，要透過故事讓人意識到自己的特質  </p>\n<h3 id=\"DHV是顯示高價值（Demonstration-of-Higher-Value）\"><a href=\"#DHV是顯示高價值（Demonstration-of-Higher-Value）\" class=\"headerlink\" title=\"DHV是顯示高價值（Demonstration of Higher Value）\"></a>DHV是顯示高價值（Demonstration of Higher Value）</h3><p>自己說什麼話。態度、行為、社交認證、又或者是預選這些難以裝出來的社交信號，足以說明他的真實價值 (但要間接透出自己的好)</p>\n<h2 id=\"建立聊天資料庫\"><a href=\"#建立聊天資料庫\" class=\"headerlink\" title=\"建立聊天資料庫\"></a>建立聊天資料庫</h2><ol>\n<li>蒐集侵略性低的資訊並自然提及（實用資訊 熱門話題 八卦：打發時間</li>\n<li>轉述朋友的故事，日常有趣，不涉及隱私，最好包含自己：串場</li>\n<li>分享自己的故事：創造吸引</li>\n<li>共同的脆弱能促進親密感的提升<br><a href=\"https://zh.wikipedia.org/wiki/%E7%88%B1%E6%83%85%E4%B8%89%E5%9B%A0%E8%AE%BA\">https://zh.wikipedia.org/wiki/爱情三因论</a></li>\n</ol>\n<h2 id=\"說故事\"><a href=\"#說故事\" class=\"headerlink\" title=\"說故事\"></a>說故事</h2><ol>\n<li>自我揭露- 分享生活正向部份</li>\n<li>找出共通點，察言觀色</li>\n<li>說對方相異點的精彩故事</li>\n<li>一開始說正向，之後慢慢帶入一點負面元素，但結局要是好的</li>\n</ol>\n<h2 id=\"問問題\"><a href=\"#問問題\" class=\"headerlink\" title=\"問問題\"></a>問問題</h2><ol start=\"5\">\n<li>說問(淺顯易懂，引導式，開放式問題，語尾上揚避免質疑感)聽，一定要互動</li>\n<li>接續對方提出問題或用聯想，深入或擴大話題</li>\n<li>肢體語言展現正在聽</li>\n<li>假發問目的不是為了知道答案，真發問才是</li>\n</ol>\n<h2 id=\"拉近距離\"><a href=\"#拉近距離\" class=\"headerlink\" title=\"拉近距離\"></a>拉近距離</h2><ol start=\"9\">\n<li>肢體距離試探性接近，聊到對方與家人互動，對方主動提出負面經驗</li>\n<li>給予肯定與讚美(肯定+原因，把句子拉長)</li>\n<li>不要說[別想太多]，[我當初也是]，[你應該]</li>\n<li>要專心聽，安慰情緒，實質建議</li>\n<li>避免只是好人，多元話題，地點，角色反差</li>\n<li>用對方的語言展現幽默感與神秘感(停頓說話)，但要避免讓對方不舒服</li>\n<li>自嘲解決事情又無傷大雅</li>\n<li>無時無刻準備好自己外在(照場合)與內在</li>\n<li>將自己故事跟履歷包裝好</li>\n<li>對世界好奇：更多探究，豐富歷練吸引對方</li>\n<li>對自己好奇：知道極限，找更多可能性</li>\n<li>對別人好奇：更多故事，更多互動</li>\n</ol>\n","categories":["管理"],"tags":["文書"]},{"title":"ヨルシカ-パレード","url":"/life/parade/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(19).jpeg\"></p>\n<p>最近上班聽日文歌發現有首不錯聽，小提琴聲讓人感受到油然而生的希望，Shvara吵著說要學，所以就來研究一下。</p>\n<p>這首歌在說走到跟男朋友一起經過的大街，想到以前種種，景物依舊，人事已非，但還是因為不想忘記這段回憶而掙扎。[加油啊(吶喊</p>\n<p>我想這種感覺就是物の哀れ吧。</p>\n<a id=\"more\"></a>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ry3Tupx4BL4\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[A]</span><br><span class=\"line\">身体からだ の 奥おく   喉のど の 真下ました</span><br><span class=\"line\">在身體深處，喉嚨正下方</span><br><span class=\"line\">心こころ があるとするなら 君きみ はそこなんだろうから</span><br><span class=\"line\">如果擁有心的話，你是否就在那裡呢？</span><br><span class=\"line\"></span><br><span class=\"line\">[B]</span><br><span class=\"line\">間奏</span><br><span class=\"line\"></span><br><span class=\"line\">[A]</span><br><span class=\"line\">ずっと 前まえ からわかっていたけど</span><br><span class=\"line\">持續向前走，我知道</span><br><span class=\"line\">歳とし  取と れば 君きみ の 顔かお も 忘わす れてしまうからさ</span><br><span class=\"line\">隨光陰流逝會逐漸忘了你的樣子</span><br><span class=\"line\"></span><br><span class=\"line\">[A]</span><br><span class=\"line\">身体からだ の 奥おく   喉のど の 中なか で</span><br><span class=\"line\">在身體深處，喉嚨深處</span><br><span class=\"line\">言葉ことば が 出来でき る 瞬間しゅんかん を 僕ぼく は 知し りたいから</span><br><span class=\"line\">言語流瀉而出的那個瞬間 我啊 想要去了解</span><br><span class=\"line\"></span><br><span class=\"line\">このまま 夜よ が 明あ けたら</span><br><span class=\"line\">若就此直至天明</span><br><span class=\"line\"></span><br><span class=\"line\">[C]</span><br><span class=\"line\">乾かわ かないように 想おも い 出で を</span><br><span class=\"line\">為了不乾涸，讓這段回憶</span><br><span class=\"line\">失な くさないようにこの 歌うた を</span><br><span class=\"line\">為了不失去，讓這首歌</span><br><span class=\"line\">忘わす れないで もうちょっとだけでいい</span><br><span class=\"line\">不被遺忘，再一下下就好</span><br><span class=\"line\">一人ひとり ぼっちの パレードぱれーど を</span><br><span class=\"line\">隻身走在熙來攘往的大街上</span><br><span class=\"line\"></span><br><span class=\"line\">[B]</span><br><span class=\"line\">間奏</span><br><span class=\"line\"></span><br><span class=\"line\">[A]</span><br><span class=\"line\">ずっと 前まえ から 思おも ってたけど</span><br><span class=\"line\">邊走邊不斷思索</span><br><span class=\"line\">君きみ の 指先ゆびさき の 中なか にはたぶん 神様かみさま が 住す んでいる</span><br><span class=\"line\">你的指尖或許居住著神明吧</span><br><span class=\"line\"></span><br><span class=\"line\">今日きょう 、 昨日きのう よりずっと 前まえ から、ずっとその 昔むかし の 昔むかし から。</span><br><span class=\"line\">比今天，昨天更早，甚至是從那個「很久很久以前」開始</span><br><span class=\"line\">わかるんだ</span><br><span class=\"line\">我就知道(已經失去你)了阿</span><br><span class=\"line\"></span><br><span class=\"line\">[A]</span><br><span class=\"line\">身体からだ の 奥おく   喉のど の 真下ました </span><br><span class=\"line\">在身體深處，喉嚨正下方</span><br><span class=\"line\">君きみ の 書か く 詩うた を ただ 真似まね る 日々ひび を</span><br><span class=\"line\">你寫下的詩，只能由我模仿的日子</span><br><span class=\"line\"></span><br><span class=\"line\">忘わす れないように</span><br><span class=\"line\">為了不再遺忘</span><br><span class=\"line\">君きみ のいない 今いま の 温度おんど を</span><br><span class=\"line\">沒有你溫度的如今</span><br><span class=\"line\"></span><br><span class=\"line\">[C]</span><br><span class=\"line\">乾かわ かないような 想おも い 出で で</span><br><span class=\"line\">為了不乾涸，讓這段回憶</span><br><span class=\"line\">失な くさないようにこの 歌うた を</span><br><span class=\"line\">為了不失去，讓這首歌</span><br><span class=\"line\">忘わす れないで もうちょっとだけでいい</span><br><span class=\"line\">不被遺忘，再一下下就好</span><br><span class=\"line\">一人ひとり ぼっちの パレードぱれーど を</span><br><span class=\"line\">隻身走在熙來攘往的大街上</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://www.jpmarumaru.com/tw/JPSongPlay-13497.html\">Shvara要求的學習資源：</a></p>\n<p><a href=\"https://www.sigure.tw/learn-japanese/grammar/n3/69.php\">N3文法69「とすれば、としたら、とする」如果、假如</a></p>\n<p><a href=\"https://dictionary.goo.ne.jp/word/%E6%9C%89%E3%82%8B/\">有る（ある）有</a></p>\n<p><a href=\"https://www.sigure.tw/learn-japanese/grammar/n4/13.php\">N4「なら」表假定條件</a></p>\n<p><a href=\"https://jp.sonic-learning.com/2020/10/26/g44/\">推測的「かもしれない」「～だろう」</a></p>\n<p><a href=\"https://www.sigure.tw/learn-japanese/grammar/n5/34.php\">N5文法34【助詞篇】「から」</a></p>\n<p><a href=\"https://www.weblio.jp/content/%E3%82%8F%E3%81%8B%E3%81%A3%E3%81%A6\">分かって、判って、解って 知道</a></p>\n<p><a href=\"https://zhidao.baidu.com/question/380312005\">だけど</a></p>\n<p><a href=\"http://www7a.biglobe.ne.jp/nifongo/1h93fy/jyo_03.html\">れば</a></p>\n<p><a href=\"https://www.sigure.tw/learn-japanese/grammar/n4/19.php\">N4文法19「てしまう」補助動詞</a></p>\n<p><a href=\"https://nihongokyoshi-net.com/2019/05/24/jlptn4-grammar-mama/\">【JLPT N4】文法・例文：〜まま 狀態持續</a></p>\n<p><a href=\"https://www.sigure.tw/learn-japanese/grammar/n4/12.php\">N4文法12「たら」表假定條件</a></p>\n<p><a href=\"https://chobitsnochii.pixnet.net/blog/post/95176754\">「ように」常用以表示習慣或是目的</a></p>\n<p><a href=\"https://zh.wikipedia.org/wiki/%E5%B7%A1%E9%81%8A\">パレード parade</a></p>\n<p><a href=\"https://jp.sonic-learning.com/2016/01/30/%E3%80%90%E5%8A%A9%E8%A9%9E%E6%95%99%E5%AD%B808%E3%80%91%E6%97%A5%E6%96%87%E5%8A%A9%E8%A9%9E%E3%80%8C%E3%81%8B%E3%82%89%E3%80%81%E3%82%88%E3%82%8A%E3%80%8D%E7%9A%84%E7%94%A8%E6%B3%95/\">より表示時間或動作起點</a> </p>\n<p><a href=\"https://www.hujiang.com/jpciku/je79c9fe4bcbc/\">真似 模仿</a></p>\n","categories":["生活"],"tags":["音樂"]},{"title":"資料結構與演算法","url":"/interview/datastructureAndAlgorithm/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(20).jpeg\"></p>\n<p>經過這麼久的努力leetcode初級基礎題目我們已經走過一輪了，但我們一直沒進一步認識資料結構與演算法，我想在這暫停一下，先來理解基礎結構，之後的題目會比較好上手。  </p>\n<a id=\"more\"></a>\n\n<h1 id=\"LinkedList\"><a href=\"#LinkedList\" class=\"headerlink\" title=\"LinkedList\"></a>LinkedList</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class ListNode:</span><br><span class=\"line\">    def __init__(self, val&#x3D;0, next&#x3D;None):</span><br><span class=\"line\">        self.val &#x3D; val</span><br><span class=\"line\">        self.next &#x3D; next</span><br><span class=\"line\">class SingleLinkedList:</span><br><span class=\"line\">  def __init__(self): </span><br><span class=\"line\">    self.head &#x3D; None</span><br><span class=\"line\">    self.tail &#x3D; None</span><br><span class=\"line\">    return</span><br><span class=\"line\">  def add_list_item(self, item):</span><br><span class=\"line\">      if not isinstance(item, ListNode):</span><br><span class=\"line\">          item &#x3D; ListNode(item)</span><br><span class=\"line\">      if self.head is None:</span><br><span class=\"line\">          self.head &#x3D; item</span><br><span class=\"line\">      else:</span><br><span class=\"line\">          self.tail.next &#x3D; item</span><br><span class=\"line\">      self.tail &#x3D; item</span><br><span class=\"line\">      return</span><br><span class=\"line\"></span><br><span class=\"line\">list1 &#x3D; SingleLinkedList()</span><br><span class=\"line\">list1.add_list_item(1)</span><br><span class=\"line\">list1.add_list_item(2)</span><br><span class=\"line\">list1.add_list_item(3)</span><br><span class=\"line\">list1.add_list_item(4)</span><br><span class=\"line\">list1.add_list_item(5)</span><br><span class=\"line\"></span><br><span class=\"line\">while list1:</span><br><span class=\"line\">  if list1.head !&#x3D; None:</span><br><span class=\"line\">      print(list1.head.val)</span><br><span class=\"line\">      list1.head &#x3D; list1.head.next</span><br><span class=\"line\">  else: break</span><br><span class=\"line\"></span><br><span class=\"line\"># 1-&gt;2-&gt;3-&gt;4-&gt;5</span><br></pre></td></tr></table></figure>\n<p>ListNode結構就是一個值(val)跟一個鏈結(next)指到下個node。</p>\n<p>有點像區塊鏈的結構(也有個鏈)，但區塊鏈的鏈是之前節點的雜湊，內容也複雜得多。上面說明Python的寫法，也說明如何寫一個簡單的單向串列加val操作。  </p>\n<h1 id=\"StackAndQueue\"><a href=\"#StackAndQueue\" class=\"headerlink\" title=\"StackAndQueue\"></a>StackAndQueue</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">list &#x3D; []</span><br><span class=\"line\">list.append(1)</span><br><span class=\"line\">list.append(2)</span><br><span class=\"line\">list.append(3)</span><br><span class=\"line\"></span><br><span class=\"line\">Stack:  [].pop()</span><br><span class=\"line\"># [] &lt;-&gt;</span><br><span class=\"line\">Queue:  [].pop(0)</span><br><span class=\"line\"># &lt;- 0 [] &lt;-</span><br></pre></td></tr></table></figure>\n<p>Stack, Queue結構就是一個列表[]。</p>\n<p>不一樣的是，Stack是先進後出，Queue是先進先出(所以pop(0)表示從頭開始取出。</p>\n<h1 id=\"TreeAndGraphs\"><a href=\"#TreeAndGraphs\" class=\"headerlink\" title=\"TreeAndGraphs\"></a>TreeAndGraphs</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class TreeNode:</span><br><span class=\"line\">    def __init__(self, val&#x3D;0, left&#x3D;None, right&#x3D;None):</span><br><span class=\"line\">        self.val &#x3D; val</span><br><span class=\"line\">        self.left &#x3D; left</span><br><span class=\"line\">        self.right &#x3D; right</span><br><span class=\"line\">    def insertLeft(self, val):</span><br><span class=\"line\">        if self.left &#x3D;&#x3D; None:</span><br><span class=\"line\">            self.left &#x3D; TreeNode(val)</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            self.left.insertLeft(val)</span><br><span class=\"line\">    def insertRight(self, val):</span><br><span class=\"line\">        if self.right &#x3D;&#x3D; None:</span><br><span class=\"line\">              self.right &#x3D; TreeNode(val)</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            self.right.insertRight(val)</span><br><span class=\"line\"></span><br><span class=\"line\">sampleTree &#x3D; TreeNode(1)</span><br><span class=\"line\">sampleTree.insertLeft(2)</span><br><span class=\"line\">sampleTree.insertRight(3)</span><br><span class=\"line\">sampleTree.right.insertLeft(4)</span><br><span class=\"line\">sampleTree.right.insertRight(5)</span><br><span class=\"line\"></span><br><span class=\"line\">#          1</span><br><span class=\"line\">#         &#x2F;  \\  </span><br><span class=\"line\">#        2    3   </span><br><span class=\"line\">#            &#x2F; \\  </span><br><span class=\"line\">#          4    5</span><br></pre></td></tr></table></figure>\n<p>Tree的結構跟LinkedList差不多，但next分成左右2個。</p>\n<p>上面說明如何添加節點與子樹</p>\n<hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Vertex:</span><br><span class=\"line\">    def __init__(self, node):</span><br><span class=\"line\">        self._id &#x3D; node</span><br><span class=\"line\">        self._adjacent &#x3D; &#123;&#125;  # dict: key &#x3D; neighbor, value &#x3D; weight</span><br><span class=\"line\"></span><br><span class=\"line\">    def get_id(self):</span><br><span class=\"line\">        return self._id</span><br><span class=\"line\">    </span><br><span class=\"line\">    def set_neighbor_weight(self, neighbor, weight&#x3D;0):</span><br><span class=\"line\">        self._adjacent[neighbor] &#x3D; weight</span><br><span class=\"line\"></span><br><span class=\"line\">    def get_weight(self, neighbor):</span><br><span class=\"line\">        return self._adjacent[neighbor]</span><br><span class=\"line\">    </span><br><span class=\"line\">    def get_neighbors(self):</span><br><span class=\"line\">        return self._adjacent.keys()</span><br><span class=\"line\">    </span><br><span class=\"line\">    def get_degree_centrality(self):</span><br><span class=\"line\">        return len(self._adjacent)</span><br><span class=\"line\">    </span><br><span class=\"line\">    def get_weighted_degree_centrality(self):</span><br><span class=\"line\">        return sum(self._adjacent.values())</span><br><span class=\"line\"></span><br><span class=\"line\">class Graph:</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self._vertDict &#x3D; &#123;&#125;   # key &#x3D; node id, value &#x3D; Vertex</span><br><span class=\"line\"></span><br><span class=\"line\">    def __iter__(self):</span><br><span class=\"line\">        return iter(self._vertDict.values())</span><br><span class=\"line\"></span><br><span class=\"line\">    def add_vertex(self, node):</span><br><span class=\"line\">        if node in self._vertDict:</span><br><span class=\"line\">            return self._vertDict[node]</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            vertNew &#x3D; Vertex(node)</span><br><span class=\"line\">            self._vertDict[node] &#x3D; vertNew</span><br><span class=\"line\">            return vertNew</span><br><span class=\"line\"></span><br><span class=\"line\">    def get_vertex(self, node):</span><br><span class=\"line\">        return self._vertDict[node] if node in self._vertDict else None</span><br><span class=\"line\"></span><br><span class=\"line\">    def get_vertices(self):</span><br><span class=\"line\">        return self._vertDict.keys()</span><br><span class=\"line\">    </span><br><span class=\"line\">    def get_count_vertices(self):</span><br><span class=\"line\">        return len(self._vertDict)</span><br><span class=\"line\">    </span><br><span class=\"line\">    def get_count_edges(self):</span><br><span class=\"line\">        count &#x3D; 0</span><br><span class=\"line\">        for vert in self._vertDict.values():</span><br><span class=\"line\">            count +&#x3D; vert.get_degree_centrality()</span><br><span class=\"line\">        return count</span><br><span class=\"line\">    </span><br><span class=\"line\">    def add_edge(self, frm, to, w&#x3D;0):</span><br><span class=\"line\">        self.add_vertex(frm)</span><br><span class=\"line\">        self.add_vertex(to)</span><br><span class=\"line\">        self._vertDict[frm].set_neighbor_weight(self._vertDict[to], w)</span><br></pre></td></tr></table></figure>\n\n<p>由多個節點(Vertex)組成並用邊(Edge)連接的就可以稱做是一個Graph，邊也可以有權重。</p>\n<h1 id=\"Algorithms\"><a href=\"#Algorithms\" class=\"headerlink\" title=\"Algorithms\"></a>Algorithms</h1><p>常見的搜尋，排序要掌握好，還有興趣就參考<a href=\"https://github.com/TheAlgorithms/Python\">這個</a>吧。</p>\n","categories":["面試"],"tags":["力扣"]},{"title":"328. Odd Even Linked List","url":"/interview/328/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(21).jpeg\"></p>\n<p>Given a singly linked list, group all odd nodes together followed by the even nodes. Please note here we are talking about the node number and not the value in the nodes.</p>\n<p>You should try to do it in place. The program should run in O(1) space complexity and O(nodes) time complexity.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL</span><br><span class=\"line\">Output: 1-&gt;3-&gt;5-&gt;2-&gt;4-&gt;NULL</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: 2-&gt;1-&gt;3-&gt;5-&gt;6-&gt;4-&gt;7-&gt;NULL</span><br><span class=\"line\">Output: 2-&gt;3-&gt;6-&gt;7-&gt;1-&gt;5-&gt;4-&gt;NULL</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>這題要求間隔尋訪list，先列出奇數linkedlist，後面再接偶數，我們知道串列尋訪用.next，先找出奇偶的頭(head, head.next)，再迴圈間隔串下一個(odd.next, even.next = even.next, odd.next)，最後把even串到odd後面。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/328-Odd-Even-Linked-List?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"155. Min Stack","url":"/interview/155/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(22).jpeg\"></p>\n<p>Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.</p>\n<p>push(x) – Push element x onto stack.<br>pop() – Removes the element on top of the stack.<br>top() – Get the top element.<br>getMin() – Retrieve the minimum element in the stack.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input</span><br><span class=\"line\">[&quot;MinStack&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;getMin&quot;,&quot;pop&quot;,&quot;top&quot;,&quot;getMin&quot;]</span><br><span class=\"line\">[[],[-2],[0],[-3],[],[],[],[]]</span><br><span class=\"line\"></span><br><span class=\"line\">Output</span><br><span class=\"line\">[null,null,null,null,-3,null,0,-2]</span><br></pre></td></tr></table></figure>\n\n<p>Explanation</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">MinStack minStack &#x3D; new MinStack();</span><br><span class=\"line\">minStack.push(-2);</span><br><span class=\"line\">minStack.push(0);</span><br><span class=\"line\">minStack.push(-3);</span><br><span class=\"line\">minStack.getMin(); &#x2F;&#x2F; return -3</span><br><span class=\"line\">minStack.pop();</span><br><span class=\"line\">minStack.top();    &#x2F;&#x2F; return 0</span><br><span class=\"line\">minStack.getMin(); &#x2F;&#x2F; return -2</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>這篇要實作一個有取得最小值功能的Stack，也是我們第一次真正用到class，class有幾個methods需要實作，python中很直覺想到用list，那最小值就是min(list)，注意新增刪除元素都要更新最小值，取得最小時才不會出錯喔。   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">push()&#x2F;pop(): FILO.</span><br><span class=\"line\">top(): Get first value.</span><br><span class=\"line\">getMin(): The smallest value in stack. </span><br><span class=\"line\">getStack(): Get stack.  </span><br></pre></td></tr></table></figure>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/155-Min-Stack?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"JP Saxe - If the World Was Ending ft. Julia Michaels","url":"/life/earthquake/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(24).jpeg\"></p>\n<p>在吃飯聽到這首歌，很喜歡主唱細膩的聲線，MV在說男女遇到災難時的反應，但我想是在說更普羅大眾的-當感情遇到考驗時你還會選擇繼續相信對方嗎？</p>\n<a id=\"more\"></a>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/1jO2wSpAoxA\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">I was distracted and in traffic</span><br><span class=\"line\">我在交通繁忙時心煩意亂</span><br><span class=\"line\">I didn&#39;t feel it when the earthquake happened</span><br><span class=\"line\">甚至感受不到地震</span><br><span class=\"line\">But it really got me thinkin&#39;, were you out drinkin&#39;?</span><br><span class=\"line\">一直思考著你在外面喝酒嗎？</span><br><span class=\"line\">Were you in the living room, chillin&#39;, watchin&#39; television?</span><br><span class=\"line\">還是在客廳看著電視呢？</span><br><span class=\"line\">It&#39;s been a year now, think I&#39;ve figured out how</span><br><span class=\"line\">經過一年，以為我想通了</span><br><span class=\"line\">How to let you go and let communication die out</span><br><span class=\"line\">想通如何放手不繼續聯絡</span><br><span class=\"line\">I know, you know, we know you weren&#39;t</span><br><span class=\"line\">我，你，我們都知道你不會</span><br><span class=\"line\">Down for forever and it&#39;s fine</span><br><span class=\"line\">永遠失望，沒關係的</span><br><span class=\"line\">I know, you know, we know we weren&#39;t</span><br><span class=\"line\">我，你，我們都知道我們不是</span><br><span class=\"line\">Meant for each other and it&#39;s fine</span><br><span class=\"line\">天造地設的一對，那也可以</span><br><span class=\"line\">But if the world was ending, you&#39;d come over, right?</span><br><span class=\"line\">但是，如果世界正在毀滅，你會過來的，對嗎？</span><br><span class=\"line\">You&#39;d come over and you&#39;d stay the night</span><br><span class=\"line\">你會過來待到天明</span><br><span class=\"line\">Would you love me for the hell of it?</span><br><span class=\"line\">還是你只是想跟我玩玩？</span><br><span class=\"line\">All our fears would be irrelevant</span><br><span class=\"line\">再也不必擔心了</span><br><span class=\"line\">If the world was ending, you&#39;d come over, right?</span><br><span class=\"line\">如果世界正在毀滅，你會過來的，對嗎？</span><br><span class=\"line\">The sky&#39;d be falling and I&#39;d hold you tight</span><br><span class=\"line\">天塌下來時，我會緊緊抱住你</span><br><span class=\"line\">And there wouldn&#39;t be a reason why</span><br><span class=\"line\">而且不需要理由</span><br><span class=\"line\">We would even have to say goodbye</span><br><span class=\"line\">我們甚至不得不說再見</span><br><span class=\"line\">If the world was ending, you&#39;d come over, right? Right?</span><br><span class=\"line\">如果世界正在毀滅，你會過來的，對嗎？是嗎？</span><br><span class=\"line\">If the world was ending, you&#39;d come over, right? Right?</span><br><span class=\"line\">如果世界正在毀滅，你會過來的，對嗎？是吧？</span><br><span class=\"line\">I tried to imagine your reaction</span><br><span class=\"line\">我厭倦去想像你的反應</span><br><span class=\"line\">It didn&#39;t scare me when the earthquake happened</span><br><span class=\"line\">地震發生並沒有嚇到我</span><br><span class=\"line\">But it really got me thinkin&#39;, the night we went drinkin&#39;</span><br><span class=\"line\">但這真的讓我思考，我們去喝酒的那天晚上</span><br><span class=\"line\">Stumbled in the house and didn&#39;t make it past the kitchen</span><br><span class=\"line\">跌跌撞撞地走不過廚房</span><br><span class=\"line\">Ah, it&#39;s been a year now, think I&#39;ve figured out how</span><br><span class=\"line\">經過一年了，我想知道</span><br><span class=\"line\">How to think about you without it rippin&#39; my heart out</span><br><span class=\"line\">沒有撕心裂肺怎麼去想你</span><br><span class=\"line\">And I know, you know, we know you weren&#39;t</span><br><span class=\"line\">我，你，我們都知道你不會</span><br><span class=\"line\">Down for forever and it&#39;s fine</span><br><span class=\"line\">永遠失望，沒關係的</span><br><span class=\"line\">I know, you know, we know we weren&#39;t</span><br><span class=\"line\">我，你，我們都知道我們不是</span><br><span class=\"line\">Meant for each other and it&#39;s fine</span><br><span class=\"line\">天造地設的一對，那也可以</span><br><span class=\"line\">But if the world was ending, you&#39;d come over, right?</span><br><span class=\"line\">但是，如果世界正在毀滅，你會過來的，對嗎？</span><br><span class=\"line\">You&#39;d come over and you&#39;d stay the night</span><br><span class=\"line\">你會待到天明</span><br><span class=\"line\">Would you love me for the hell of it?</span><br><span class=\"line\">你對我的愛只是虛幻的？</span><br><span class=\"line\">All our fears would be irrelevant</span><br><span class=\"line\">我們所有的擔心都是無關緊要的</span><br><span class=\"line\">If the world was ending, you&#39;d come over, right?</span><br><span class=\"line\">如果世界正在毀滅，你會過來的，對嗎？</span><br><span class=\"line\">Sky&#39;d be falling while I hold you tight</span><br><span class=\"line\">天塌下來時，我會緊緊抱住你</span><br><span class=\"line\">No, there wouldn&#39;t be a reason why</span><br><span class=\"line\">不，沒有理由</span><br><span class=\"line\">We would even have to say goodbye</span><br><span class=\"line\">我們甚至不得不說再見</span><br><span class=\"line\">If the world was ending, you&#39;d come over, right?</span><br><span class=\"line\">如果世界正在毀滅，你會過來的，對嗎？</span><br><span class=\"line\">You&#39;d come over, right?</span><br><span class=\"line\">你會過來吧？</span><br><span class=\"line\">You&#39;d come over, you&#39;d come over, you&#39;d come over, right?</span><br><span class=\"line\">你會過來，你會過來，你會過來，對吧？</span><br><span class=\"line\">I know, you know, we know you weren&#39;t</span><br><span class=\"line\">我，你，我們都知道你不會</span><br><span class=\"line\">Down for forever and it&#39;s fine</span><br><span class=\"line\">永遠失望，這很好</span><br><span class=\"line\">I know, you know, we know we weren&#39;t</span><br><span class=\"line\">我，你，我們都知道我們不是</span><br><span class=\"line\">Meant for each other and it&#39;s fine</span><br><span class=\"line\">天造地設的一對，這樣也沒差</span><br><span class=\"line\">But if the world was ending, you&#39;d come over, right?</span><br><span class=\"line\">但是，如果世界正在毀滅，你會過來的，對嗎？</span><br><span class=\"line\">You&#39;d come over and you&#39;d stay the night</span><br><span class=\"line\">你會過來過夜</span><br><span class=\"line\">Would you love me for the hell of it?</span><br><span class=\"line\">你會徹底愛我嗎？</span><br><span class=\"line\">All our fears would be irrelevant</span><br><span class=\"line\">我們再也不必擔心了</span><br><span class=\"line\">If the world was ending, you&#39;d come over, right?</span><br><span class=\"line\">如果世界正在毀滅，你會過來的，對嗎？</span><br><span class=\"line\">The sky&#39;d be falling while I hold you tight</span><br><span class=\"line\">天塌下來時，我會緊緊抱住你</span><br><span class=\"line\">No, there wouldn&#39;t be a reason why</span><br><span class=\"line\">沒有任何理由</span><br><span class=\"line\">We would even have to say goodbye</span><br><span class=\"line\">我們甚至不得不說再見</span><br><span class=\"line\">If the world was ending, you&#39;d come over, right?</span><br><span class=\"line\">如果世界正在毀滅，你會過來的，對嗎？</span><br><span class=\"line\">You&#39;d come over, you&#39;d come over, you&#39;d come over, right?</span><br><span class=\"line\">你一定會過來，對嗎？</span><br><span class=\"line\">Hmm</span><br><span class=\"line\">嗯</span><br><span class=\"line\">If the world was ending, you&#39;d come over, right?</span><br><span class=\"line\">如果世界正在毀滅，你會過來的，對嗎？</span><br></pre></td></tr></table></figure>\n\n<p>當黑夜來臨時，妳會選擇陪我直到天明，還是轉身離開呢？<br>而我想我早就知道答案了。  </p>\n","categories":["生活"],"tags":["音樂"]},{"title":"94. Binary Tree Inorder Traversal","url":"/interview/94/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(23).jpeg\"></p>\n<p>Given the root of a binary tree, return the inorder traversal of its nodes’ values.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [1,null,2,3]</span><br><span class=\"line\">Output: [1,3,2]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; []</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [1]</span><br><span class=\"line\">Output: [1]</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [1,2]</span><br><span class=\"line\">Output: [2,1]</span><br></pre></td></tr></table></figure>\n\n<p>Example 5:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [1,null,2]</span><br><span class=\"line\">Output: [1,2]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>二元樹尋訪應該是樹類最基本題目了，尋訪分三種，前序，中序，後序，依照值(root.val)位置決定是哪種。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">preorder: 中-&gt;左-&gt;右  </span><br><span class=\"line\">inorder: 左-&gt;中-&gt;右  </span><br><span class=\"line\">postorder: 左-&gt;右-&gt;中</span><br></pre></td></tr></table></figure>\n\n<p>而題目需要中序，所以可以寫成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">def inOrder(root): </span><br><span class=\"line\">    if root !&#x3D; None: </span><br><span class=\"line\">        inOrder(root.left)  </span><br><span class=\"line\">        print(root.val,end&#x3D;&quot; &quot;)  </span><br><span class=\"line\">        inOrder(root.right) </span><br></pre></td></tr></table></figure>\n\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/94-Binary-Tree-Inorder-Traversal?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"重訓的上下休息","url":"/life/udr/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(17).jpeg\"></p>\n<p>從摸索跟不斷追尋下，我理解到課表需要修正，由於週三一直都是去復健，而去健身房時間大約只能做<br>3個動作，我規劃了一天上肢/下肢各兩個動作，搭配一個胸腹，這份課表目的是變成上下分化訓練，在某部分痠痛時訓練另一半。</p>\n<a id=\"more\"></a>\n\n<iframe src=\"https://docs.google.com/spreadsheets/d/e/2PACX-1vQJ6KxXbkiEXyyjSelFEmOfpNCny6wrpxIbmtOOxDj12XQkCR8qCK16Wnudvt8V4lO4UGfsDKww33hY/pubhtml?gid=0&amp;single=true&amp;widget=true&amp;headers=false\"  width=\"550\" height=\"500\" ></iframe>\n\n<p>雖然菜單改了，但總想著是不是有更分化的做法呢？其實是有的…</p>\n","categories":["生活"],"tags":["運動"]},{"title":"重訓的腿拉推","url":"/life/ppl/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(18).jpeg\"></p>\n<p>終於來到我目前施行的課表了，一般來說是一週推拉腿推拉腿，週日休息的節奏，但考量到週三可能要復健，一五有時會被貼紮或拉筋，而我最需加強腿部。</p>\n<a id=\"more\"></a>\n\n<iframe src=\"https://docs.google.com/spreadsheets/d/e/2PACX-1vT3y4FEXs_nsk4qEt9-VKml01uguiIxdyagb5COvgW7EKOUXGaDxhxxnPnG-p13grM4anWTsV8wybml/pubhtml?gid=0&amp;single=true&amp;widget=true&amp;headers=false\"  width=\"550\" height=\"500\"></iframe>\n\n<p>我把總訓練量砍半，順序顛倒，最後變成適合我的腿拉(復健/腿)推腿，六日休息，這樣肌群有分化隔天不會用到酸痛的部位，再不斷加強重量，也持續看得到成長。</p>\n","categories":["生活"],"tags":["運動"]},{"title":"Collections","url":"/interview/collections/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(25).jpeg\"></p>\n<p>就跟Java一樣，語言學習到一定程度就會從基礎類別str, int, list, tuple, set, dict增加更方便的collections.</p>\n<p>而這篇會介紹collections有哪些，接下來再個別介紹。</p>\n<a id=\"more\"></a>\n\n<ul>\n<li><p>from collections import defaultdict<br>帶有默認值，Key不存在會自動生成相應型別的value</p>\n</li>\n<li><p>from collections import OrderedDict<br>有序字典</p>\n</li>\n<li><p>from collections import deque<br>雙端隊列，可以快速的從另外一側追加和推出對象<br>list儲存資料的優勢在於按索引查詢元素會很快，但是插入和刪除元素就很慢了，因為list是基於陣列實現的。deque是為了高效實現插入和刪除操作的雙向列表，適合用於佇列和棧，而且執行緒安全</p>\n</li>\n<li><p>from collections import Counter<br>用來統計相關元素的出現次數</p>\n</li>\n<li><p>from collections import namedtuple<br>生成可以使用名字來訪問元素內容的tuple子類，提供2種方法：<br><code>_make()</code> 向新建對像中傳遞可迭代對象代替*args<br><code>_asdict()</code> 方法可以將一個namedtuple對象轉換為一個orderdict字典  </p>\n</li>\n<li><p>from collections import ChainMap<br>可以用來合併多個字典。</p>\n</li>\n<li><p>from collections import UserDict<br><a href=\"https://docs.python.org/zh-tw/3/library/collections.html#collections.UserDict\">Dict封裝</a></p>\n</li>\n<li><p>from collections import UserList<br><a href=\"https://docs.python.org/zh-tw/3/library/collections.html#collections.UserList\">List封裝</a></p>\n</li>\n<li><p>from collections import UserString<br><a href=\"https://docs.python.org/zh-tw/3/library/collections.html#collections.UserString\">String封裝</a></p>\n</li>\n</ul>\n<h2 id=\"其他好用的酷東西\"><a href=\"#其他好用的酷東西\" class=\"headerlink\" title=\"其他好用的酷東西\"></a>其他好用的酷東西</h2><h3 id=\"zip\"><a href=\"#zip\" class=\"headerlink\" title=\"zip\"></a>zip</h3><p>以前知道方便粘合跟拆解，反轉倒是很新鮮</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/zip?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\n<h3 id=\"itertools\"><a href=\"#itertools\" class=\"headerlink\" title=\"itertools\"></a>itertools</h3><p>排列組合是我高中惡夢，沒想到這麼方便就算出來了(汗</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/product?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\n<h3 id=\"lambda\"><a href=\"#lambda\" class=\"headerlink\" title=\"lambda\"></a>lambda</h3><p>Java也有，能方便簡潔構建程式  </p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/lambda?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\n<h3 id=\"random\"><a href=\"#random\" class=\"headerlink\" title=\"random\"></a>random</h3><p>Shvara API的本體  </p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/random?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\n<p>如果還想知道類似的東西歡迎下方留言跟我說，也祝大家黑皮牛夜。  </p>\n","categories":["面試"],"tags":["力扣"]},{"title":"DefaultDict","url":"/interview/defaultDict/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(26).jpeg\"></p>\n<p>defaultDict當調用key值時不用檢查是否存在。</p>\n<a id=\"more\"></a>\n\n<p>給一個重複字串列表<br>方法1 if, else 統計<br>方法2 setdefault更簡潔，找到回傳，找不到給預設值<br>方法3 defaultdict，預設回傳defaultdict, 可以轉list(key) 或dict<br>最後是可以將method當參數傳出去<br>其他還有字元統計，同key分組<br>真的很方便呢。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/collection-defaultDict?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\n<p><a href=\"https://docs.python.org/zh-tw/3/library/collections.html#collections.defaultdict\">ref</a></p>\n","categories":["面試"],"tags":["力扣"]},{"title":"閱讀超速學習","url":"/manager/speed/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(35).jpeg\"></p>\n<ol>\n<li>了解全貌：描繪學習地圖</li>\n<li>專注目標：靈活改變方法</li>\n<li>直截了當：直接操作省時</li>\n<li>反覆演練：優化每個步驟</li>\n<li>測試回憶：主動回想複習</li>\n<li>意見回饋：擷取他人建言</li>\n<li>重點記憶：永久保留精華</li>\n<li>培養直覺：深入累積反射</li>\n<li>勇於實驗：探索更多可能</li>\n</ol>\n<a id=\"more\"></a>\n\n<h2 id=\"元學習metalearning\"><a href=\"#元學習metalearning\" class=\"headerlink\" title=\"元學習metalearning\"></a>元學習metalearning</h2><p>後設學習，學習如何學習</p>\n<h2 id=\"建構學習地圖\"><a href=\"#建構學習地圖\" class=\"headerlink\" title=\"建構學習地圖\"></a>建構學習地圖</h2><ol>\n<li>需要的背景知識</li>\n<li>需要記憶的部分</li>\n<li>需要練習的部分</li>\n</ol>\n<h2 id=\"10-法則\"><a href=\"#10-法則\" class=\"headerlink\" title=\"10%法則\"></a>10%法則</h2><p>事情開始前投入全部時間10%研究<br>當做自己喜歡的事，學習就容易許多</p>\n<h2 id=\"直接學習\"><a href=\"#直接學習\" class=\"headerlink\" title=\"直接學習\"></a>直接學習</h2><ol>\n<li>訂學習計畫與明確產出</li>\n<li>打造適合學習環境並沈浸其中</li>\n<li>腦中預想學習過程模擬</li>\n<li>不斷增加挑戰</li>\n</ol>\n<h2 id=\"反覆練習\"><a href=\"#反覆練習\" class=\"headerlink\" title=\"反覆練習\"></a>反覆練習</h2><ol>\n<li>將大目標分解成容易精進小目標</li>\n<li>自我評估</li>\n<li>模仿領域專家</li>\n<li>找出學習會遇到的瓶頸，先解決</li>\n<li>小目標有階段性，做不到下個就退回上一個<br>試著提取一個尚未存在你腦中的答案，就像鋪設一條道路，可以帶領你走向一棟尚未被建造出來的建築物。</li>\n</ol>\n<h2 id=\"提取記憶\"><a href=\"#提取記憶\" class=\"headerlink\" title=\"提取記憶\"></a>提取記憶</h2><ol>\n<li>記憶卡問題答案配對背誦</li>\n<li>自由回想在白紙寫下記憶</li>\n<li>段落後寫重點簡單能回憶</li>\n<li>自製挑戰方便去活用已知</li>\n<li>描繪腦中輪廓確定已掌握</li>\n</ol>\n<h2 id=\"改善回饋\"><a href=\"#改善回饋\" class=\"headerlink\" title=\"改善回饋\"></a>改善回饋</h2><ol>\n<li>消除雜音，改進過程具體明確</li>\n<li>持續修正到適合自己</li>\n<li>組織問題關鍵點</li>\n<li>擁抱能進步回饋並快速修正</li>\n</ol>\n<h2 id=\"預防遺忘\"><a href=\"#預防遺忘\" class=\"headerlink\" title=\"預防遺忘\"></a>預防遺忘</h2><ol>\n<li>重複複習比一次要記全部更好，但間隔不宜過長</li>\n<li>程序化培養成習慣</li>\n<li>做出超乎預期的更佳表現</li>\n<li>圖像記憶</li>\n</ol>\n<h2 id=\"培養直覺\"><a href=\"#培養直覺\" class=\"headerlink\" title=\"培養直覺\"></a>培養直覺</h2><ol>\n<li>還是要先面對複雜問題</li>\n<li>從過程理解複雜問題</li>\n<li>從具體可掌握的開始</li>\n<li>寫下問題，想像自己如何處理，想像自己要傳授解法給他人</li>\n</ol>\n<h2 id=\"勇於實驗\"><a href=\"#勇於實驗\" class=\"headerlink\" title=\"勇於實驗\"></a>勇於實驗</h2><ol>\n<li>學習方法，學習技巧，學習風格</li>\n<li>先模仿再創造</li>\n<li>比較各種方法</li>\n<li>探索不同可能</li>\n<li>混合不同技能</li>\n<li>追求卓越</li>\n</ol>\n","categories":["管理"],"tags":["文書"]},{"title":"TechnicalWriting","url":"/interview/TechnicalWriting/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(28).jpeg\"></p>\n<p>From this moment, we open a new chapter to learn how to write English precision and elegent.<br>Wish everyone enjoy it. </p>\n<a id=\"more\"></a>\n\n<h1 id=\"Part-of-Speech\"><a href=\"#Part-of-Speech\" class=\"headerlink\" title=\"Part of Speech\"></a>Part of Speech</h1><ul>\n<li><p>Noun<br><strong>Sam</strong> runs <strong>races</strong>.</p>\n</li>\n<li><p>Pronoun(代名詞)<br>Sam runs races. <strong>He</strong> likes to compete.</p>\n</li>\n<li><p>Adjective<br>Sam wears <strong>blue</strong> shoes.</p>\n</li>\n<li><p>Verb<br>Sam <strong>runs</strong> races.</p>\n</li>\n<li><p>Adverb(副詞)<br>Sam runs <strong>slowly</strong>.  </p>\n</li>\n<li><p>Preposition(介係詞)<br>Sam’s sneakers are seldom <strong>on</strong> his shelf.</p>\n</li>\n<li><p>Conjunction<br>Sam’s trophies <strong>and</strong> ribbons live only in his imagination.  </p>\n</li>\n<li><p>Transition(過渡詞)<br>Sam runs races weekly. <strong>However</strong>, he finishes races weakly.</p>\n</li>\n</ul>\n<h1 id=\"Words\"><a href=\"#Words\" class=\"headerlink\" title=\"Words\"></a>Words</h1><ul>\n<li><p>Define new or unfamiliar terms</p>\n<ul>\n<li>If the term already exists, link to a good existing explanation.</li>\n<li>If your document is introducing the term, define the term.</li>\n<li>If your document is introducing many terms, collect the definitions into a glossary.</li>\n</ul>\n</li>\n<li><p>Use terms consistently</p>\n</li>\n<li><p>Use acronyms(縮寫) properly</p>\n<ul>\n<li>If you defined a short term, use shortened version of that name.</li>\n<li>Don’t define acronyms that would only be used a few times.</li>\n</ul>\n</li>\n<li><p>Use the acronym or the full term?</p>\n<ul>\n<li>The acronym is significantly shorter than the full term.</li>\n<li>The acronym appears many times in the document.</li>\n</ul>\n</li>\n<li><p>Disambiguate pronouns</p>\n<ul>\n<li>Replace <strong>this</strong> or <strong>that</strong> with the appropriate noun.</li>\n</ul>\n</li>\n</ul>\n<p><em>This series of articles is extracted from Google <a href=\"https://developers.google.com/tech-writing\">Technical Writing Courses</a>.</em></p>\n","categories":["面試"],"tags":["科技英文"]},{"title":"OrderedDict","url":"/interview/orderedDict/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(27).jpeg\"></p>\n<p>OrderedDict照插入順序排序的dict。</p>\n<a id=\"more\"></a>\n\n<p>初始按照插入順序排序，也可以配合sorted對key或value排序。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/collection-orderedDict?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"ActiveVoice","url":"/interview/ActiveVoice/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(31).jpeg\"></p>\n<p>Active voice is simplify and feels aggressive, that is exactly what we need.</p>\n<p>Clear sentences express our unambiguous and firm position.</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Active-voice-vs-passive-voice\"><a href=\"#Active-voice-vs-passive-voice\" class=\"headerlink\" title=\"Active voice vs. passive voice\"></a>Active voice vs. passive voice</h1><ul>\n<li><p>Active Voice Sentence = actor + verb + target</p>\n<p>The cat sat on the mat.</p>\n</li>\n<li><p>Passive Voice Sentence = target + verb + actor  </p>\n<p>The mat was sat on by the cat.<br>Passive voice sentences omit an actor.<br>The mat was sat on.</p>\n</li>\n<li><p>Recognize passive verbs.  </p>\n<p>Passive verb = form of be + past participle verb</p>\n<p>was interpreted as…<br>is generated by…</p>\n</li>\n</ul>\n<h1 id=\"Clear-sentences\"><a href=\"#Clear-sentences\" class=\"headerlink\" title=\"Clear sentences\"></a>Clear sentences</h1><ul>\n<li><p>Choose strong verbs.</p>\n</li>\n<li><p>Reduce there is/there are.</p>\n</li>\n<li><p>Minimize certain adjectives and adverbs.  </p>\n<p>Setting this flag makes the application run 225-250% faster.</p>\n</li>\n</ul>\n<p><em>This series of articles is extracted from Google <a href=\"https://developers.google.com/tech-writing\">Technical Writing Courses</a>.</em></p>\n","categories":["面試"],"tags":["科技英文"]},{"title":"米其林餐盤想想廚房","url":"/life/josephBistro/","content":"<p><img src=\"https://i.imgur.com/PV8XBcQ.jpg\" alt=\"img\"></p>\n<a id=\"more\"></a>\n\n<p>想想廚房，第一次吃米其林印度菜，米其林餐盤大概像是入選的階層，由於對香料也有點研究，今天就來想想吧。</p>\n<p><img src=\"https://i.imgur.com/h78FfuQ.jpg\" alt=\"img\"><br>餐廳瀰漫小荳蔻味，招待的孜然薄餅香脆好吃，不過不配水會有點鹹。</p>\n<p><img src=\"https://i.imgur.com/X3s2MeA.jpg\" alt=\"img\"></p>\n<p>印度奶茶以前在裸市集買來調過，本來以為會是小荳蔻丁香味，但看來印度奶茶配方好像每家都不一樣。<br>我喝到的味道順序是：<br>1奶 2紅茶 3薑 4小荳蔻 5丁香 6孜然 7肉桂<br>整體味道搭配很舒服，還蠻喜歡的。</p>\n<p><img src=\"https://i.imgur.com/wt1k57r.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/gS0b0YQ.jpg\" alt=\"img\"></p>\n<ol>\n<li>胡椒鮪魚漢堡</li>\n<li>檸檬魚配葡萄</li>\n</ol>\n<p>我不太懂有距離的菜單名詞，第一道看起來像漢堡排，吃起來也是，肉桂醃黃瓜片跟紅色微辣醬的搭配讓肉排不太單調，只是覺得黃瓜中肉桂太溫和，如果是魚肉排配芫荽籽會更驚豔。<br>跟秘魯名菜Ceviche有老虎奶一樣，檸檬魚是常見的組合，而搭葡萄多一絲甜味還不錯。</p>\n<p><img src=\"https://i.imgur.com/iRGqkm8.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/oAeBuVR.jpg\" alt=\"img\"></p>\n<ol start=\"3\">\n<li>檸檬烤雞</li>\n<li>羊排</li>\n</ol>\n<p>第一道想必是北印著名的國宴菜坦都里烤雞，雞肉軟嫩，配上胡蘿蔔芹菜醬不膩口。<br>羊排沒有羊騷味，搭配甜辣肉桂孜然蒜泥馬鈴薯，跟侯布雄搭牛排的絲滑馬鈴薯泥不一樣，不過也很有特色。</p>\n<p><img src=\"https://i.imgur.com/gVsdF7r.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/UxEleBG.jpg\" alt=\"img\"></p>\n<ol start=\"5\">\n<li>牛腩</li>\n<li>月桂葉臭豆腐扁豆秋葵  </li>\n</ol>\n<p>牛腩軟嫩，不過有一種酸苦味，冷掉之後雖然不辣但剩肉桂味。<br>印度也有臭豆腐？這道熱的時候吃超辣，冷掉比較不辣，可是苦味更明顯。<br>這兩道主管有加點主菜甜辣肉桂孜然餅跟薑黃飯，可以任意搭配，我覺得搭起來餅的甜味中和苦味很搭！！</p>\n<p><img src=\"https://i.imgur.com/276PASU.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/b8bemzl.jpg\" alt=\"img\"></p>\n<ol start=\"7\">\n<li>咖哩蛤蜊肉桂</li>\n<li>咖哩石斑魚月桂葉花椒</li>\n</ol>\n<p>這兩道雖然都是咖哩，但味道有些不同，也許這就是印度菜奧妙之處吧，可能我已經被德國肉桂紅酒跟肉桂麵包洗腦，搭蛤蜊苦苦辣辣的不太習慣。<br>石斑魚魚肉嫩也富含油脂，搭月桂葉香氣很下飯，如果能再麻一點會更好，花椒君雖然有出場但感覺不到你啊…。</p>\n<p><img src=\"https://i.imgur.com/MHYpmIg.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/jeikbzP.jpg\" alt=\"img\"></p>\n<ol start=\"9\">\n<li>玫瑰巧克力脆片印式冰淇淋</li>\n<li>主廚巴菲牛奶糕</li>\n</ol>\n<p>最後這個海螺是冰淇淋，玫瑰味很香，下面是老朋友肉桂醬，裡面似乎還有花生碎粒，只是花生沒有去皮，最後只留下苦苦花生皮有點可惜（也許道地就要留下苦味？<br>牛奶糕應該是一大特色，只是我不太能感受到，糕體是有層次，底-頂分別是消化餅-未熟餅乾麵糰-抹茶味，因為我做過很多餅乾，中間那層未熟的麵團味道我很熟悉，整個搭起來有點難形容。</p>\n<p>印度咖哩千變萬化，對香料的使用也十分豐富，以我的感覺來說，最初那杯奶茶跟烤雞是想再三回味的。</p>\n<p><img src=\"https://i.imgur.com/8CnOBqJ.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/oIfQbgK.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/EXB73oE.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/5jUHC9R.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/yNd5A0A.jpg\" alt=\"img\"><br><img src=\"https://i.imgur.com/tQ3QQwc.jpg\" alt=\"img\"></p>\n<iframe src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d14458.186079430827!2d121.5343787!3d25.0494592!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x3f55d241076a8ca9!2zSm9zZXBoIEJpc3RybyDmg7Pmg7Plu5rmiL8!5e0!3m2!1szh-TW!2stw!4v1615025485102!5m2!1szh-TW!2stw\" width=\"600\" height=\"450\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\"></iframe>\n\n<p>這是我第七次吃米其林餐廳，感謝主管，也感謝幫忙拍照的同事。</p>\n","categories":["生活"],"tags":["飲食"]},{"title":"Deque","url":"/interview/deque/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(29).jpeg\"></p>\n<p>Deque更安全方便的添加元素。</p>\n<a id=\"more\"></a>\n<p>一般list只能從右邊新增刪除元素，deque可以雙向，適合queue, stack。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/collection-deque?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"第二母語","url":"/engineer/nativeLanguage/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(30).jpeg\"></p>\n<p>開始學日文後，英文就瞬間親切許多，那應該能稱為第二母語吧。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"O\"><a href=\"#O\" class=\"headerlink\" title=\"O\"></a>O</h1><p>能用英文跟母語工作者正常交流。</p>\n<h1 id=\"KRs\"><a href=\"#KRs\" class=\"headerlink\" title=\"KRs\"></a>KRs</h1><ol>\n<li><p>聽：95% 還是要注意聽<br>App: Udemy（聽懂內容）<br>測量：把聽懂的部份內化成實踐出來的東西</p>\n</li>\n<li><p>讀：95% 大部份都可以看懂<br>App: Google Translate+Reader Mode+TLDR This（知道重點）<br>測量：讀懂英文迷因</p>\n</li>\n<li><p>寫：95% 有時候會忘記單字<br>App: Grammarly（文法正確下能傳達意思）<br>測量：讀英文迷因並嘗試寫出來跟外國人互動，並以外國人按笑臉為指標</p>\n</li>\n<li><p>說：60% 要持續修正<br>App: Elsa Speaker/Tandem（能讓對方聽懂）<br>測量：Elsa各單元分數要在60分以上</p>\n</li>\n</ol>\n<p>時程：2021/1/31- 2021/4/30</p>\n","categories":["工程"],"tags":["好用"]},{"title":"やさしいすいせい","url":"/life/comet/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(27).jpeg\"></p>\n<p>溫柔的彗星，在不理解歌詞前只覺得是首輕快溫暖的歌，<br>理解意境發現實際異常沈重…。</p>\n<a id=\"more\"></a>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/iykAM_McguQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[A]獅子</span><br><span class=\"line\">今いま 、 静しず かな 夜よる の 中なか で</span><br><span class=\"line\">現在，這樣恬靜的夜裡</span><br><span class=\"line\">無計画むけいかく に 車くるま を 走はし らせた</span><br><span class=\"line\">我沒有計畫的開著車</span><br><span class=\"line\">左隣ひだりどなり 、あなたの  横顔よこがお を 月つき が 照て らした</span><br><span class=\"line\">左邊，你的側臉被月光照耀著</span><br><span class=\"line\"></span><br><span class=\"line\">[A]獅子</span><br><span class=\"line\">ただ、 思おも い 出で を 探さぐ る 様よう に</span><br><span class=\"line\">只是，你像探尋回憶般思索著什麼</span><br><span class=\"line\">辿たど る 様よう に 言葉ことば を 繋つな ぎ 合あ わせれば</span><br><span class=\"line\">一步步將你曾說過的話連繫起來的話</span><br><span class=\"line\">どうしようもなく 溢あふ れてくる  日々ひび の 記憶きおく </span><br><span class=\"line\">往日記憶就會止不住的湧上心頭</span><br><span class=\"line\"></span><br><span class=\"line\">[B]獅子</span><br><span class=\"line\">あなたのそばで 生い きると 決き めたその 日ひ から</span><br><span class=\"line\">從決定陪伴你生活那天起</span><br><span class=\"line\">少すこ しずつ 変か わり 始はじ めた 世界せかい </span><br><span class=\"line\">我的世界就一點一點開始改變</span><br><span class=\"line\">強つよ く 在あ るように 弱よわ さを 隠かく すように</span><br><span class=\"line\">我故作堅強掩飾內心的軟弱</span><br><span class=\"line\">演えん じてきた 日々ひび に</span><br><span class=\"line\">努力的扮演著每一天</span><br><span class=\"line\"></span><br><span class=\"line\">[B]獅子</span><br><span class=\"line\">ある 日ひ  突然とつぜん  現あらわ れたその 眼差まなざ しが</span><br><span class=\"line\">直到有天忽然看見你的眼神</span><br><span class=\"line\">知し らなかったこと 教おし えてくれた</span><br><span class=\"line\">告訴我從前不知道的事</span><br><span class=\"line\">守まも るべきものがあればそれだけで</span><br><span class=\"line\">若僅只是有必須守護的東西</span><br><span class=\"line\">こんなにも 強つよ くなれるんだ</span><br><span class=\"line\">也能變得堅強</span><br><span class=\"line\"></span><br><span class=\"line\">[C]獅子</span><br><span class=\"line\">深ふか い 深ふか い 暗闇くらやみ の 中なか で</span><br><span class=\"line\">深沉的黑暗之中</span><br><span class=\"line\">出会であ い、 共とも に 過す ごしてきた</span><br><span class=\"line\">我們相遇，一起成長</span><br><span class=\"line\">類るい の 無な い 日々ひび   心地ここち よかった いや、 幸しあわ せだった</span><br><span class=\"line\">每天都過得很愜意，阿，是很幸福</span><br><span class=\"line\">確たし かにほら  救すく われたんだよ</span><br><span class=\"line\">我的確被你拯救了唷</span><br><span class=\"line\">あなたに</span><br><span class=\"line\">就是你</span><br><span class=\"line\"></span><br><span class=\"line\">わずかな 光ひかり を 捉とら えて 輝かがや いたのは</span><br><span class=\"line\">眼中捕捉到的微弱光芒閃爍著的是</span><br><span class=\"line\">まるで 流なが れ 星ぼし のような 涙なみだ </span><br><span class=\"line\">彷彿慧星般的眼淚</span><br><span class=\"line\">不器用ぶきよう な 命いのち から 流なが れて 零こぼ れ 落お ちた</span><br><span class=\"line\">是從我笨拙生命中流下的</span><br><span class=\"line\">美うつく しい 涙なみだ </span><br><span class=\"line\">美麗淚水</span><br><span class=\"line\"></span><br><span class=\"line\">[B]鹿</span><br><span class=\"line\">強つよ く 大おお きな 体からだ に 秘ひ めた 優やさ しさも</span><br><span class=\"line\">隱藏在強大身體裡的溫柔</span><br><span class=\"line\">どこか 苦くる しげなその 顔かお も</span><br><span class=\"line\">不光是身形，連你那辛苦的神情</span><br><span class=\"line\">愛いと しく 思おも うんだ  姿形すがたかたち じゃないんだ</span><br><span class=\"line\">我也很喜愛</span><br><span class=\"line\">やっと 気付きづ いたんだ</span><br><span class=\"line\">很高興我終於發現了</span><br><span class=\"line\"></span><br><span class=\"line\">[B]鹿</span><br><span class=\"line\">無情むじょう に 響ひび く 銃声じゅうせい が 夜よる を 引ひ き 裂さ く</span><br><span class=\"line\">無情的槍聲劃破夜空</span><br><span class=\"line\">別わかれの 息吹いぶき が 襲おそ いかかる</span><br><span class=\"line\">離別的氣息到來</span><br><span class=\"line\">刹那せつな に 輝かがや いた 無慈悲むじひ な 流なが れ 星ぼし </span><br><span class=\"line\">剎那間慧星無情的光芒</span><br><span class=\"line\">祈いの りはただ 届とど かずに 消き えた</span><br><span class=\"line\">在願望還沒有說出前就消失了</span><br><span class=\"line\"></span><br><span class=\"line\">[A]鹿</span><br><span class=\"line\">この、 手て の 中なか で 燃も え 尽つ きた</span><br><span class=\"line\">這雙手中燃盡</span><br><span class=\"line\">金色きんいろ の 優やさ しい 彗星すいせい を</span><br><span class=\"line\">那金色溫柔的彗星</span><br><span class=\"line\">美うつくしい たてがみを  暗闇くらやみ の 中なか  握にぎ り 締し めた</span><br><span class=\"line\">黑暗中緊抓著美麗的鬃毛</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"單純聽歌得到的感想\"><a href=\"#單純聽歌得到的感想\" class=\"headerlink\" title=\"單純聽歌得到的感想\"></a>單純聽歌得到的感想</h1><p>在夜空中無意識開著車，把眼淚化作慧星，在溫柔而堅強的你陪伴下，我找回了勇氣。<br>只是就像慧星，給你勇氣後我就該消失了，回憶才是最美的吧。</p>\n<p>這個月BEASTARS 在<a href=\"https://www.netflix.com/tw/title/81054847\">Netflix上架</a>，而這首歌是BEASTARS 主題曲之一</p>\n<h1 id=\"劇透注意\"><a href=\"#劇透注意\" class=\"headerlink\" title=\"劇透注意\"></a>劇透注意</h1><p>介紹很精彩，想更深入歌曲可以參考一下 :<br><a href=\"https://www.youtube.com/watch?v=v6v_IA5z8RQ\">YT</a><br><a href=\"https://zh.wikipedia.org/wiki/BEASTARS\">Wikipedia</a></p>\n<p>弱小的人內心可以很強大，而凶狠的人內心其實很善良呢。</p>\n<p><a href=\"https://www.jpmarumaru.com/tw/JPSongPlay-16335.html\">Shvara要求的學習資源：</a></p>\n<p><a href=\"https://www.sigure.tw/learn-japanese/mix/knowledge/kana.php\">かな表達輕微的疑問，能夠緩和口氣</a></p>\n<p><a href=\"https://dictionary.goo.ne.jp/word/%E4%B8%AD_%28%E3%81%AA%E3%81%8B%29/\">なか中</a></p>\n<p><a href=\"https://www.sigure.tw/learn-japanese/mix/difference/tsuki-getsu.php\">つき月</a></p>\n<p><a href=\"https://www.hujiang.com/jpciku/je8bebfe3828b/\">辿る</a></p>\n<p><a href=\"https://www.hujiang.com/jpciku/je381a9e38186e38197e38288e38186e38282e381aae38184/\">N3 どうしようも 沒辦法</a></p>\n<p><a href=\"https://www.sigure.tw/learn-japanese/grammar/n5/34.php#b\">N5文法34 から 那時起</a></p>\n<p><a href=\"https://www.sigure.tw/learn-japanese/mix/difference/hazu-beki.php\">N3 べき 應該</a></p>\n<p><a href=\"https://nihongonosensei.net/?p=18705\">N1 とあれば 如果</a></p>\n<p><a href=\"https://www.sigure.tw/learn-japanese/grammar/n3/35.php\">N3文法35「だけで」只要、光～就～</a></p>\n<p><a href=\"https://www.facebook.com/wangcolaneko/posts/2945215028844137\">こんなにも 就這樣也</a></p>\n<p><a href=\"https://nihongonosensei.net/?p=20164\">N5 になる／くなる 變得</a></p>\n<p><a href=\"https://www.weblio.jp/content/%E5%BE%A1%E6%8C%87%E6%91%98\">ごしてき 御指摘 指導</a></p>\n<p><a href=\"https://www.learnjapanese.aiyori.org/article6.html\">我／吾(われ)</a></p>\n<p><a href=\"https://ejje.weblio.jp/content/%E3%82%8F%E3%81%9A%E3%81%8B%E3%81%AA\">わずかな 微小的</a></p>\n<p><a href=\"https://nihongokyoshi-net.com/2020/01/08/jlptn3-grammar-youda/\">N3 まるで 如同</a></p>\n<p><a href=\"https://www.facebook.com/wangcolaneko/posts/1969074716458178/\">やっと 最終(開心) ついに 最終(難過)</a></p>\n<p><a href=\"https://ja.wikipedia.org/wiki/%E3%81%9F%E3%81%A6%E3%81%8C%E3%81%BF\">たてがみ 鬃毛</a></p>\n","categories":["生活"],"tags":["音樂"]},{"title":"ShortSentences","url":"/interview/ShortSentences/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(35).jpeg\"></p>\n<p>Short sentences make reader focus on the key point.</p>\n<p>Lists and tables changes complicated concept easy to understand. </p>\n<a id=\"more\"></a>\n\n<h1 id=\"Short-sentences\"><a href=\"#Short-sentences\" class=\"headerlink\" title=\"Short sentences\"></a>Short sentences</h1><ul>\n<li>Focus each sentence on a single idea.</li>\n<li>Convert some long sentences to lists.</li>\n<li>Eliminate or reduce extraneous words.</li>\n<li>Reduce subordinate clauses. (optional)</li>\n</ul>\n<p>I prefer to code in Java and Python because Java is a strong type language. Strong type is clean and easy to understand, Python can do many things, just like to write web crawler, machine learning, and several useful tools.<br>=&gt; </p>\n<p>I use two strong type languages: </p>\n<ul>\n<li>Java: mobile app, web…</li>\n<li>Python: crawler, machine learning…</li>\n</ul>\n<p>Strong type languages are easy to understand.</p>\n<h1 id=\"Lists-and-tables\"><a href=\"#Lists-and-tables\" class=\"headerlink\" title=\"Lists and tables\"></a>Lists and tables</h1><ul>\n<li>Choose the correct type of list.</li>\n<li>Keep list items parallel.</li>\n<li>Start numbered list items with imperative verbs.</li>\n<li>Punctuate items appropriately.</li>\n<li>Create useful tables.</li>\n<li>Introduce each list and table.</li>\n</ul>\n<p>=&gt;</p>\n<p><a href=\"https://www.fifteenspatulas.com/fortune-cookies/\">How to Make Fortune Cookies</a>:</p>\n<ol>\n<li>Start by whipping egg whites, melted butter, sugar, vanilla extract, and almond extract until frothy</li>\n<li>Add flour, and whip until the flour <em>just</em> disappears</li>\n<li>Shape the batter into small circles on a silicone mat, and notice how thin they are</li>\n<li>Bake until the circles are slightly golden on the edges, then quickly fold the circles in half with the fortune inside, and bring the ends down over the lip of a cup</li>\n</ol>\n<p><em>This series of articles is extracted from Google <a href=\"https://developers.google.com/tech-writing\">Technical Writing Courses</a>.</em></p>\n","categories":["面試"],"tags":["科技英文"]},{"title":"Counter","url":"/interview/counter/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(32).jpeg\"></p>\n<p>Counter統計文章出現字數很方便。</p>\n<a id=\"more\"></a>\n\n<p>most_common(n): 取得n個頻率最高字串，也接受array, dict。  </p>\n<p>刪除用del。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/counter?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n\n","categories":["面試"],"tags":["力扣"]},{"title":"Paragraphs","url":"/interview/Paragraphs/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(38).jpeg\"></p>\n<p>Paragraphs let readers get to the point faster.<br>Audience let us check what are audience really need.</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Paragraphs\"><a href=\"#Paragraphs\" class=\"headerlink\" title=\"Paragraphs\"></a>Paragraphs</h1><ul>\n<li>Write a great opening sentence.</li>\n<li>Don’t make paragraphs too long or too short.</li>\n<li>Answer what, why, and how.</li>\n</ul>\n<p>Good opening sentences establish the paragraph’s central point and don’t change the central point in the next part.  </p>\n<p>Thinking in reader’s side, what I need to know, why I need it, how can I use it.</p>\n<h1 id=\"Audience\"><a href=\"#Audience\" class=\"headerlink\" title=\"Audience\"></a>Audience</h1><ul>\n<li>Define your audience.</li>\n<li>Sample audience analysis.</li>\n<li>Determine what your audience needs to learn.</li>\n<li>Fit documentation to your audience.</li>\n</ul>\n<p>Know your audience’s consist, fit their desire.<br>Determine what my audience needs to learn.<br>Use their language<br>Present in a way that they can understand.</p>\n<p><em>This series of articles is extracted from Google <a href=\"https://developers.google.com/tech-writing\">Technical Writing Courses</a>.</em></p>\n","categories":["面試"],"tags":["科技英文"]},{"title":"Namedtuple","url":"/interview/namedTuple/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(36).jpeg\"></p>\n<p>Namedtuple生成可以使用名字來訪問元素內容的tuple子類，比class更省記憶體。</p>\n<a id=\"more\"></a>\n\n<p>_make()： 結構化資料，向新建對像中傳遞可疊代對象代替*args, **kwargs方法，但是傳遞參數的個數必須與接受的參數一致。</p>\n<p>_asdict()： 可以將一個namedtuple對象轉換為一個<a href=\"https://eric999j.github.io/interview/orderedDict/\">orderdict</a>字典。</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@eric999j/namedtuple?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>","categories":["面試"],"tags":["力扣"]},{"title":"Adele - When We Were Young","url":"/life/young/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(27).jpeg\"></p>\n<p>偶然聽到這首歌，跟介紹過的每首都有感動的感覺，決定好好研究一下，下週我生日會停刊一週，也先祝Shvara生日快樂。</p>\n<a id=\"more\"></a>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/DDWKuo3gXMQ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Everybody loves the things you do</span><br><span class=\"line\">大家都愛你的一切</span><br><span class=\"line\">From the way you talk to the way you move</span><br><span class=\"line\">你的一舉一動</span><br><span class=\"line\">Everybody here is watching you</span><br><span class=\"line\">都被關注</span><br><span class=\"line\">&#39;Cuz you feel like home</span><br><span class=\"line\">因為你總讓人感到安心</span><br><span class=\"line\">You&#39;re like a dream come true</span><br><span class=\"line\">感到幸福</span><br><span class=\"line\"></span><br><span class=\"line\">But if by chance you&#39;re here alone</span><br><span class=\"line\">若有天突然偶遇</span><br><span class=\"line\">Can I have a moment before I go</span><br><span class=\"line\">請在我走之前陪陪我</span><br><span class=\"line\">&#39;Cuz I&#39;ve been by myself all night long</span><br><span class=\"line\">因為隻身在這漫漫長夜</span><br><span class=\"line\">Hoping you&#39;re someone I used to know</span><br><span class=\"line\">我只求有熟悉的臉孔</span><br><span class=\"line\"></span><br><span class=\"line\">You look like a movie</span><br><span class=\"line\">你像場精彩的電影</span><br><span class=\"line\">You sound like a song</span><br><span class=\"line\">你像首優美的詩歌</span><br><span class=\"line\">My God</span><br><span class=\"line\">天阿</span><br><span class=\"line\">This reminds me of when we were young</span><br><span class=\"line\">使我想起往日時光</span><br><span class=\"line\">Let me photograph you in this light</span><br><span class=\"line\">趁機會我們來照張相吧</span><br><span class=\"line\">In case it is the last time</span><br><span class=\"line\">哪怕是最後一次</span><br><span class=\"line\">That we might be exactly like we were before we realized</span><br><span class=\"line\">趁還能做回青春的我們</span><br><span class=\"line\">We were sad of getting old</span><br><span class=\"line\">時光飛逝，年華老去</span><br><span class=\"line\">It made us restless</span><br><span class=\"line\">總使人煩躁不安</span><br><span class=\"line\">It was just like a movie</span><br><span class=\"line\">像電影總會落幕</span><br><span class=\"line\">It was just like a song</span><br><span class=\"line\">再美的歌也會唱完</span><br><span class=\"line\"></span><br><span class=\"line\">I was so scared to face my fears</span><br><span class=\"line\">我怕面對心底最深的恐懼</span><br><span class=\"line\">&#39;Cuz nobody told me that you&#39;d be here</span><br><span class=\"line\">因為沒人告訴我你在那裡</span><br><span class=\"line\">And I swore you moved overseas</span><br><span class=\"line\">我發誓會遠渡重洋回來見你</span><br><span class=\"line\">That&#39;s what you said, when you left me</span><br><span class=\"line\">那是當初你離開我時說的</span><br><span class=\"line\"></span><br><span class=\"line\">You still look like a movie</span><br><span class=\"line\">你仍然如此精彩</span><br><span class=\"line\">You still sound like a song</span><br><span class=\"line\">你依然相當動人</span><br><span class=\"line\">My God</span><br><span class=\"line\">我的上帝</span><br><span class=\"line\">This reminds me of when we were young</span><br><span class=\"line\">使我想起往日時光</span><br><span class=\"line\">Let me photograph you in this light</span><br><span class=\"line\">趁機會我們來照張相吧</span><br><span class=\"line\">In case it is the last time</span><br><span class=\"line\">哪怕是最後一次</span><br><span class=\"line\">That we might be exactly like we were before we realized</span><br><span class=\"line\">趁還能做回青春的我們</span><br><span class=\"line\">We were sad of getting old</span><br><span class=\"line\">時光飛逝，年華老去</span><br><span class=\"line\">It made us restless</span><br><span class=\"line\">總使人煩躁不安</span><br><span class=\"line\">It was just like a movie</span><br><span class=\"line\">像電影總會落幕</span><br><span class=\"line\">It was just like a song</span><br><span class=\"line\">再美的歌也會唱完</span><br><span class=\"line\"></span><br><span class=\"line\">It&#39;s hard to win me back</span><br><span class=\"line\">就算無法回到過去</span><br><span class=\"line\">Everything just takes me back</span><br><span class=\"line\">就算一切使我想起</span><br><span class=\"line\">To when you were there</span><br><span class=\"line\">你還在的時光</span><br><span class=\"line\">To when you were there</span><br><span class=\"line\">那些美好的日子</span><br><span class=\"line\">And a part of me keeps holding on</span><br><span class=\"line\">我仍掌握的年少時光</span><br><span class=\"line\">Just in case it hasn&#39;t gone</span><br><span class=\"line\">只怕哪天突然消失</span><br><span class=\"line\">I guess I still care</span><br><span class=\"line\">我想我還是會在乎</span><br><span class=\"line\">Do you still care</span><br><span class=\"line\">你也是嗎？</span><br><span class=\"line\"></span><br><span class=\"line\">It was just like a movie</span><br><span class=\"line\">像場精彩的戲</span><br><span class=\"line\">It was just like a song</span><br><span class=\"line\">像場優美的歌</span><br><span class=\"line\">My God</span><br><span class=\"line\">我的上帝</span><br><span class=\"line\">This reminds me of when we were young</span><br><span class=\"line\">總讓我想起往日時光</span><br><span class=\"line\"></span><br><span class=\"line\">Let me photograph you in this light</span><br><span class=\"line\">讓我永存你的樣子</span><br><span class=\"line\">In case it is the last time</span><br><span class=\"line\">哪怕是最後一次</span><br><span class=\"line\">That we might be exactly like we were before we realized</span><br><span class=\"line\">在逐漸老去前做回青春的我們</span><br><span class=\"line\">We were sad of getting old</span><br><span class=\"line\">時光飛逝總使人哀愁</span><br><span class=\"line\">It made us restless</span><br><span class=\"line\">越發煩躁不安</span><br><span class=\"line\">I&#39;m so mad I&#39;m getting old it makes me reckless</span><br><span class=\"line\">無能為力的讓我發狂</span><br><span class=\"line\">It was just like a movie</span><br><span class=\"line\">但人生如戲，總會謝幕</span><br><span class=\"line\">It was just like a song</span><br><span class=\"line\">或像首好歌，有完美結尾</span><br><span class=\"line\"></span><br><span class=\"line\">When we were young</span><br><span class=\"line\">只要永遠記得，就夠了</span><br></pre></td></tr></table></figure>\n\n<p>致我們不斷流逝的青春，在改變中掌握永恆。</p>\n","categories":["生活"],"tags":["音樂"]},{"title":"15. 3Sum","url":"/interview/15/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(5).jpeg\"></p>\n<p>Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.</p>\n<p>Notice that the solution set must not contain duplicate triplets.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [-1,0,1,2,-1,-4]</span><br><span class=\"line\">Output: [[-1,-1,2],[-1,0,1]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; []</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [0]</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>大小排序後依總和決定要加或減。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Time: O(nˆ2), Space: O(n)</span><br><span class=\"line\"></span><br><span class=\"line\">from typing import List</span><br><span class=\"line\">class Solution(object):      </span><br><span class=\"line\">    def threeSum(self, nums: List[int]) -&gt; List[List[int]]:</span><br><span class=\"line\">        nums.sort() # 小到大排序</span><br><span class=\"line\">        added &#x3D; set()</span><br><span class=\"line\">        out &#x3D; []</span><br><span class=\"line\">        for i in range(len(nums) - 1, -1, -1):</span><br><span class=\"line\">            last &#x3D; nums[i]</span><br><span class=\"line\">            start, end &#x3D; 0, i - 1</span><br><span class=\"line\">            while start &lt; end:</span><br><span class=\"line\">                s &#x3D; last + nums[start] + nums[end] # 加總</span><br><span class=\"line\">                if s &#x3D;&#x3D; 0:</span><br><span class=\"line\">                    if (last, nums[start], nums[end]) not in added:  # 紀錄沒看過的合法組合</span><br><span class=\"line\">                        out.append([last, nums[start], nums[end]])</span><br><span class=\"line\">                    added.add((last, nums[start], nums[end]))</span><br><span class=\"line\">                    start +&#x3D; 1 # 持續加到結束</span><br><span class=\"line\">                elif s &gt; 0: # 總和過多</span><br><span class=\"line\">                    end -&#x3D; 1</span><br><span class=\"line\">                else: start +&#x3D; 1 # 總和過少</span><br><span class=\"line\">        return out</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"11. Container With Most Water","url":"/interview/11/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(4).jpeg\"></p>\n<p>Given n non-negative integers a1, a2, …, an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of the line i is at (i, ai) and (i, 0). Find two lines, which, together with the x-axis forms a container, such that the container contains the most water.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: height &#x3D; [1,8,6,2,5,4,8,3,7]</span><br><span class=\"line\">Output: 49</span><br><span class=\"line\">Explanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: height &#x3D; [1,1]</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: height &#x3D; [4,3,2,1,4]</span><br><span class=\"line\">Output: 16</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: height &#x3D; [1,2,1]</span><br><span class=\"line\">Output: 2</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<ol>\n<li>point to the beggining and the end of the list</li>\n<li>look for the smallest number out of these pointers</li>\n<li>calculate area</li>\n<li>move pointer from the lowest because we’re always looking for the largest area</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Time: O(n), Space: O(n)</span><br><span class=\"line\"></span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def maxArea(self, height: List[int]) -&gt; int:</span><br><span class=\"line\">        left, right &#x3D; 0, len(height)-1</span><br><span class=\"line\">        ans, area &#x3D; 0, 0</span><br><span class=\"line\">        while left&lt;right:</span><br><span class=\"line\">            h &#x3D; min(height[left],height[right])</span><br><span class=\"line\">            area &#x3D; h*(right-left)</span><br><span class=\"line\">            ans &#x3D; max(ans,area) # compare last and now</span><br><span class=\"line\">            if height[left] &lt; height[right]:</span><br><span class=\"line\">                left+&#x3D;1</span><br><span class=\"line\">            else: right-&#x3D;1</span><br><span class=\"line\">            #print(area, h, left, right)</span><br><span class=\"line\">        return ans</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"19. Remove Nth Node From End of List","url":"/interview/19/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(6).jpeg\"></p>\n<p>Given the head of a linked list, remove the nth node from the end of the list and return its head.</p>\n<p>Follow up: Could you do this in one pass?</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head &#x3D; [1,2,3,4,5], n &#x3D; 2</span><br><span class=\"line\">Output: [1,2,3,5]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head &#x3D; [1], n &#x3D; 1</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head &#x3D; [1,2], n &#x3D; 1</span><br><span class=\"line\">Output: [1]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>移除串列倒數第n個值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Time: O(n), Space: O(1)</span><br><span class=\"line\"></span><br><span class=\"line\"># Definition for singly-linked list.</span><br><span class=\"line\"># class ListNode:</span><br><span class=\"line\">#     def init(self, val&#x3D;0, next&#x3D;None):</span><br><span class=\"line\">#         self.val &#x3D; val</span><br><span class=\"line\">#         self.next &#x3D; next</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def removeNthFromEnd(self, head: ListNode, n: int) -&gt; ListNode:</span><br><span class=\"line\">        dummy&#x3D;ListNode(0)</span><br><span class=\"line\">        dummy.next&#x3D;head</span><br><span class=\"line\">        pos_0&#x3D;pos_n&#x3D;dummy # ListNode-&gt;head 0</span><br><span class=\"line\">        </span><br><span class=\"line\">        for i in range(n): # 0, 1, 2</span><br><span class=\"line\">            pos_n&#x3D;pos_n.next # n&#x3D;1 n&#x3D;2</span><br><span class=\"line\">            </span><br><span class=\"line\">        while pos_n.next:</span><br><span class=\"line\">            pos_0&#x3D;pos_0.next # n&#x3D; 0</span><br><span class=\"line\">            pos_n&#x3D;pos_n.next # n&#x3D; 2</span><br><span class=\"line\">        print(pos_0.val) # n&#x3D;3</span><br><span class=\"line\">        print(pos_n.val) # n&#x3D;5       </span><br><span class=\"line\">        pos_0.next&#x3D;pos_0.next.next</span><br><span class=\"line\"></span><br><span class=\"line\">        return dummy.next</span><br></pre></td></tr></table></figure>\n","categories":["面試"],"tags":["力扣"]},{"title":"20. Valid Parentheses","url":"/interview/20/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(7).jpeg\"></p>\n<p>Given a string s containing just the characters ‘(‘, ‘)’, ‘{‘, ‘}’, ‘[‘ and ‘]’, determine if the input string is valid.</p>\n<p>An input string is valid if:</p>\n<p>Open brackets must be closed by the same type of brackets.<br>Open brackets must be closed in the correct order.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;()&quot;</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;()[]&#123;&#125;&quot;</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;(]&quot;</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;([)]&quot;</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n<p>Example 5:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;&#123;[]&#125;&quot;</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>定義符號對，遇到符號押入，配對成功移出，檢查陣列是否空。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Time: O(n), Space: O(n)</span><br><span class=\"line\"></span><br><span class=\"line\">class Solution(object):</span><br><span class=\"line\">    def isValid(self, s):</span><br><span class=\"line\">        mapping &#x3D; &#123;</span><br><span class=\"line\">            &quot;(&quot;: &quot;)&quot;, </span><br><span class=\"line\">            &quot;[&quot;: &quot;]&quot;, </span><br><span class=\"line\">            &quot;&#123;&quot;: &quot;&#125;&quot;&#125;</span><br><span class=\"line\">        left &#x3D; set([&quot;(&quot;, &quot;[&quot;, &quot;&#123;&quot;])</span><br><span class=\"line\">        stack &#x3D; []</span><br><span class=\"line\">        for i in s:</span><br><span class=\"line\">            if i in left: # match left</span><br><span class=\"line\">                stack.append(i) # append left</span><br><span class=\"line\">            elif stack and i &#x3D;&#x3D; mapping[stack[-1]]: # stack not null and is right</span><br><span class=\"line\">                    stack.pop() # pop left</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                return False</span><br><span class=\"line\">        return stack &#x3D;&#x3D; [] # stack empty, all matched</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"23. Merge k Sorted Lists","url":"/interview/23/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(9).jpeg\"></p>\n<p>You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.</p>\n<p>Merge all the linked-lists into one sorted linked-list and return it.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: lists &#x3D; [[1,4,5],[1,3,4],[2,6]]</span><br><span class=\"line\">Output: [1,1,2,3,4,4,5,6]</span><br><span class=\"line\">Explanation: The linked-lists are:</span><br><span class=\"line\">[</span><br><span class=\"line\">  1-&gt;4-&gt;5,</span><br><span class=\"line\">  1-&gt;3-&gt;4,</span><br><span class=\"line\">  2-&gt;6</span><br><span class=\"line\">]</span><br><span class=\"line\">merging them into one sorted list:</span><br><span class=\"line\">1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: lists &#x3D; []</span><br><span class=\"line\">Output: []</span><br><span class=\"line\">Example 3:</span><br><span class=\"line\"></span><br><span class=\"line\">Input: lists &#x3D; [[]]</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>讀到陣列排序後丟回去。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Time: O(n), Space: O(n)</span><br><span class=\"line\"></span><br><span class=\"line\"># Definition for singly-linked list.</span><br><span class=\"line\"># class ListNode:</span><br><span class=\"line\">#     def init(self, val&#x3D;0, next&#x3D;None):</span><br><span class=\"line\">#         self.val &#x3D; val</span><br><span class=\"line\">#         self.next &#x3D; next</span><br><span class=\"line\"></span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def mergeKLists(self, lists):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        :type lists: List[ListNode]</span><br><span class=\"line\">        :rtype: ListNode</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        res &#x3D; []</span><br><span class=\"line\">        for x in lists:</span><br><span class=\"line\">            while x:</span><br><span class=\"line\">                res.append(x.val)</span><br><span class=\"line\">                x&#x3D;x.next</span><br><span class=\"line\">                </span><br><span class=\"line\">        if not res: return</span><br><span class=\"line\">        </span><br><span class=\"line\">        # sort the result list</span><br><span class=\"line\">        res &#x3D; sorted(res)</span><br><span class=\"line\">        </span><br><span class=\"line\">        # push all the values from the list to the final linked list</span><br><span class=\"line\">        head &#x3D; ListNode(res[0])</span><br><span class=\"line\">        node &#x3D; head</span><br><span class=\"line\">        for x in res[1:]:</span><br><span class=\"line\">            node.next &#x3D; ListNode(x)</span><br><span class=\"line\">            node &#x3D; node.next</span><br><span class=\"line\">        return head</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"33. Search in Rotated Sorted Array","url":"/interview/33/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(10).jpeg\"></p>\n<p>There is an integer array nums sorted in ascending order (with distinct values).</p>\n<p>Prior to being passed to your function, nums is rotated at an unknown pivot index k (0 &lt;= k &lt; nums.length) such that the resulting array is [nums[k], nums[k+1], …, nums[n-1], nums[0], nums[1], …, nums[k-1]] (0-indexed). For example, [0,1,2,4,5,6,7] might be rotated at pivot index 3 and become [4,5,6,7,0,1,2].</p>\n<p>Given the array nums after the rotation and an integer target, return the index of target if it is in nums, or -1 if it is not in nums.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [4,5,6,7,0,1,2], target &#x3D; 0</span><br><span class=\"line\">Output: 4</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [4,5,6,7,0,1,2], target &#x3D; 3</span><br><span class=\"line\">Output: -1</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [1], target &#x3D; 0</span><br><span class=\"line\">Output: -1</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>找數字位置。</p>\n<ol>\n<li>是否存在<br><code>nums.count(target)==0</code></li>\n<li>存在位置<br><code>nums.index(target)</code></li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Time: O(n), Space: O(1)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def search(self, nums: List[int], target: int) -&gt; int:</span><br><span class=\"line\">        if nums.count(target)&#x3D;&#x3D;0:return -1</span><br><span class=\"line\">        else: return nums.index(target)</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"21. Merge Two Sorted Lists","url":"/interview/21/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(8).jpeg\"></p>\n<p>Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: l1 &#x3D; [1,2,4], l2 &#x3D; [1,3,4]</span><br><span class=\"line\">Output: [1,1,2,3,4,4]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: l1 &#x3D; [], l2 &#x3D; []</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: l1 &#x3D; [], l2 &#x3D; [0]</span><br><span class=\"line\">Output: [0]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>遞迴尋訪兩個串列，依序回傳。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Time: O(n), Space: O(n)</span><br><span class=\"line\"></span><br><span class=\"line\"># Definition for singly-linked list.</span><br><span class=\"line\"># class ListNode:</span><br><span class=\"line\">#     def init(self, val&#x3D;0, next&#x3D;None):</span><br><span class=\"line\">#         self.val &#x3D; val</span><br><span class=\"line\">#         self.next &#x3D; next</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -&gt; ListNode:</span><br><span class=\"line\">        if not l1 or not l2:</span><br><span class=\"line\">            return l1 or l2</span><br><span class=\"line\">        if l1.val &lt; l2.val:</span><br><span class=\"line\">            l1.next &#x3D; self.mergeTwoLists(l1.next,l2)</span><br><span class=\"line\">            return l1</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            l2.next &#x3D; self.mergeTwoLists(l1,l2.next)</span><br><span class=\"line\">            return l2</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"Documents","url":"/interview/Documents/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(39).jpeg\"></p>\n<p>Documents tell us before we write documents, we must state our purpose. Who should read those documents, don’t waste reader’s time. </p>\n<p>Punctuation tells us that we need to choose the right sign. if two sentences have a connection, we should use semicolons; if the connection is a sequence, we should use commas; if the second sentence use to emphasize the first sentence - em-dashes; if the second sentence is minor points (parentheses).</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Documents\"><a href=\"#Documents\" class=\"headerlink\" title=\"Documents\"></a>Documents</h1><ul>\n<li>State your document’s scope</li>\n<li>State your audience</li>\n<li>Establish your key points upfront</li>\n<li>Write for your audience</li>\n<li>Organize</li>\n</ul>\n<p>This document does not describe the design for the related technology, Project Froobus.  </p>\n<p>This document assumes that you understand matrix multiplication and how to brew a really good cup of tea.  </p>\n<p>You must read “Project Froobus: A New Hope” before reading this document.</p>\n<h2 id=\"Your-document-should-contain\"><a href=\"#Your-document-should-contain\" class=\"headerlink\" title=\"Your document should contain:\"></a>Your document should contain:</h2><ul>\n<li>Who is your target audience?  </li>\n<li>What do your readers already know before they’ve read the document?  </li>\n<li>What should your readers know or be able to do after they’ve read your document?  </li>\n</ul>\n<h1 id=\"Punctuation-optional\"><a href=\"#Punctuation-optional\" class=\"headerlink\" title=\"Punctuation (optional)\"></a>Punctuation (optional)</h1><ul>\n<li><strong>Commas ,</strong> : Paste together two dependent thoughts.</li>\n<li><strong>Semicolons ;</strong> : Unites highly related thoughts.</li>\n<li><strong>Em-Dashes -</strong> : Encode structured data in an efficient yet extensible format.</li>\n<li><strong>Parentheses ()</strong> : Hold minor points and digressions.</li>\n</ul>\n<p><em>This series of articles is extracted from Google <a href=\"https://developers.google.com/tech-writing\">Technical Writing Courses</a>.</em></p>\n","categories":["面試"],"tags":["科技英文"]},{"title":"3. Longest Substring Without Repeating Characters","url":"/interview/3/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(2).jpeg\"></p>\n<p>Given a string s, find the length of the longest substring without repeating characters.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;abcabcbb&quot;</span><br><span class=\"line\">Output: 3</span><br><span class=\"line\">Explanation: The answer is &quot;abc&quot;, with the length of 3.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;bbbbb&quot;</span><br><span class=\"line\">Output: 1</span><br><span class=\"line\">Explanation: The answer is &quot;b&quot;, with the length of 1.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;pwwkew&quot;</span><br><span class=\"line\">Output: 3</span><br><span class=\"line\">Explanation: The answer is &quot;wke&quot;, with the length of 3.</span><br><span class=\"line\">Notice that the answer must be a substring, &quot;pwke&quot; is a subsequence and not a substring.</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;&quot;</span><br><span class=\"line\">Output: 0</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>最長不重複子字串，看到的加入set, 減去看過的，再取得最大長度。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Time: O(n), Space: O(1)</span><br><span class=\"line\"></span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def lengthOfLongestSubstrig(self, s:str) -&gt; int:</span><br><span class=\"line\">      characters &#x3D; set()</span><br><span class=\"line\">      left&#x3D;right&#x3D;ans&#x3D;0</span><br><span class=\"line\">      length&#x3D;len(s)</span><br><span class=\"line\"></span><br><span class=\"line\">      while right &lt; length:</span><br><span class=\"line\">        print(characters, right, left, ans)</span><br><span class=\"line\">        if s[right] in characters:</span><br><span class=\"line\">          characters.remove(s[left])</span><br><span class=\"line\">          left+&#x3D;1</span><br><span class=\"line\">        else:</span><br><span class=\"line\">          characters.add(s[right])</span><br><span class=\"line\">          right+&#x3D;1</span><br><span class=\"line\">          ans &#x3D; max(ans,right-left)</span><br><span class=\"line\">      return ans</span><br><span class=\"line\">print(Solution().lengthOfLongestSubstrig(&#39;abcabcbb&#39;))</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"5. Longest Palindromic Substring","url":"/interview/5/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(3).jpeg\"></p>\n<p>Given a string s, return the longest palindromic substring in s.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;babad&quot;</span><br><span class=\"line\">Output: &quot;bab&quot;</span><br><span class=\"line\">Note: &quot;aba&quot; is also a valid answer.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;cbbd&quot;</span><br><span class=\"line\">Output: &quot;bb&quot;</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;a&quot;</span><br><span class=\"line\">Output: &quot;a&quot;</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;ac&quot;</span><br><span class=\"line\">Output: &quot;a&quot;</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>最長回文子字串。  </p>\n<ol>\n<li><p>列出所有子字串： </p>\n<pre><code> `\n for i in range(length, 0, -1):\n     for j in range(0, length -i+1): \n `</code></pre>\n</li>\n<li><p>看是否回文：<br><code>candidate == candidate[::-1]</code></p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Time: O(nˆ2), Space: O(n)</span><br><span class=\"line\"></span><br><span class=\"line\">class Solution:    </span><br><span class=\"line\">    def longestPalindrome(self, s: str) -&gt; str:</span><br><span class=\"line\">        if not s:return</span><br><span class=\"line\">        length &#x3D; len(s) </span><br><span class=\"line\">        # worst case it is T:O(n^2) S:O(n)</span><br><span class=\"line\">        for i in range(length, 0, -1):</span><br><span class=\"line\">            for j in range(0, length -i+1): </span><br><span class=\"line\">                candidate &#x3D; s[j:j+i] # 所有可能子字串</span><br><span class=\"line\">                if candidate &#x3D;&#x3D; candidate[::-1]: # 是回文的</span><br><span class=\"line\">                    return candidate # 回傳</span><br><span class=\"line\">print(Solution().longestPalindrome(&#39;babad&#39;))</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"39. Combination Sum","url":"/interview/39/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(11).jpeg\"></p>\n<p>Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target. You may return the combinations in any order.</p>\n<p>The same number may be chosen from candidates an unlimited number of times. Two combinations are unique if the frequency of at least one of the chosen numbers is different.</p>\n<p>It is guaranteed that the number of unique combinations that sum up to target is less than 150 combinations for the given input.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: candidates &#x3D; [2,3,6,7], target &#x3D; 7</span><br><span class=\"line\">Output: [[2,2,3],[7]]</span><br><span class=\"line\">Explanation:</span><br><span class=\"line\">2 and 3 are candidates, and 2 + 2 + 3 &#x3D; 7. Note that 2 can be used multiple times.</span><br><span class=\"line\">7 is a candidate, and 7 &#x3D; 7.</span><br><span class=\"line\">These are the only two combinations.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: candidates &#x3D; [2,3,5], target &#x3D; 8</span><br><span class=\"line\">Output: [[2,2,2,2],[2,3,3],[3,5]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: candidates &#x3D; [2], target &#x3D; 1</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: candidates &#x3D; [1], target &#x3D; 1</span><br><span class=\"line\">Output: [[1]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 5:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: candidates &#x3D; [1], target &#x3D; 2</span><br><span class=\"line\">Output: [[1,1]]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n<p>找數字組合。</p>\n<ol>\n<li>目標比列表中最小值還小就返回空<br><code>target &lt; min(candidates)</code></li>\n<li>下次迭代用target-candidate當新target<br><code>self.combinationSum(candidates[i:],target-candidates[i])</code></li>\n<li>避免重複選取之前選過的<br><code>candidates[i:]</code></li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Time: O(n＾2), Space: O(n)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def combinationSum(self, candidates: List[int], target: int) -&gt; List[List[int]]:</span><br><span class=\"line\">        if target &lt; min(candidates):</span><br><span class=\"line\">                return []</span><br><span class=\"line\">        res &#x3D; []</span><br><span class=\"line\">        for i in range(len(candidates)):</span><br><span class=\"line\">            if candidates[i]&#x3D;&#x3D;target:</span><br><span class=\"line\">                res.append([target])</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                for prev in self.combinationSum(candidates[i:],target-candidates[i]):</span><br><span class=\"line\">                    res.append([candidates[i]] + prev)</span><br><span class=\"line\">        return res</span><br></pre></td></tr></table></figure>\n","categories":["面試"],"tags":["力扣"]},{"title":"49. Group Anagrams","url":"/interview/49/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(13).jpeg\"></p>\n<p>Given an array of strings strs, group the anagrams together. You can return the answer in any order.</p>\n<p>An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>\n<a id=\"more\"></a>\n\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: strs &#x3D; [&quot;eat&quot;,&quot;tea&quot;,&quot;tan&quot;,&quot;ate&quot;,&quot;nat&quot;,&quot;bat&quot;]</span><br><span class=\"line\">Output: [[&quot;bat&quot;],[&quot;nat&quot;,&quot;tan&quot;],[&quot;ate&quot;,&quot;eat&quot;,&quot;tea&quot;]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: strs &#x3D; [&quot;&quot;]</span><br><span class=\"line\">Output: [[&quot;&quot;]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: strs &#x3D; [&quot;a&quot;]</span><br><span class=\"line\">Output: [[&quot;a&quot;]]</span><br></pre></td></tr></table></figure>\n\n<!-- more -->\n\n<p>合併相同字元文字，排序完相同合併。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># T: O(NKlogK), S: O(NK)</span><br><span class=\"line\"># N: length of strs,</span><br><span class=\"line\"># K: maximum length of a string in strs</span><br><span class=\"line\">class Solution(object):</span><br><span class=\"line\">    def groupAnagrams(self, strs):</span><br><span class=\"line\">        ans &#x3D; collections.defaultdict(list)</span><br><span class=\"line\">        for s in strs:</span><br><span class=\"line\">            ans[tuple(sorted(s))].append(s) # sorted string are equal</span><br><span class=\"line\">        return ans.values()</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"48. Rotate Image","url":"/interview/48/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(12).jpeg\"></p>\n<p>You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).</p>\n<p>You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix &#x3D; [[1,2,3],[4,5,6],[7,8,9]]</span><br><span class=\"line\">Output: [[7,4,1],[8,5,2],[9,6,3]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix &#x3D; [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]</span><br><span class=\"line\">Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix &#x3D; [[1]]</span><br><span class=\"line\">Output: [[1]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix &#x3D; [[1,2],[3,4]]</span><br><span class=\"line\">Output: [[3,1],[4,2]]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>旋轉陣列，每列反轉再zip。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Time: O(n), Space: O(1)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def rotate(self, matrix: List[List[int]]) -&gt; None:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        Do not return anything, modify matrix in-place instead.</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        matrix[:] &#x3D; zip(*matrix[::-1])# 789,456,123 &#x3D;&gt;zip by slice</span><br></pre></td></tr></table></figure>\n","categories":["面試"],"tags":["力扣"]},{"title":"54. Spiral Matrix","url":"/interview/54/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(15).jpeg\"></p>\n<p>Given an m x n matrix, return all elements of the matrix in spiral order.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix &#x3D; [[1,2,3],[4,5,6],[7,8,9]]</span><br><span class=\"line\">Output: [1,2,3,6,9,8,7,4,5]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix &#x3D; [[1,2,3,4],[5,6,7,8],[9,10,11,12]]</span><br><span class=\"line\">Output: [1,2,3,4,8,12,11,10,9,5,6,7]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>順時針旋轉走訪矩陣。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution:</span><br><span class=\"line\">    def spiralOrder(self, matrix: List[List[int]]) -&gt; List[int]:</span><br><span class=\"line\">        outputs &#x3D; []</span><br><span class=\"line\">        try:</span><br><span class=\"line\">            while True:</span><br><span class=\"line\">                outputs +&#x3D; matrix.pop(0) # pop first array</span><br><span class=\"line\">                print(matrix, outputs)</span><br><span class=\"line\">                outputs +&#x3D; [item.pop(-1) for item in matrix] # pop last in each array</span><br><span class=\"line\">                print(matrix, outputs)</span><br><span class=\"line\">                outputs +&#x3D; matrix.pop(-1)[::-1] # reverse pop last array</span><br><span class=\"line\">                print(matrix, outputs)</span><br><span class=\"line\">                outputs +&#x3D; [item.pop(0) for item in matrix] [::-1]# pop last array</span><br><span class=\"line\">                print(matrix, outputs)</span><br><span class=\"line\">        except IndexError:</span><br><span class=\"line\">            pass</span><br><span class=\"line\">        return outputs</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://leetcode.com/problems/spiral-matrix/discuss/751586/Easy-to-Understand-Numpy-Python-Solution\">另一個不錯的解</a>  </p>\n","categories":["面試"],"tags":["力扣"]},{"title":"閱讀一人健身","url":"/manager/workout/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(36).jpeg\"></p>\n<p>健身一年多，我們需要專業有實證的觀念幫助我們進入下一階段，出去玩時看到這本書正是我需要的。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"可信度層次\"><a href=\"#可信度層次\" class=\"headerlink\" title=\"可信度層次\"></a>可信度層次</h2><ol>\n<li>綜合分析，系統性文獻回顧（論文最可信）</li>\n<li>隨機對照試驗（隨機受試者）</li>\n<li>非隨機對照試驗（非隨機受試者）</li>\n<li>觀察研究（自己經歷過）</li>\n<li>概論或專家意見（網路文章最偏頗）</li>\n</ol>\n<p>不斷更新知識，依據研究訓練實踐，並發掘適合自己的方法</p>\n<h2 id=\"1RM\"><a href=\"#1RM\" class=\"headerlink\" title=\"1RM\"></a>1RM</h2><p>全力可以完成一次的重量<br>高強度：1RM乘80%以上<br>中強度：1RM乘60-70%<br>低強度：1RM乘60%以下  </p>\n<h2 id=\"肌肥大\"><a href=\"#肌肥大\" class=\"headerlink\" title=\"肌肥大\"></a>肌肥大</h2><p>重訓比有氧更能降低死亡率，肌肉儲存氨基酸</p>\n<h3 id=\"肌肥大關鍵：\"><a href=\"#肌肥大關鍵：\" class=\"headerlink\" title=\"肌肥大關鍵：\"></a>肌肥大關鍵：</h3><p>總負荷量= 重量乘 次數乘 組數<br>肌肥大= 總負荷乘 組間休息時間乘 關節活動範圍乘 運動速度乘 肌肉收縮方式乘 每週頻率</p>\n<p>要吃優質蛋白，不攝取過多不會造成腎臟負擔<br>低強度只要多次一樣有效，少次數只要夠強一樣有效<br>組間休息時間有個體差異，只有自己覺得休息夠，可以做多次或更重就繼續，一般1-2分鐘<br>完整進程助肌肥大，但受傷風險高，小範圍比較快恢復，以總訓練量來說，先中強度完整進程，再低強度半進程<br>速度最好6秒內，提升總負荷，有意識降低負向動作（2秒快收3秒有意識放）<br>每週總負荷量才是最重要的</p>\n<h2 id=\"熱身收操\"><a href=\"#熱身收操\" class=\"headerlink\" title=\"熱身收操\"></a>熱身收操</h2><p>訓練前一天充足睡眠，運動前靜態伸展不利肌肥大，真的要就30秒內動態伸展</p>\n<p>有氧中強度10-20分鐘慢跑或踩踏<br>最大心率=280-age * 0.7= 259<br>針對性熱身低強度20次漸增有助訓練<br>深蹲站距肩寬1.5倍<br>硬擧下放中足，肩超越槓鈴，髖高度在頭與膝蓋間<br>握推握距肩寬1.5倍，肩胛骨內收下放，手胸前平伸，拱腰一個拳頭高就好<br>收操還沒證據說動態有效  </p>\n<h2 id=\"蛋白質攝取\"><a href=\"#蛋白質攝取\" class=\"headerlink\" title=\"蛋白質攝取\"></a>蛋白質攝取</h2><p>肌力訓練力竭後24小時<br>不建議空腹訓練<br>維持肌肉：每日蛋白質吃夠<br>肌肥大：運動後蛋白攝取<br>最好先攝取蛋白質，最好搭配白胺酸（BCAA有）  </p>\n<h3 id=\"攝取量\"><a href=\"#攝取量\" class=\"headerlink\" title=\"攝取量\"></a>攝取量</h3><p>年輕：體重乘0.24<br>年老：體重乘0.4<br>70kg年輕人每天攝取量:  113-154 ～ 121-165<br>一般三餐配蛋白最理想，再來睡前酪蛋白也重要<br>搭配碳水對肌肉合成幫助不大，但恢復肌肝醣還是有幫助  </p>\n<h2 id=\"有用的補給品\"><a href=\"#有用的補給品\" class=\"headerlink\" title=\"有用的補給品\"></a>有用的補給品</h2><p>運動後全脂牛奶助降低延遲肌肉痠痛<br>沒有心血管疾病吃全蛋<br>肌肥大：蛋白，肌酸（精胺酸,甘胺酸，甲硫胺酸）<br>肌耐力：咖啡因，肌酸，白胺酸，碳水<br>抗疲勞：beta-丙胺酸<br>不太有幫助：精胺酸，麩醯胺酸  </p>\n<h2 id=\"重訓與疾病關係\"><a href=\"#重訓與疾病關係\" class=\"headerlink\" title=\"重訓與疾病關係\"></a>重訓與疾病關係</h2><p>每週2-3次重訓降低死亡率<br>肌力訓練不會睡更多，但會睡更好<br>營造好環境，自然避免誘因  </p>\n","categories":["管理"],"tags":["文書"]},{"title":"55. Jump Game","url":"/interview/55/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(16).jpeg\"></p>\n<p>Given an array of non-negative integers nums, you are initially positioned at the first index of the array.</p>\n<p>Each element in the array represents your maximum jump length at that position.</p>\n<p>Determine if you are able to reach the last index.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [2,3,1,1,4]</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [3,2,1,0,4]</span><br><span class=\"line\">Output: false</span><br><span class=\"line\">Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<ol>\n<li>We start travering the array from start. </li>\n<li>While traversing, we keep a track on maximum  reachable index and   </li>\n<li>update it accordingly. If we reach the maxium reachable index we get out of loop.  </li>\n</ol>\n<p>At last, if maxium reachable index is greater than or equal to last index of the array, means we can reach the last element else return false.  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T: O(n), S: O(1)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def canJump(self, nums: List[int]) -&gt; bool:</span><br><span class=\"line\">        reachableIndex &#x3D; 0</span><br><span class=\"line\">        for curr in range(len(nums)):</span><br><span class=\"line\">            if curr + nums[curr] &gt;&#x3D; reachableIndex:</span><br><span class=\"line\">                reachableIndex &#x3D; curr + nums[curr]</span><br><span class=\"line\">            if curr &#x3D;&#x3D; reachableIndex:</span><br><span class=\"line\">                break</span><br><span class=\"line\">                </span><br><span class=\"line\">        return reachableIndex &gt;&#x3D; len(nums) - 1</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"56. Merge Intervals","url":"/interview/56/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(17).jpeg\"></p>\n<p>Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: intervals &#x3D; [[1,3],[2,6],[8,10],[15,18]]</span><br><span class=\"line\">Output: [[1,6],[8,10],[15,18]]</span><br><span class=\"line\">Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: intervals &#x3D; [[1,4],[4,5]]</span><br><span class=\"line\">Output: [[1,5]]</span><br><span class=\"line\">Explanation: Intervals [1,4] and [4,5] are considered overlapping.</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>先用第一個值排序，再取第二個值比較多的部份。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># T: O(nlogn), S: O(n)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def merge(self, intervals: List[List[int]]) -&gt; List[List[int]]:</span><br><span class=\"line\">        </span><br><span class=\"line\">        # sort the intervals by their start value</span><br><span class=\"line\">        intervals.sort(key&#x3D;lambda x: x[0])</span><br><span class=\"line\"></span><br><span class=\"line\">        merged &#x3D; []</span><br><span class=\"line\">        for interval in intervals:</span><br><span class=\"line\">            # if the list of merged intervals is empty or if the current</span><br><span class=\"line\">            # interval does not overlap with the previous, simply append it.</span><br><span class=\"line\">            if not merged or merged[-1][1] &lt; interval[0]:</span><br><span class=\"line\">                merged.append(interval)</span><br><span class=\"line\">            else:</span><br><span class=\"line\">            # otherwise, there is overlap, so we merge the current and previous intervals.</span><br><span class=\"line\">                merged[-1][1] &#x3D; max(merged[-1][1], interval[1])</span><br><span class=\"line\"></span><br><span class=\"line\">        return merged</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"57. Insert Interval","url":"/interview/57/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(18).jpeg\"></p>\n<p>Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).</p>\n<p>You may assume that the intervals were initially sorted according to their start times.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: intervals &#x3D; [[1,3],[6,9]], newInterval &#x3D; [2,5]</span><br><span class=\"line\">Output: [[1,5],[6,9]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: intervals &#x3D; [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval &#x3D; [4,8]</span><br><span class=\"line\">Output: [[1,2],[3,10],[12,16]]</span><br><span class=\"line\">Explanation: Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10].</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: intervals &#x3D; [], newInterval &#x3D; [5,7]</span><br><span class=\"line\">Output: [[5,7]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: intervals &#x3D; [[1,5]], newInterval &#x3D; [2,3]</span><br><span class=\"line\">Output: [[1,5]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 5:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: intervals &#x3D; [[1,5]], newInterval &#x3D; [2,7]</span><br><span class=\"line\">Output: [[1,7]]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>先加進去再回到56的方法排序。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># T: O(nlogn), S: O(n)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def insert(self, intervals: List[List[int]], newInterval: List[int]) -&gt; List[List[int]]:</span><br><span class=\"line\">        intervals.append(newInterval)</span><br><span class=\"line\">        intervals.sort(key&#x3D;lambda x: x[0])</span><br><span class=\"line\">        merged &#x3D; []</span><br><span class=\"line\">        for interval in intervals:</span><br><span class=\"line\">            if not merged or merged[-1][1] &lt; interval[0]:</span><br><span class=\"line\">                merged.append(interval)</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                merged[-1][1] &#x3D; max(merged[-1][1], interval[1])</span><br><span class=\"line\">        return merged</span><br></pre></td></tr></table></figure>\n","categories":["面試"],"tags":["力扣"]},{"title":"62. Unique Paths","url":"/interview/62/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(19).jpeg\"></p>\n<p>A robot is located at the top-left corner of a m x n grid (marked ‘Start’ in the diagram below).</p>\n<p>The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked ‘Finish’ in the diagram below).</p>\n<p>How many possible unique paths are there?</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: m &#x3D; 3, n &#x3D; 7</span><br><span class=\"line\">Output: 28</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: m &#x3D; 3, n &#x3D; 2</span><br><span class=\"line\">Output: 3</span><br><span class=\"line\">Explanation:</span><br><span class=\"line\">From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:</span><br><span class=\"line\">1. Right -&gt; Down -&gt; Down</span><br><span class=\"line\">2. Down -&gt; Down -&gt; Right</span><br><span class=\"line\">3. Down -&gt; Right -&gt; Down</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: m &#x3D; 7, n &#x3D; 3</span><br><span class=\"line\">Output: 28</span><br><span class=\"line\">Example 4:</span><br><span class=\"line\"></span><br><span class=\"line\">Input: m &#x3D; 3, n &#x3D; 3</span><br><span class=\"line\">Output: 6</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>step down:3, step right: 7<br>ddrrrrrr: move 2d6r<br>rrrrrrdd: move 2d6r<br>…<br>all move 8, select 2 down<br>C8,2= 8!/2!(8-2)! =8<em>7</em>6<em>5</em>4<em>3</em>2/2<em>6</em>5<em>4</em>3<em>2=8</em>7/2=28  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">from math import factorial</span><br><span class=\"line\">import math</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def uniquePaths(self, m: int, n: int) -&gt; int:</span><br><span class=\"line\">        return int(factorial(m+n-2) &#x2F; (factorial(m-1) * factorial(n-1)))</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"重訓回顧","url":"/life/review/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(33).jpeg\"></p>\n<p>看完健身觀念，讓我們再來回顧之前的健身菜單。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"鑑往知來\"><a href=\"#鑑往知來\" class=\"headerlink\" title=\"鑑往知來\"></a>鑑往知來</h1><p>我的運動歷程記錄在<a href=\"https://eric999j.github.io/tags/Workout/\">這</a>：</p>\n<h2 id=\"我認為有效的觀念\"><a href=\"#我認為有效的觀念\" class=\"headerlink\" title=\"我認為有效的觀念\"></a>我認為有效的觀念</h2><p>先顧好<a href=\"https://eric999j.github.io/life/eat/\">吃</a>，選擇原型食物，控制熱量<br>重訓比有氧重要<br><a href=\"https://eric999j.github.io/life/brute/\">十里坡</a>漸進負重，總運動量增，也有看到效果<br>之後開始專精動作，雖然總訓練量降低，但是為了之後的培養期<br><a href=\"https://eric999j.github.io/life/udr/\">上下休息</a>在說訓練分化，某部份酸隔天我還是可以用其他部份訓練，目的也是加強總訓練量<br><a href=\"https://eric999j.github.io/life/ppl/\">腿拉推</a>再進一步將上的部份分成前(推)後(拉)，除了增加總訓練量，還引入了適合自己的方式  </p>\n<h2 id=\"返璞歸真\"><a href=\"#返璞歸真\" class=\"headerlink\" title=\"返璞歸真\"></a>返璞歸真</h2><p>重動少不如輕動多，因為重點就是總訓練量，能動的多，肌纖維破壞越深，肌肉越大<br>像熱量攝取越多，就會變胖/壯一樣的簡單直觀<br>休息也是，如果能讓之後運動達到增肌目標，在合理時間內當然比不休息好，因為總量能上去   </p>\n<h2 id=\"下一步呢\"><a href=\"#下一步呢\" class=\"headerlink\" title=\"下一步呢\"></a>下一步呢</h2><p>Fascia Stretch Training 7, FST-7 (筋膜伸展訓練)<br><a href=\"https://hk.running.biji.co/index.php?q=news&act=info&id=1296\">由美國著名健身教練及營養專家Hany Rambod創立</a>  </p>\n<ul>\n<li>3-4大重量常規動作(8-12下)：  3-4組(組間休息一分半)</li>\n<li>1個中重量孤立動作(10-15下)： 7組(組間休息半分鐘，拉伸)</li>\n</ul>\n<p>看到這個方法我就開始思考:<br>他的目的：在常規訓練後加強特定肌群，增加總訓練量，強調肌肉拉伸，增加維度<br>我的需求：左半身無力<br>結論：常規訓練沿用之前課表，再在FST-7階段強化左半</p>\n<iframe src=\"https://docs.google.com/spreadsheets/d/e/2PACX-1vQ9RVVXByeQw4sgEP4g0a4q2pFpJ9GiLucd3nB66I9_qwoB5pcjEjS4zVHxUz3_FYNyXORT8zqZsWG9/pubhtml?gid=0&amp;single=true&amp;widget=true&amp;headers=false\" \nheight=\"455\"></iframe>\n\n<p>改完課表覺得很有感，健身房教練說用這份課表沒有問題，只是要注意身體狀況，如果沒有什麼新想法我還蠻喜歡這份課表的，我想我會一直用下去吧。</p>\n","categories":["生活"],"tags":["運動"]},{"title":"100. Same Tree","url":"/interview/100/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(25).jpeg\"></p>\n<p>Given the roots of two binary trees p and q, write a function to check if they are the same or not.</p>\n<p>Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: p &#x3D; [1,2,3], q &#x3D; [1,2,3]</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: p &#x3D; [1,2], q &#x3D; [1,null,2]</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: p &#x3D; [1,2,1], q &#x3D; [1,1,2]</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>判斷2棵樹一不一樣，就遍歷時看節點一不一樣。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T: O(N), S: O(log(N))</span><br><span class=\"line\"># Definition for a binary tree node.</span><br><span class=\"line\"># class TreeNode:</span><br><span class=\"line\">#     def init(self, val&#x3D;0, left&#x3D;None, right&#x3D;None):</span><br><span class=\"line\">#         self.val &#x3D; val</span><br><span class=\"line\">#         self.left &#x3D; left</span><br><span class=\"line\">#         self.right &#x3D; right</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def isSameTree(self, p, q):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        :type p: TreeNode</span><br><span class=\"line\">        :type q: TreeNode</span><br><span class=\"line\">        :rtype: bool</span><br><span class=\"line\">        &quot;&quot;&quot;    </span><br><span class=\"line\">        # p and q are both None</span><br><span class=\"line\">        if not p and not q:</span><br><span class=\"line\">            return True</span><br><span class=\"line\">        # one of p and q is None</span><br><span class=\"line\">        if not q or not p:</span><br><span class=\"line\">            return False</span><br><span class=\"line\">        if p.val !&#x3D; q.val: # root equal</span><br><span class=\"line\">            return False</span><br><span class=\"line\">        return self.isSameTree(p.right, q.right) and self.isSameTree(p.left, q.left) # leaf equal</span><br></pre></td></tr></table></figure>\n","categories":["面試"],"tags":["力扣"]},{"title":"98. Validate Binary Search Tree","url":"/interview/98/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(24).jpeg\"></p>\n<p>Given the root of a binary tree, determine if it is a valid binary search tree (BST).</p>\n<p>A valid BST is defined as follows:</p>\n<p>The left subtree of a node contains only nodes with keys less than the node’s key.<br>The right subtree of a node contains only nodes with keys greater than the node’s key.<br>Both the left and right subtrees must also be binary search trees.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [2,1,3]</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [5,1,4,null,null,3,6]</span><br><span class=\"line\">Output: false</span><br><span class=\"line\">Explanation: The root node&#39;s value is 5 but its right child&#39;s value is 4</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>判斷某樹是不是二元樹，要符合條件:  </p>\n<ol>\n<li>任一個節點的左子樹的所有節點值均小於該節點自身的值</li>\n<li>任一個節點的右子樹的所有節點值均大於該節點自身的值</li>\n<li>二元搜尋樹的左子樹和右子樹也都是二元搜尋樹</li>\n</ol>\n<p>那就遞迴吧。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T: O(n), S: O(1)</span><br><span class=\"line\"># Definition for a binary tree node.</span><br><span class=\"line\"># class TreeNode:</span><br><span class=\"line\">#     def init(self, val&#x3D;0, left&#x3D;None, right&#x3D;None):</span><br><span class=\"line\">#         self.val &#x3D; val</span><br><span class=\"line\">#         self.left &#x3D; left</span><br><span class=\"line\">#         self.right &#x3D; right</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def init(self):</span><br><span class=\"line\">        self.last &#x3D; None</span><br><span class=\"line\">    def isValidBST(self, root: TreeNode) -&gt; bool:</span><br><span class=\"line\">        if not root: return True</span><br><span class=\"line\">        if not self.isValidBST(root.left): return False # 左子</span><br><span class=\"line\">        </span><br><span class=\"line\">        if self.last and root.val &lt;&#x3D; self.last.val: return False # 當現在的節點跟上一個節點相比較小或相等不是二元搜尋樹(因為越後面的節點必須較大才行)</span><br><span class=\"line\">        self.last &#x3D; root # 更新上一個節點的位置</span><br><span class=\"line\">        </span><br><span class=\"line\">        return self.isValidBST(root.right) # 右子</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"91. Decode Ways","url":"/interview/91/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(23).jpeg\"></p>\n<p>A message containing letters from A-Z can be encoded into numbers using the following mapping:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#39;A&#39; -&gt; &quot;1&quot;</span><br><span class=\"line\">&#39;B&#39; -&gt; &quot;2&quot;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#39;Z&#39; -&gt; &quot;26&quot;</span><br></pre></td></tr></table></figure>\n\n<p>To decode an encoded message, all the digits must be grouped then mapped back into letters using the reverse of the mapping above (there may be multiple ways). For example, “11106” can be mapped into:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;AAJF&quot; with the grouping (1 1 10 6)</span><br><span class=\"line\">&quot;KJF&quot; with the grouping (11 10 6)</span><br></pre></td></tr></table></figure>\n\n<p>Note that the grouping (1 11 06) is invalid because “06” cannot be mapped into ‘F’ since “6” is different from “06”.</p>\n<p>Given a string s containing only digits, return the number of ways to decode it.</p>\n<p>The answer is guaranteed to fit in a 32-bit integer.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;12&quot;</span><br><span class=\"line\">Output: 2</span><br><span class=\"line\">Explanation: &quot;12&quot; could be decoded as &quot;AB&quot; (1 2) or &quot;L&quot; (12).</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;226&quot;</span><br><span class=\"line\">Output: 3</span><br><span class=\"line\">Explanation: &quot;226&quot; could be decoded as &quot;BZ&quot; (2 26), &quot;VF&quot; (22 6), or &quot;BBF&quot; (2 2 6).</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;0&quot;</span><br><span class=\"line\">Output: 0</span><br><span class=\"line\">Explanation: There is no character that is mapped to a number starting with 0.</span><br><span class=\"line\">The only valid mappings with 0 are &#39;J&#39; -&gt; &quot;10&quot; and &#39;T&#39; -&gt; &quot;20&quot;, neither of which start with 0.</span><br><span class=\"line\">Hence, there are no valid ways to decode this since all digits need to be mapped.</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;06&quot;</span><br><span class=\"line\">Output: 0</span><br><span class=\"line\">Explanation: &quot;06&quot; cannot be mapped to &quot;F&quot; because of the leading zero (&quot;6&quot; is different from &quot;06&quot;).</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>英文字母對應成數字，並輸出有幾種可能性。</p>\n<p><a href=\"https://leetcode.com/problems/decode-ways/discuss/1029225/Simple-and-detail-solution-with-explanation\">網路上的做法</a> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T: O(n), S: O(1)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def numDecodings(self, s: str) -&gt; int:</span><br><span class=\"line\">        dp &#x3D; [0] * (len(s) + 1)     #  create a list dp,   initized to 0.      </span><br><span class=\"line\">        dp[0],dp[1]&#x3D;1,1</span><br><span class=\"line\">        if s[0] &#x3D;&#x3D; &quot;0&quot;:            </span><br><span class=\"line\">            return 0</span><br><span class=\"line\">        for i in range(2, len(s) + 1):</span><br><span class=\"line\">            if 1&lt;&#x3D;int(s[i-1])&lt;&#x3D;9:</span><br><span class=\"line\">                dp[i] +&#x3D; dp[i - 1]</span><br><span class=\"line\">            if 10&lt;&#x3D;int(s[i - 2] + s[i - 1])&lt;&#x3D;26: </span><br><span class=\"line\">                dp[i] +&#x3D;dp[i - 2] </span><br><span class=\"line\">        return dp[-1]</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"73. Set Matrix Zeroes","url":"/interview/73/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(22).jpeg\"></p>\n<p>Given an m x n matrix. If an element is 0, set its entire row and column to 0. Do it in-place.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix &#x3D; [[1,1,1],[1,0,1],[1,1,1]]</span><br><span class=\"line\">Output: [[1,0,1],[0,0,0],[1,0,1]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix &#x3D; [[0,1,2,0],[3,4,5,2],[1,3,1,5]]</span><br><span class=\"line\">Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>找0的位置，行列都設0。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T: O(nˆ2), S: O(n)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def setZeroes(self, matrix: List[List[int]]) -&gt; None:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        Do not return anything, modify matrix in-place instead.</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        row &#x3D; set()</span><br><span class=\"line\">        column &#x3D; set()</span><br><span class=\"line\">        </span><br><span class=\"line\">        for i in range(len(matrix)):</span><br><span class=\"line\">            for j in range(len(matrix[0])):</span><br><span class=\"line\">                if matrix[i][j] &#x3D;&#x3D; 0: </span><br><span class=\"line\">                    row.add(i)</span><br><span class=\"line\">                    column.add(j)  </span><br><span class=\"line\">        # record row and column has 0</span><br><span class=\"line\">        # print(row)</span><br><span class=\"line\">        # print(column)</span><br><span class=\"line\">        for i in row:</span><br><span class=\"line\">            for j in range(len(matrix[0])):</span><br><span class=\"line\">                matrix[i][j] &#x3D; 0 # set row to 0 [i] [j]</span><br><span class=\"line\">                # print(&quot;r&quot;,i) # select number of row</span><br><span class=\"line\">                # print(&quot;c&quot;,j) # each column</span><br><span class=\"line\">        for i in column:</span><br><span class=\"line\">            for j in range(len(matrix)):</span><br><span class=\"line\">                matrix[j][i] &#x3D; 0 # set column to 0 [j] [i] </span><br><span class=\"line\">                # print(&quot;c&quot;,i) # select number of column</span><br><span class=\"line\">                # print(&quot;r&quot;,j) # each row</span><br></pre></td></tr></table></figure>\n\n","categories":["面試"],"tags":["力扣"]},{"title":"102. Binary Tree Level Order Traversal","url":"/interview/102/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(26).jpeg\"></p>\n<p>Given the root of a binary tree, return the level order traversal of its nodes’ values. (i.e., from left to right, level by level).</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [3,9,20,null,null,15,7]</span><br><span class=\"line\">Output: [[3],[9,20],[15,7]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [1]</span><br><span class=\"line\">Output: [[1]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; []</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>依層遍歷樹，用List Comprehension。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Definition for a binary tree node.</span><br><span class=\"line\"># class TreeNode:</span><br><span class=\"line\">#     def init(self, val&#x3D;0, left&#x3D;None, right&#x3D;None):</span><br><span class=\"line\">#         self.val &#x3D; val</span><br><span class=\"line\">#         self.left &#x3D; left</span><br><span class=\"line\">#         self.right &#x3D; right</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def levelOrder(self, root: TreeNode) -&gt; List[List[int]]:</span><br><span class=\"line\">        </span><br><span class=\"line\">        if not root: return []        </span><br><span class=\"line\">        ans &#x3D; []</span><br><span class=\"line\">        level &#x3D; [root]</span><br><span class=\"line\">        </span><br><span class=\"line\">        while level:            </span><br><span class=\"line\">            ans.append([node.val for node in level])</span><br><span class=\"line\">            level &#x3D; [kid for node in level for kid in (node.left, node.right) if kid]        </span><br><span class=\"line\">        return ans</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"力扣回顧","url":"/interview/review/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(26).jpeg\"></p>\n<h1 id=\"知道越多就越有發展性\"><a href=\"#知道越多就越有發展性\" class=\"headerlink\" title=\"知道越多就越有發展性\"></a>知道越多就越有發展性</h1><ol start=\"0\">\n<li>蒐集: 重點知識</li>\n<li>理解: 讀懂問題</li>\n<li>歸納: 組織解法</li>\n<li>演繹: 寫虛擬碼</li>\n<li>實做: 轉為程式</li>\n<li>完善: 修正解題</li>\n</ol>\n<a id=\"more\"></a>\n\n<p>這趟旅程從<a href=\"https://ithelp.ithome.com.tw/articles/10213093\">鐵人賽</a>開始，從比賽過程熟悉python跟機器學習，還培養看書興趣，從我在公司借的最後一本書<a href=\"https://eric999j.github.io/tags/Instrument/page/2/\">心流開始</a>，偶爾寫寫<a href=\"https://eric999j.github.io/tags/LeetCode/\">程式</a>，累了就去<a href=\"https://eric999j.github.io/tags/Workout/\">健身</a>，還有日文跟我的回憶錄，等我整理好再跟大家分享吧。</p>\n","categories":["面試"],"tags":["力扣"]},{"title":"超譯狐仙","url":"/manager/foxTale/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/fox.jpeg\" alt=\"img\"></p>\n<p>上週看了很不一樣的傳統戲劇，決定跟大家分享一下心得<br>這是台北加開場，之後在台中國家歌劇院  </p>\n<a id=\"more\"></a>\n\n<h1 id=\"演出方式\"><a href=\"#演出方式\" class=\"headerlink\" title=\"演出方式\"></a>演出方式</h1><p>舞台布幕像樹幹的布條，配合光影移動表示時間推移用的巧妙<br>切合狐仙主題，虛(投影畫面，氣味與聲光效果)實(真人演出)交雜</p>\n<h1 id=\"表演內容\"><a href=\"#表演內容\" class=\"headerlink\" title=\"表演內容\"></a>表演內容</h1><ol>\n<li><p>第一世（女狐仙，男獵戶<br>狐仙可以幻化成自己想要的樣子，明知愛上人類將是悲劇，狐仙還是為了獵戶化為女生。道士帶著呂洞賓的劍，就是要來斬斷情絲。「倩女幽魂」的聶小倩終究人鬼殊途，獵戶也是人類，不能永遠陪著狐仙，傷心欲絕的狐仙第二世才會想化為男生吧</p>\n</li>\n<li><p>第二世（男狐仙，女三娘<br>狐仙壽命長，當遇上第二世三娘追求，跟太宰治「人間失格」如出一轍，即使也喜歡對方，卻因覺得自己是個怪物而不敢得到幸福。也許是怕又一次失去，當最後終於鼓起勇氣跟對方攤牌，卻還是走向跟第一世相同的結果</p>\n</li>\n<li><p>第三世（女狐仙，女也娜<br>也許是太痛苦，石頭精讓狐仙忘了前世種種，石頭精的「石」指的是「時間」，從前感情的傷痕終將被時間修復。其實這也是種修煉，像張國榮演出「霸王別姬」的虞姬，最後從自己喜歡的轉為可以成就些什麼。而這一世已經跳脫男女情愛，昇華為捨己為子女純粹的大愛</p>\n</li>\n</ol>\n<h1 id=\"寓意\"><a href=\"#寓意\" class=\"headerlink\" title=\"寓意\"></a>寓意</h1><p>表面說狐仙，實際很符合現代芸芸眾生，從迎合別人化作比較不便的女狐仙，經歷內心掙扎，最後以代表做自己的男狐仙姿態與老態龍鍾的也娜相會。如果以現代的角度來看，這是一個有性別認同困擾的人，歷經愛與被愛後透過領養而毫無保留付出的人生歷程</p>\n<h1 id=\"新舊融合\"><a href=\"#新舊融合\" class=\"headerlink\" title=\"新舊融合\"></a>新舊融合</h1><p>由於投影內容是固定的，演員多了跟畫面分秒不差搭配的挑戰</p>\n<p>除了保有傳統戲劇的唱念做打，定場詩，還結合雜耍，加入<a href=\"https://www.rti.org.tw/news/view/id/2089990\">4DViews</a> 技術，利用現代技術補足傳統戲曲較難呈現的狐仙幻化效果，入場也由嗅覺小卡豐富戲劇表演的感官體驗</p>\n<p>美中不足的是畫面呈現由2D投影再帶到真人，男女狐仙幻化只有在一個區域，如果全息投影（Holography）應該會更生動</p>\n<p>感謝大哥帶我來看，原來傳統戲劇不是只有蚊子音跟蟑螂鬚阿（誤</p>\n","categories":["管理"],"tags":["文書"]},{"title":"105. Construct Binary Tree from Preorder and Inorder Traversal","url":"/interview/105/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(28).jpeg\"></p>\n<p>Given two integer arrays preorder and inorder where preorder is the preorder traversal of a binary tree and inorder is the inorder traversal of the same tree, construct and return the binary tree.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: preorder &#x3D; [3,9,20,15,7], inorder &#x3D; [9,3,15,20,7]</span><br><span class=\"line\">Output: [3,9,20,null,null,15,7]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: preorder &#x3D; [-1], inorder &#x3D; [-1]</span><br><span class=\"line\">Output: [-1]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>從前中序結果建出原本的樹，前序可以找root, 中序可以建樹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T: O(n), S: O(1)</span><br><span class=\"line\"># Definition for a binary tree node.</span><br><span class=\"line\"># class TreeNode:</span><br><span class=\"line\">#     def init(self, val&#x3D;0, left&#x3D;None, right&#x3D;None):</span><br><span class=\"line\">#         self.val &#x3D; val</span><br><span class=\"line\">#         self.left &#x3D; left</span><br><span class=\"line\">#         self.right &#x3D; right</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def buildTree(self, preorder: List[int], inorder: List[int]) -&gt; TreeNode:</span><br><span class=\"line\">        # pre : (root, left, right) root is first, find root</span><br><span class=\"line\">        # in: (left, root, right) construct tree</span><br><span class=\"line\"></span><br><span class=\"line\">        # Check if the root exist in inorder</span><br><span class=\"line\">             if len(preorder) and preorder[0] in inorder:</span><br><span class=\"line\">            </span><br><span class=\"line\">            # Find the root index in inorer</span><br><span class=\"line\">            root_index &#x3D; inorder.index(preorder[0])</span><br><span class=\"line\">        </span><br><span class=\"line\">            # Make the root node</span><br><span class=\"line\">            tree &#x3D; TreeNode(preorder[0])</span><br><span class=\"line\"></span><br><span class=\"line\">            # Build left subtree</span><br><span class=\"line\">            tree.left &#x3D; self.buildTree(preorder[1:root_index+1], inorder[:root_index])</span><br><span class=\"line\"></span><br><span class=\"line\">            # Build right subtree</span><br><span class=\"line\">            tree.right &#x3D; self.buildTree(preorder[root_index+1:], inorder[root_index+1:])</span><br><span class=\"line\">            return tree</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"104. Maximum Depth of Binary Tree","url":"/interview/104/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(27).jpeg\"></p>\n<p>Given the root of a binary tree, return its maximum depth.</p>\n<p>A binary tree’s maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [3,9,20,null,null,15,7]</span><br><span class=\"line\">Output: 3</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [1,null,2]</span><br><span class=\"line\">Output: 2</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; []</span><br><span class=\"line\">Output: 0</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [0]</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>Tree中找最大深度，遞迴尋訪左右子樹，看哪個較深</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T: O(n), S: O(1)</span><br><span class=\"line\"># Definition for a binary tree node.</span><br><span class=\"line\"># class TreeNode:</span><br><span class=\"line\">#     def init(self, val&#x3D;0, left&#x3D;None, right&#x3D;None):</span><br><span class=\"line\">#         self.val &#x3D; val</span><br><span class=\"line\">#         self.left &#x3D; left</span><br><span class=\"line\">#         self.right &#x3D; right</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def maxDepth(self, root: TreeNode) -&gt; int:</span><br><span class=\"line\">        if root &#x3D;&#x3D; None:</span><br><span class=\"line\">            return 0</span><br><span class=\"line\">        return 1 + max(self.maxDepth(root.left), self.maxDepth(root.right))</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"128. Longest Consecutive Sequence","url":"/interview/128/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(32).jpeg\"></p>\n<p>Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [100,4,200,1,3,2]</span><br><span class=\"line\">Output: 4</span><br><span class=\"line\">Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [0,3,7,2,5,8,4,6,0,1]</span><br><span class=\"line\">Output: 9</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>最大連續子字串，先排序，再看各值跟上個是不是差1</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T: O(n), S: O(n)</span><br><span class=\"line\">class Solution:class Solution:</span><br><span class=\"line\">    def longestConsecutive(self, nums: List[int]) -&gt; int:</span><br><span class=\"line\">        if not nums: return 0</span><br><span class=\"line\">        longest&#x3D;current&#x3D;1</span><br><span class=\"line\">        nums&#x3D;list(sorted(set(nums)))</span><br><span class=\"line\">        print (&quot;nums&#x3D;&quot;,nums)</span><br><span class=\"line\">        for i in range(1,len(nums)): # start from 1</span><br><span class=\"line\">            if nums[i]&#x3D;&#x3D;nums[i-1]+1:</span><br><span class=\"line\">                current+&#x3D;1</span><br><span class=\"line\">            else: # not consecutive</span><br><span class=\"line\">                longest&#x3D;max(current,longest)</span><br><span class=\"line\">                current&#x3D;1</span><br><span class=\"line\">        return max(current,longest)</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"隠れオタクでごめんなさい","url":"/life/nerd/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(39).jpeg\"></p>\n<p>FB回顧跳出這首懷念的歌，剛好這個月也需要介紹日文歌，就決定是你了。</p>\n<p>另外Shvara改了呈現方式，直接寫漢字，日中歌詞分開，大家就更容易看歌詞啦。</p>\n<a id=\"more\"></a>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/j9-iQnh_5LM\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[A]</span><br><span class=\"line\">いよいよアタシもコスプレデビュー # アタシ: 女生自稱，片假強調</span><br><span class=\"line\">(西館屋上視線集めて）</span><br><span class=\"line\">「目線ください」とカメコの声に</span><br><span class=\"line\">振り向いたらクラスの男の子でした # 振り: 轉向</span><br><span class=\"line\"></span><br><span class=\"line\">[B]同學</span><br><span class=\"line\">「何やってんだこんなところで」 # 何やってんだ: 你在做什麼</span><br><span class=\"line\">それはアタシのセリフでしょ！ # セリフ: 台詞 [1]</span><br><span class=\"line\">「週末は海にランデブーだ」って # ランデブー:  Randebu（法文幽會）</span><br><span class=\"line\">キミは確か言ってたじゃないの</span><br><span class=\"line\"></span><br><span class=\"line\">[C]</span><br><span class=\"line\">おもいっきり弾けちゃうよ # おもいっきり: 太,  弾け: 冒失 </span><br><span class=\"line\">今日のアタシは自重しないの</span><br><span class=\"line\">わかるでしょ？ほら</span><br><span class=\"line\">これは二人だけの秘密だよ</span><br><span class=\"line\">いつだってこんな風に # いつだって:  (辯解) 因為[2]， 風:  樣子</span><br><span class=\"line\">素直に振舞う勇気頂戴  # 頂戴: 女性對下屬的“請” [3]</span><br><span class=\"line\">でもやっぱり…まだ</span><br><span class=\"line\">クラスのみんなには内緒にしておきたい # 内緒にしておきたい: 我想保密</span><br><span class=\"line\">アタシ </span><br><span class=\"line\">隠れオタクでごめんなさい # オタク: 御宅族</span><br><span class=\"line\"></span><br><span class=\"line\">[A]</span><br><span class=\"line\">気を取り直してバイトに出勤 </span><br><span class=\"line\">（お馴染みアキバのメイド喫茶）# アキバ： 秋葉原， メイド：女僕</span><br><span class=\"line\">「お帰りなさいご主人様」って</span><br><span class=\"line\">顔を上げたらアタシのパパでした</span><br><span class=\"line\"></span><br><span class=\"line\">[B]爸爸</span><br><span class=\"line\">「何やってんだこんなところで」</span><br><span class=\"line\">それはアタシのセリフでしょ！</span><br><span class=\"line\">「今夜は会議で遅くなるよ」って</span><br><span class=\"line\">今朝はママに言ってたじゃないの</span><br><span class=\"line\"></span><br><span class=\"line\">[C]</span><br><span class=\"line\">おもいっきり弾けちゃうよ</span><br><span class=\"line\">今日もアタシは全力で接待</span><br><span class=\"line\">わかるでしょ？ねえ</span><br><span class=\"line\">これは二人だけの秘密だよ</span><br><span class=\"line\">いつだってこんな風に</span><br><span class=\"line\">自由に話せる時間を頂戴</span><br><span class=\"line\">でもやっぱり…まだ</span><br><span class=\"line\">ママには余計な心配をかけたくないの # 余計な心配: 多餘的擔心， かけた: 動作停止 [4]</span><br><span class=\"line\">アタシ</span><br><span class=\"line\">隠れオタクでごめんなさい</span><br><span class=\"line\"></span><br><span class=\"line\">[D]</span><br><span class=\"line\">だってこの国の社会は</span><br><span class=\"line\">まだまだアタシたちには厳しい時代なの</span><br><span class=\"line\"></span><br><span class=\"line\">[C]</span><br><span class=\"line\">おもいっきり弾けちゃうよ</span><br><span class=\"line\">今日のアタシは自重しないの</span><br><span class=\"line\">わかるでしょ？ほら</span><br><span class=\"line\">これは二人だけの秘密だよ</span><br><span class=\"line\">いつだってこんな風に</span><br><span class=\"line\">素直に振舞う勇気頂戴</span><br><span class=\"line\">でもやっぱり…まだ</span><br><span class=\"line\">こんなアタシの秘密は打ち明けられないよ！</span><br><span class=\"line\"></span><br><span class=\"line\">[E]媽媽</span><br><span class=\"line\">何はともあれ今日はお疲れさん</span><br><span class=\"line\">（パジャマに着替えてニコニコ見てる）# パジャマ: pajamas</span><br><span class=\"line\">人気の動画をチェックしてたら # チェック: check</span><br><span class=\"line\">アタシの制服着たママが踊ってた</span><br><span class=\"line\"></span><br><span class=\"line\">-----------------</span><br><span class=\"line\">終於我也來cosplay了</span><br><span class=\"line\">(西管屋頂上視線聚集過來)</span><br><span class=\"line\">聽到「請看過來」的相機聲</span><br><span class=\"line\">回頭看是班上的男生</span><br><span class=\"line\"></span><br><span class=\"line\">同學：「你在這做什麽」</span><br><span class=\"line\">這是我要說的吧！</span><br><span class=\"line\">你不是說「週末要去海邊約會」嗎?</span><br><span class=\"line\"></span><br><span class=\"line\">太冒失了</span><br><span class=\"line\">今天的我沒做到自重</span><br><span class=\"line\">你知道的吧？你看</span><br><span class=\"line\">這是我們兩個的秘密哦</span><br><span class=\"line\"></span><br><span class=\"line\">什麽時候可以有</span><br><span class=\"line\">坦率地表現的勇氣</span><br><span class=\"line\">但我還是</span><br><span class=\"line\">想向同學們保密</span><br><span class=\"line\">真是對不起</span><br><span class=\"line\">我是個隱藏宅</span><br><span class=\"line\"></span><br><span class=\"line\">重新打起精神去打工</span><br><span class=\"line\">（秋葉原的青梅竹馬女僕咖啡廳）</span><br><span class=\"line\">說著「主人歡迎回來」</span><br><span class=\"line\">抬頭卻看見爸爸</span><br><span class=\"line\"></span><br><span class=\"line\">爸爸：「你在這做什麽」</span><br><span class=\"line\">這是我要說的吧！</span><br><span class=\"line\">你今天早上不是對媽媽說「今天要開會會晚點回家」嗎？</span><br><span class=\"line\"></span><br><span class=\"line\">太冒失了</span><br><span class=\"line\">今天的我還是要全力接待</span><br><span class=\"line\">你懂的吧？吶吶</span><br><span class=\"line\">這是我們兩個的秘密哦</span><br><span class=\"line\"></span><br><span class=\"line\">什麽時候可以這樣</span><br><span class=\"line\">自由的說話</span><br><span class=\"line\">但我還是</span><br><span class=\"line\">不想讓媽媽擔心</span><br><span class=\"line\">真是對不起</span><br><span class=\"line\">我是個隱藏宅</span><br><span class=\"line\"></span><br><span class=\"line\">現在的大環境</span><br><span class=\"line\">還是對阿宅不友善呢</span><br><span class=\"line\"></span><br><span class=\"line\">太冒失了</span><br><span class=\"line\">今天的我沒做到自重</span><br><span class=\"line\">你知道的吧？你看</span><br><span class=\"line\">這是我們兩個的秘密哦</span><br><span class=\"line\"></span><br><span class=\"line\">什麽時候可以有</span><br><span class=\"line\">開誠佈公的勇氣</span><br><span class=\"line\">但我還是</span><br><span class=\"line\">不想被揭穿</span><br><span class=\"line\"></span><br><span class=\"line\">總之今天辛苦了</span><br><span class=\"line\">（換睡衣開niconico）</span><br><span class=\"line\">點開人氣動畫</span><br><span class=\"line\">卻看到媽媽穿我的校服在上面跳舞...</span><br></pre></td></tr></table></figure>\n\n<p>阿宅原來是個遺傳阿www<br>\\Gumi大好/  </p>\n<h3 id=\"Shvara要求的學習資源：\"><a href=\"#Shvara要求的學習資源：\" class=\"headerlink\" title=\"Shvara要求的學習資源：\"></a>Shvara要求的學習資源：</h3><ul>\n<li><p>1: <a href=\"https://www.facebook.com/sonicjpn/posts/10155027555406392/\">セリフ</a>  </p>\n</li>\n<li><p>2: [いつだって](“口語常見的「だって」是什麼意思？ - 時雨の町-日文學習園地” <a href=\"https://www.sigure.tw/learn-japanese/mix/knowledge/datte.php\">https://www.sigure.tw/learn-japanese/mix/knowledge/datte.php</a>)  </p>\n</li>\n<li><p>3: [頂戴](“N3文法53「てちょうだい」請求 - 時雨の町-日文學習園地” <a href=\"https://www.sigure.tw/learn-japanese/grammar/n3/53.php\">https://www.sigure.tw/learn-japanese/grammar/n3/53.php</a>)  </p>\n</li>\n<li><p>4: [かけた](“かけた是什么意思_かけた是什么意思及用法_日文翻译中文” <a href=\"https://m.hujiang.com/jpciku/je3818be38191e3819f/?source=pc\">https://m.hujiang.com/jpciku/je3818be38191e3819f/?source=pc</a>)  </p>\n</li>\n</ul>\n","categories":["生活"],"tags":["音樂"]},{"title":"133. Clone Graph","url":"/interview/133/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(16).jpeg\"></p>\n<p>Given a reference of a node in a connected undirected graph.</p>\n<p>Return a deep copy (clone) of the graph.</p>\n<p>Each node in the graph contains a value (int) and a list (List[Node]) of its neighbors.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Node:</span><br><span class=\"line\">    def init(self, val &#x3D; 0, neighbors &#x3D; None):</span><br><span class=\"line\">        self.val &#x3D; val</span><br><span class=\"line\">        self.neighbors &#x3D; neighbors if neighbors is not None else []</span><br></pre></td></tr></table></figure>\n\n<p><strong>Test case format:</strong></p>\n<p>For simplicity, each node’s value is the same as the node’s index (1-indexed). For example, the first node with val == 1, the second node with val == 2, and so on. The graph is represented in the test case using an adjacency list.</p>\n<p><strong>An adjacency list</strong> is a collection of unordered lists used to represent a finite graph. Each list describes the set of neighbors of a node in the graph.</p>\n<p>The given node will always be the first node with val = 1. You must return the copy of the given node as a reference to the cloned graph.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: adjList &#x3D; [[2,4],[1,3],[2,4],[1,3]]</span><br><span class=\"line\">Output: [[2,4],[1,3],[2,4],[1,3]]</span><br><span class=\"line\">Explanation: There are 4 nodes in the graph.</span><br><span class=\"line\">1st node (val &#x3D; 1)&#39;s neighbors are 2nd node (val &#x3D; 2) and 4th node (val &#x3D; 4).</span><br><span class=\"line\">2nd node (val &#x3D; 2)&#39;s neighbors are 1st node (val &#x3D; 1) and 3rd node (val &#x3D; 3).</span><br><span class=\"line\">3rd node (val &#x3D; 3)&#39;s neighbors are 2nd node (val &#x3D; 2) and 4th node (val &#x3D; 4).</span><br><span class=\"line\">4th node (val &#x3D; 4)&#39;s neighbors are 1st node (val &#x3D; 1) and 3rd node (val &#x3D; 3).</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: adjList &#x3D; [[]]</span><br><span class=\"line\">Output: [[]]</span><br><span class=\"line\">Explanation: Note that the input contains one empty list. The graph consists of only one node with val &#x3D; 1 and it does not have any neighbors.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: adjList &#x3D; []</span><br><span class=\"line\">Output: []</span><br><span class=\"line\">Explanation: This an empty graph, it does not have any nodes.</span><br></pre></td></tr></table></figure>\n\n<p>Example 4:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: adjList &#x3D; [[2],[1]]</span><br><span class=\"line\">Output: [[2],[1]]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>回傳dfs 走訪記錄</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T:O(n), S:O(n)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def cloneGraph(self, node: &#39;Node&#39;) -&gt; &#39;Node&#39;:</span><br><span class=\"line\">        def dfs(node):</span><br><span class=\"line\">            if node in visited: return visited[node]</span><br><span class=\"line\">            </span><br><span class=\"line\">            visited[node] &#x3D; Node(node.val)</span><br><span class=\"line\">            </span><br><span class=\"line\">            for nei in node.neighbors:</span><br><span class=\"line\">                visited[node].neighbors.append(dfs(nei))</span><br><span class=\"line\">                </span><br><span class=\"line\">            return visited[node]</span><br><span class=\"line\">        </span><br><span class=\"line\">        # simply return, no node </span><br><span class=\"line\">        if not node: return None</span><br><span class=\"line\">        </span><br><span class=\"line\">        visited &#x3D; &#123;&#125;</span><br><span class=\"line\">        clone_graph &#x3D; dfs(node)</span><br><span class=\"line\">        return clone_graph</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"139. Word Break","url":"/interview/139/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(19).jpeg\"></p>\n<p>Given a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words.</p>\n<p>Note that the same word in the dictionary may be reused multiple times in the segmentation.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;leetcode&quot;, wordDict &#x3D; [&quot;leet&quot;,&quot;code&quot;]</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: Return true because &quot;leetcode&quot; can be segmented as &quot;leet code&quot;.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;applepenapple&quot;, wordDict &#x3D; [&quot;apple&quot;,&quot;pen&quot;]</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: Return true because &quot;applepenapple&quot; can be segmented as &quot;apple pen apple&quot;.</span><br><span class=\"line\">Note that you are allowed to reuse a dictionary word.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s &#x3D; &quot;catsandog&quot;, wordDict &#x3D; [&quot;cats&quot;,&quot;dog&quot;,&quot;sand&quot;,&quot;and&quot;,&quot;cat&quot;]</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>s = “catsandog”<br>wordDict = [“cats”, “dog”, “sand”, “and”, “cat”]<br>找字頭符合，在字典標為True.  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># T: O(nˆ2), S: O(n)</span><br><span class=\"line\">    def wordBreak(self, s, dict):</span><br><span class=\"line\">        n &#x3D; len(s)</span><br><span class=\"line\">        f &#x3D; [False for i in range(n+1)] # 從該位置有無符合的字</span><br><span class=\"line\">        f[0] &#x3D; True # 第一個字</span><br><span class=\"line\">        for i in range(n):</span><br><span class=\"line\">            if f[i]: # 字頭</span><br><span class=\"line\">                for j in dict: # 找字典有的字</span><br><span class=\"line\">                    l &#x3D; len(j)</span><br><span class=\"line\">                    if i+l&lt;&#x3D;n and s[i:i+l] &#x3D;&#x3D; j:</span><br><span class=\"line\">                        f[i+l] &#x3D; True # 下一個字</span><br><span class=\"line\">        return f[n]</span><br></pre></td></tr></table></figure>\n","categories":["面試"],"tags":["力扣"]},{"title":"152. Maximum Product Subarray","url":"/interview/152/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(38).jpeg\"></p>\n<p>Given an integer array nums, find a contiguous non-empty subarray within the array that has the largest product, and return the product.</p>\n<p>It is guaranteed that the answer will fit in a 32-bit integer.</p>\n<p>A subarray is a contiguous subsequence of the array.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [2,3,-2,4]</span><br><span class=\"line\">Output: 6</span><br><span class=\"line\">Explanation: [2,3] has the largest product 6.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [-2,0,-1]</span><br><span class=\"line\">Output: 0</span><br><span class=\"line\">Explanation: The result cannot be 2, because [-2,-1] is not a subarray.</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>邊走邊找看過最大乘積。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution:</span><br><span class=\"line\">    def maxProduct(self, nums: List[int]) -&gt; int:</span><br><span class=\"line\">        if len(nums)&#x3D;&#x3D;0:return 0</span><br><span class=\"line\">        currMaxProduct &#x3D; currMinProduct &#x3D; maxProduct  &#x3D; nums[0]</span><br><span class=\"line\">        </span><br><span class=\"line\">        for i in range(1, len(nums)):</span><br><span class=\"line\">            prevMinProduct &#x3D; currMinProduct</span><br><span class=\"line\">            prevMaxProduct &#x3D; currMaxProduct</span><br><span class=\"line\">            </span><br><span class=\"line\">            currMinProduct &#x3D; min(nums[i] * prevMaxProduct, nums[i], nums[i] * prevMinProduct)</span><br><span class=\"line\">            currMaxProduct &#x3D; max(nums[i] * prevMaxProduct, nums[i], nums[i] * prevMinProduct)</span><br><span class=\"line\">            maxProduct &#x3D; max(maxProduct, currMaxProduct)</span><br><span class=\"line\">            </span><br><span class=\"line\">        return maxProduct</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"141. Linked List Cycle","url":"/interview/141/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(36).jpeg\"></p>\n<p>Given head, the head of a linked list, determine if the linked list has a cycle in it.</p>\n<p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail’s next pointer is connected to. Note that pos is not passed as a parameter.</p>\n<p>Return true if there is a cycle in the linked list. Otherwise, return false.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head &#x3D; [3,2,0,-4], pos &#x3D; 1</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head &#x3D; [1,2], pos &#x3D; 0</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: There is a cycle in the linked list, where the tail connects to the 0th node.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head &#x3D; [1], pos &#x3D; -1</span><br><span class=\"line\">Output: false</span><br><span class=\"line\">Explanation: There is no cycle in the linked list.</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>看串列是否有環，邊走邊檢查，有環一定遇過</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Definition for singly-linked list.</span><br><span class=\"line\"># class ListNode:</span><br><span class=\"line\">#     def init(self, x):</span><br><span class=\"line\">#         self.val &#x3D; x</span><br><span class=\"line\">#         self.next &#x3D; None</span><br><span class=\"line\"></span><br><span class=\"line\"># T:O(n), S:O(n)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def hasCycle(self, head: ListNode) -&gt; bool:</span><br><span class=\"line\">        seen &#x3D; set()</span><br><span class=\"line\">        while head:</span><br><span class=\"line\">            if head in seen:</span><br><span class=\"line\">                return True</span><br><span class=\"line\">            seen.add(head)</span><br><span class=\"line\">            head &#x3D; head.next</span><br><span class=\"line\">        return False</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"143. Reorder List","url":"/interview/143/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(37).jpeg\"></p>\n<p>You are given the head of a singly linked-list. The list can be represented as:</p>\n<p>L0 → L1 → … → Ln - 1 → Ln  </p>\n<p>Reorder the list to be on the following form:</p>\n<p>L0 → Ln → L1 → Ln - 1 → L2 → Ln - 2 → …  </p>\n<p>You may not modify the values in the list’s nodes. Only nodes themselves may be changed.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head &#x3D; [1,2,3,4]</span><br><span class=\"line\">Output: [1,4,2,3]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head &#x3D; [1,2,3,4,5]</span><br><span class=\"line\">Output: [1,5,2,4,3]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>如果單純list，穿插就想到zip，反向就想到[::-1]，但這題是linkedlist，可以用快慢指針。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Definition for singly-linked list.</span><br><span class=\"line\"># class ListNode:</span><br><span class=\"line\">#     def init(self, val&#x3D;0, next&#x3D;None):</span><br><span class=\"line\">#         self.val &#x3D; val</span><br><span class=\"line\">#         self.next &#x3D; next</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def reorderList(self, head: ListNode) -&gt; None:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        Do not return anything, modify head in-place instead.</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        if not head:</span><br><span class=\"line\">            return []</span><br><span class=\"line\">        </span><br><span class=\"line\">        # Find the middle of the list</span><br><span class=\"line\">        slow &#x3D; fast &#x3D; head</span><br><span class=\"line\">        while fast and fast.next:</span><br><span class=\"line\">            slow &#x3D; slow.next</span><br><span class=\"line\">            fast &#x3D; fast.next.next</span><br><span class=\"line\">        </span><br><span class=\"line\">        slow.next,mid &#x3D; None,slow.next # del last, mid&#x3D;last node</span><br><span class=\"line\">        </span><br><span class=\"line\">        # Reverse the half after middle</span><br><span class=\"line\">        dummyHead &#x3D; ListNode(0)</span><br><span class=\"line\">        while mid:</span><br><span class=\"line\">            print(mid.val)</span><br><span class=\"line\">            dummyHead.next, mid.next, mid &#x3D; mid, dummyHead.next, mid.next </span><br><span class=\"line\">            </span><br><span class=\"line\">        # Start reorder one by one  </span><br><span class=\"line\">        reverse &#x3D; dummyHead.next</span><br><span class=\"line\">        while reverse:</span><br><span class=\"line\">            head.next,reverse.next,reverse,head &#x3D; reverse,head.next,reverse.next,head.next</span><br></pre></td></tr></table></figure>\n","categories":["面試"],"tags":["力扣"]},{"title":"200. Number of Islands","url":"/interview/200/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(3).jpeg\"></p>\n<p>Given an m x n 2D binary grid grid which represents a map of ‘1’s (land) and ‘0’s (water), return the number of islands.</p>\n<p>An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: grid &#x3D; [</span><br><span class=\"line\">  [&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;0&quot;],</span><br><span class=\"line\">  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;],</span><br><span class=\"line\">  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],</span><br><span class=\"line\">  [&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;]</span><br><span class=\"line\">]</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: grid &#x3D; [</span><br><span class=\"line\">  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],</span><br><span class=\"line\">  [&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],</span><br><span class=\"line\">  [&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;],</span><br><span class=\"line\">  [&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;]</span><br><span class=\"line\">]</span><br><span class=\"line\">Output: 3</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>找島嶼數，遞迴移除，再看移幾次。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">The idea is simple if we find a 1 we remove all it&#39;s neibors recursively.</span><br><span class=\"line\">[[&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],</span><br><span class=\"line\">[&quot;1&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;],</span><br><span class=\"line\">[&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;],</span><br><span class=\"line\">[&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;1&quot;]]</span><br><span class=\"line\"></span><br><span class=\"line\">[[0, &#39;1&#39;, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[&#39;1&#39;, &#39;1&#39;, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[&#39;0&#39;, &#39;0&#39;, &#39;1&#39;, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[&#39;0&#39;, &#39;0&#39;, &#39;0&#39;, &#39;1&#39;, &#39;1&#39;]]</span><br><span class=\"line\"></span><br><span class=\"line\">[[0, &#39;1&#39;, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[0, &#39;1&#39;, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[&#39;0&#39;, &#39;0&#39;, &#39;1&#39;, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[&#39;0&#39;, &#39;0&#39;, &#39;0&#39;, &#39;1&#39;, &#39;1&#39;]]</span><br><span class=\"line\"></span><br><span class=\"line\">[[0, &#39;1&#39;, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[0, 0, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[&#39;0&#39;, &#39;0&#39;, &#39;1&#39;, &#39;0&#39;, &#39;0&#39;],</span><br><span class=\"line\"> [&#39;0&#39;, &#39;0&#39;, &#39;0&#39;, &#39;1&#39;, &#39;1&#39;]]</span><br><span class=\"line\"></span><br><span class=\"line\">[[0, 0, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[0, 0, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[&#39;0&#39;, &#39;0&#39;, &#39;1&#39;, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[&#39;0&#39;, &#39;0&#39;, &#39;0&#39;, &#39;1&#39;, &#39;1&#39;]]</span><br><span class=\"line\">done</span><br><span class=\"line\"></span><br><span class=\"line\">[[0, 0, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;],</span><br><span class=\"line\"> [0, 0, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[&#39;0&#39;, &#39;0&#39;, 0, &#39;0&#39;, &#39;0&#39;],</span><br><span class=\"line\"> [&#39;0&#39;, &#39;0&#39;, &#39;0&#39;, &#39;1&#39;, &#39;1&#39;]]</span><br><span class=\"line\">done</span><br><span class=\"line\"></span><br><span class=\"line\">[[0, 0, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;],</span><br><span class=\"line\"> [0, 0, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[&#39;0&#39;, &#39;0&#39;, 0, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[&#39;0&#39;, &#39;0&#39;, &#39;0&#39;, 0, &#39;1&#39;]]</span><br><span class=\"line\"></span><br><span class=\"line\">[[0, 0, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[0, 0, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[&#39;0&#39;, &#39;0&#39;, 0, &#39;0&#39;, &#39;0&#39;], </span><br><span class=\"line\">[&#39;0&#39;, &#39;0&#39;, &#39;0&#39;, 0, 0]]</span><br><span class=\"line\">done</span><br><span class=\"line\"></span><br><span class=\"line\"># T:O(nˆ2), S:O(n)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def numIslands(self, grid: List[List[str]]) -&gt; int:</span><br><span class=\"line\">        count &#x3D; 0</span><br><span class=\"line\">        for r,row in enumerate(grid):</span><br><span class=\"line\">            for c,col in enumerate(row):</span><br><span class=\"line\">                if grid[r][c] &#x3D;&#x3D; &#39;1&#39;:</span><br><span class=\"line\">                    self.removeNeighbors(r,c,grid)</span><br><span class=\"line\">                    print(&quot;done&quot;)</span><br><span class=\"line\">                    count +&#x3D; 1</span><br><span class=\"line\">        return count      </span><br><span class=\"line\">    </span><br><span class=\"line\">    def removeNeighbors(self, r ,c, grid):</span><br><span class=\"line\">        grid[r][c] &#x3D; 0 </span><br><span class=\"line\">        </span><br><span class=\"line\">        print(grid)   </span><br><span class=\"line\">        if r+1 &lt; len(grid) and grid[r+1][c] &#x3D;&#x3D; &#39;1&#39;:</span><br><span class=\"line\">            self.removeNeighbors(r+1,c,grid)</span><br><span class=\"line\">        if c+1 &lt; len(grid[0]) and grid[r][c+1] &#x3D;&#x3D; &#39;1&#39;:</span><br><span class=\"line\">            self.removeNeighbors(r,c+1,grid)    </span><br><span class=\"line\">        if r-1 &gt;&#x3D; 0 and grid[r-1][c] &#x3D;&#x3D; &#39;1&#39;:</span><br><span class=\"line\">            self.removeNeighbors(r-1,c,grid)</span><br><span class=\"line\">        if c-1 &gt;&#x3D; 0 and grid[r][c-1] &#x3D;&#x3D; &#39;1&#39;:</span><br><span class=\"line\">            self.removeNeighbors(r,c-1,grid)</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"153. Find Minimum in Rotated Sorted Array","url":"/interview/153/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(40).jpeg\"></p>\n<p>Suppose an array of length n sorted in ascending order is rotated between 1 and n times. For example, the array nums = [0,1,2,4,5,6,7] might become:</p>\n<p>[4,5,6,7,0,1,2] if it was rotated 4 times.<br>[0,1,2,4,5,6,7] if it was rotated 7 times.<br>Notice that rotating an array [a[0], a[1], a[2], …, a[n-1]] 1 time results in the array [a[n-1], a[0], a[1], a[2], …, a[n-2]].</p>\n<p>Given the sorted rotated array nums of unique elements, return the minimum element of this array.</p>\n<p>You must write an algorithm that runs in O(log n) time.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [3,4,5,1,2]</span><br><span class=\"line\">Output: 1</span><br><span class=\"line\">Explanation: The original array was [1,2,3,4,5] rotated 3 times.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [4,5,6,7,0,1,2]</span><br><span class=\"line\">Output: 0</span><br><span class=\"line\">Explanation: The original array was [0,1,2,4,5,6,7] and it was rotated 4 times.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [11,13,15,17]</span><br><span class=\"line\">Output: 11</span><br><span class=\"line\">Explanation: The original array was [11,13,15,17] and it was rotated 4 times. </span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>二元搜尋找最小值。  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># T: O(logN) Binary Search, S: O(1)</span><br><span class=\"line\"></span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def findMin(self, nums: List[int]) -&gt; int:</span><br><span class=\"line\">        l,r &#x3D; 0, len(nums)-1</span><br><span class=\"line\">        compare &#x3D; nums[-1]</span><br><span class=\"line\">        </span><br><span class=\"line\">        while l &lt; r:</span><br><span class=\"line\">            mid &#x3D; (l+r)&#x2F;&#x2F;2</span><br><span class=\"line\">            if nums[mid] &gt; compare:</span><br><span class=\"line\">                l &#x3D; mid+1</span><br><span class=\"line\">            if nums[mid] &lt; compare:</span><br><span class=\"line\">                r &#x3D; mid</span><br><span class=\"line\">        </span><br><span class=\"line\">        return nums[l]</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"閱讀真確","url":"/manager/factfulness/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(37).jpeg\"></p>\n<p>胡適說過「做事(學問)要在不疑處有疑，做人要在有疑處不疑」<br>真確要表達的是在保有客觀，理性評估下力求精確。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"偏誤-克服辦法\"><a href=\"#偏誤-克服辦法\" class=\"headerlink\" title=\"偏誤: 克服辦法\"></a>偏誤: 克服辦法</h2><ol>\n<li>二分直覺偏誤：尋找多數落點，比較平均值，與分布情形</li>\n<li>負面直覺偏誤：要從好壞不同面向看待事情</li>\n<li>直線直覺偏誤：不一定線性趨勢，未來不能簡單預測</li>\n<li>恐懼直覺偏誤：危機說不定是轉機，要評估應對</li>\n<li>失真直覺偏誤：掌握比例，綜觀去看</li>\n<li>概括直覺偏誤：質疑分類，離群值</li>\n<li>宿命直覺偏誤：滴水穿石，命運靠自己改變</li>\n<li>單一直覺偏誤：多方運用，多方設想</li>\n<li>怪罪直覺偏誤：對事不對人</li>\n<li>急迫直覺偏誤：不要躁進</li>\n</ol>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><ol>\n<li>[世上只有男女兩種性別]</li>\n<li>[以前的社會比現在安全]</li>\n<li>[這樣下去病情會越來越遭]</li>\n<li>[沒有這個東西就完蛋了]</li>\n<li>[瞎子摸象]</li>\n<li>[他會寫程式，他的朋友也一定都會]</li>\n<li>[我可能永遠都瘦不下來吧]</li>\n<li>[今天有雲，明天一定下雨]</li>\n<li>[我不帥一定是基因不好]</li>\n<li>[要趕快從備案找個解法]</li>\n</ol>\n<p>本書要訓練的是批評性思考，當大家都相信某件事情時要想是否有其他可能，一步步抽絲剝繭掌握事情根本，再在評估各種解決問題方式後用最合適的方法，不斷自我校正，最後解決，重點是要能意識到偏誤。  </p>\n","categories":["管理"],"tags":["文書"]},{"title":"206. Reverse Linked List","url":"/interview/206/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(4).jpeg\"></p>\n<p>Given the head of a singly linked list, reverse the list, and return the reversed list.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head &#x3D; [1,2,3,4,5]</span><br><span class=\"line\">Output: [5,4,3,2,1]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head &#x3D; [1,2]</span><br><span class=\"line\">Output: [2,1]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head &#x3D; []</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>反轉串列，把上個，這個，下個順序反轉<br>遞迴版本就把下個變這個，直到結束<br>Python語法很方便</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># T:O(n), S:O:(1)</span><br><span class=\"line\"># Definition for singly-linked list.</span><br><span class=\"line\"># class ListNode:</span><br><span class=\"line\">#     def init(self, val&#x3D;0, next&#x3D;None):</span><br><span class=\"line\">#         self.val &#x3D; val</span><br><span class=\"line\">#         self.next &#x3D; next</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def reverseList(self, head: ListNode) -&gt; ListNode:</span><br><span class=\"line\">        prev, curr &#x3D; None, head # end, start</span><br><span class=\"line\">        while curr !&#x3D; None:</span><br><span class=\"line\">            curr.next, prev, curr  &#x3D; prev, curr, curr.next # reverse curr and prev, curr go next</span><br><span class=\"line\">        return prev</span><br><span class=\"line\">        </span><br><span class=\"line\"># recursive version</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def reverseList(self, head):</span><br><span class=\"line\">        if head is None or head.next is None:</span><br><span class=\"line\">            return head</span><br><span class=\"line\">        result &#x3D; self.reverseList(head.next) # go through</span><br><span class=\"line\">        head.next.next,head.next &#x3D; head,None # reverse</span><br><span class=\"line\">        return result</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"208. Implement Trie (Prefix Tree)","url":"/interview/208/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(6).jpeg\"></p>\n<p>A trie (pronounced as “try”) or prefix tree is a tree data structure used to efficiently store and retrieve keys in a dataset of strings. There are various applications of this data structure, such as autocomplete and spellchecker.</p>\n<p>Implement the Trie class:</p>\n<p>Trie() Initializes the trie object.<br>void insert(String word) Inserts the string word into the trie.<br>boolean search(String word) Returns true if the string word is in the trie (i.e., was inserted before), and false otherwise.<br>boolean startsWith(String prefix) Returns true if there is a previously inserted string word that has the prefix prefix, and false otherwise.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input</span><br><span class=\"line\">[&quot;Trie&quot;, &quot;insert&quot;, &quot;search&quot;, &quot;search&quot;, &quot;startsWith&quot;, &quot;insert&quot;, &quot;search&quot;]</span><br><span class=\"line\">[[], [&quot;apple&quot;], [&quot;apple&quot;], [&quot;app&quot;], [&quot;app&quot;], [&quot;app&quot;], [&quot;app&quot;]]</span><br><span class=\"line\">Output</span><br><span class=\"line\">[null, null, true, false, true, null, true]</span><br><span class=\"line\"></span><br><span class=\"line\">Explanation</span><br><span class=\"line\">Trie trie &#x3D; new Trie();</span><br><span class=\"line\">trie.insert(&quot;apple&quot;);</span><br><span class=\"line\">trie.search(&quot;apple&quot;);   &#x2F;&#x2F; return True</span><br><span class=\"line\">trie.search(&quot;app&quot;);     &#x2F;&#x2F; return False</span><br><span class=\"line\">trie.startsWith(&quot;app&quot;); &#x2F;&#x2F; return True</span><br><span class=\"line\">trie.insert(&quot;app&quot;);</span><br><span class=\"line\">trie.search(&quot;app&quot;);     &#x2F;&#x2F; return True</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n\n<p>定一個資料結構，做新增，搜尋，刪除  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Trie:</span><br><span class=\"line\"></span><br><span class=\"line\">    def init(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        Initialize your data structure here.</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        self.tlist &#x3D; []</span><br><span class=\"line\"></span><br><span class=\"line\">    def insert(self, word: str) -&gt; None:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        Inserts a word into the trie.</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        self.tlist.append(word)</span><br><span class=\"line\"></span><br><span class=\"line\">    def search(self, word: str) -&gt; bool:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        Returns if the word is in the trie.</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        if word in self.tlist: return True</span><br><span class=\"line\">        else: return False</span><br><span class=\"line\"></span><br><span class=\"line\">    def startsWith(self, prefix: str) -&gt; bool:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        Returns if there is any word in the trie that starts with the given prefix.</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        for a in self.tlist:</span><br><span class=\"line\">            if a.startswith(prefix):</span><br><span class=\"line\">                return a</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Your Trie object will be instantiated and called as such:</span><br><span class=\"line\"># obj &#x3D; Trie()</span><br><span class=\"line\"># obj.insert(word)</span><br><span class=\"line\"># param_2 &#x3D; obj.search(word)</span><br><span class=\"line\"># param_3 &#x3D; obj.startsWith(prefix)</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"207. Course Schedule","url":"/interview/207/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(5).jpeg\"></p>\n<p>There are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [ai, bi] indicates that you must take course bi first if you want to take course ai.</p>\n<ul>\n<li>For example, the pair [0, 1], indicates that to take course 0 you have to first take course 1.</li>\n</ul>\n<p>Return true if you can finish all courses. Otherwise, return false.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: numCourses &#x3D; 2, prerequisites &#x3D; [[1,0]]</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: There are a total of 2 courses to take. </span><br><span class=\"line\">To take course 1 you should have finished course 0. So it is possible.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: numCourses &#x3D; 2, prerequisites &#x3D; [[1,0],[0,1]]</span><br><span class=\"line\">Output: false</span><br><span class=\"line\">Explanation: There are a total of 2 courses to take. </span><br><span class=\"line\">To take course 1 you should have finished course 0, and to take course 0 you should also have finished course 1. So it is impossible.</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>有向無環圖，ex2修課順序互相依賴，所以不可能，每次把依賴移除。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># T:O(nˆ2), S:O:(n)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -&gt; bool:</span><br><span class=\"line\">        n &#x3D; numCourses</span><br><span class=\"line\">        graph &#x3D; [[] for _ in range(n)]</span><br><span class=\"line\">        g &#x3D; [0] * n</span><br><span class=\"line\">        </span><br><span class=\"line\">        for v, u in prerequisites:</span><br><span class=\"line\">            print(v,u)</span><br><span class=\"line\">            graph[u].append(v)</span><br><span class=\"line\">            g[v] +&#x3D; 1</span><br><span class=\"line\">        S &#x3D; [ v for v in range(n) if g[v] &#x3D;&#x3D; 0]</span><br><span class=\"line\">        </span><br><span class=\"line\">        while S:</span><br><span class=\"line\">            u &#x3D; S.pop()</span><br><span class=\"line\">            for v in graph[u]:</span><br><span class=\"line\">                g[v] -&#x3D; 1</span><br><span class=\"line\">                if g[v] &#x3D;&#x3D; 0:</span><br><span class=\"line\">                    S.append(v)</span><br><span class=\"line\">        return not any(g)</span><br></pre></td></tr></table></figure>\n","categories":["面試"],"tags":["力扣"]},{"title":"Saving Grace","url":"/life/savingGrace/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(7).jpeg\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">In March 2020, people were encouraged to stay at home.</span><br><span class=\"line\"></span><br><span class=\"line\">We asked our friends to share their experiences of these strange and uncertain times.</span><br><span class=\"line\"></span><br><span class=\"line\">This is what they sent to us. </span><br><span class=\"line\"></span><br><span class=\"line\">- Kodaline</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/CGYa8KuoTqA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[A]</span><br><span class=\"line\">When you&#39;re out in the open</span><br><span class=\"line\">當你在外毫無防備</span><br><span class=\"line\">And you&#39;re tired of hopin&#39;</span><br><span class=\"line\">當你厭倦期盼</span><br><span class=\"line\">I&#39;ll be there in a moment</span><br><span class=\"line\">我將在那時出現</span><br><span class=\"line\">I&#39;ll be by your side</span><br><span class=\"line\">讓你依靠</span><br><span class=\"line\"> </span><br><span class=\"line\">[A]</span><br><span class=\"line\">When you&#39;re scared and you&#39;re lonely</span><br><span class=\"line\">當你隻身且恐懼</span><br><span class=\"line\">When there&#39;s no one to hold you</span><br><span class=\"line\">當沒人能緊抱著你</span><br><span class=\"line\">I just want you to know that</span><br><span class=\"line\">希望你能知道</span><br><span class=\"line\">I&#39;ll be by your side</span><br><span class=\"line\">我將在你身旁</span><br><span class=\"line\"> </span><br><span class=\"line\">[B] </span><br><span class=\"line\">You keep me strong when I can&#39;t carry on</span><br><span class=\"line\">你在我無助時給我依靠</span><br><span class=\"line\">When you lose your feet, fall down to your knees</span><br><span class=\"line\">當你堵上自身，向現實低頭</span><br><span class=\"line\">And your heart&#39;s about to break</span><br><span class=\"line\">瀕臨崩潰</span><br><span class=\"line\">I will be your saving grace</span><br><span class=\"line\">我將成為你的救贖</span><br><span class=\"line\">When your eyes can&#39;t see, take my eyes from me</span><br><span class=\"line\">當你看不見，還有我的靈魂之窗</span><br><span class=\"line\">When you&#39;re lost and losing faith</span><br><span class=\"line\">當你失去信念</span><br><span class=\"line\">I will be your saving grace</span><br><span class=\"line\">我會成為你的守護天使</span><br><span class=\"line\"> </span><br><span class=\"line\">[C] </span><br><span class=\"line\">Be my, be my, be my saving grace</span><br><span class=\"line\">成為我的救贖</span><br><span class=\"line\">Won&#39;t you be my, be my, be my saving grace</span><br><span class=\"line\">能否成為我的守護天使</span><br><span class=\"line\"> </span><br><span class=\"line\">[A] </span><br><span class=\"line\">When my heart&#39;s getting older</span><br><span class=\"line\">當內心逐漸麻木</span><br><span class=\"line\">And my body is breakin&#39; down</span><br><span class=\"line\">肉體破碎不堪</span><br><span class=\"line\">In my head yeah I know that I’ll be by your side</span><br><span class=\"line\">我永遠在你身旁</span><br><span class=\"line\">I don&#39;t know about the future</span><br><span class=\"line\">我無法預測下一秒會發生什麼</span><br><span class=\"line\">No one knows what the future holds</span><br><span class=\"line\">也沒人有把握</span><br><span class=\"line\">All I know is I know that I&#39;m giving you my life</span><br><span class=\"line\">但我會為你而存在</span><br><span class=\"line\"> </span><br><span class=\"line\">[B]</span><br><span class=\"line\">You keep me strong when I can&#39;t carry on</span><br><span class=\"line\">你在我無助時給我依靠</span><br><span class=\"line\">When you lose your feet, fall down to your knees</span><br><span class=\"line\">當你堵上自身，向現實低頭</span><br><span class=\"line\">And your heart&#39;s about to break</span><br><span class=\"line\">瀕臨崩潰</span><br><span class=\"line\">I will be your saving grace</span><br><span class=\"line\">我將成為你的救贖</span><br><span class=\"line\">When your eyes can&#39;t see, take my eyes from me</span><br><span class=\"line\">當你看不見，還有我的靈魂之窗</span><br><span class=\"line\">When you&#39;re lost and losing faith</span><br><span class=\"line\">當你失去信念</span><br><span class=\"line\">I will be your saving grace</span><br><span class=\"line\">我會給你力量</span><br><span class=\"line\"> </span><br><span class=\"line\">[C] </span><br><span class=\"line\">Be my, be my, be my saving grace</span><br><span class=\"line\">成為我的救贖</span><br><span class=\"line\">Won&#39;t you be my, be my, be my saving grace</span><br><span class=\"line\">能否成為我的守護天使</span><br><span class=\"line\">Won&#39;t you be my, be my, be my saving grace</span><br><span class=\"line\">能否成為我的救贖</span><br><span class=\"line\">Won&#39;t you</span><br><span class=\"line\">來吧</span><br><span class=\"line\">Be my saving grace</span><br><span class=\"line\">成為我的守護天使吧</span><br><span class=\"line\"> </span><br><span class=\"line\">[B]</span><br><span class=\"line\">You keep me strong when I can&#39;t carry on</span><br><span class=\"line\">你給我力量，引領我向前</span><br><span class=\"line\">Oh</span><br><span class=\"line\">喔</span><br><span class=\"line\">When you lose your feet, fall down to your knees</span><br><span class=\"line\">當你向現實低頭</span><br><span class=\"line\">And your heart&#39;s about to break</span><br><span class=\"line\">瀕臨崩潰</span><br><span class=\"line\">I will be your saving grace</span><br><span class=\"line\">我將成為你的救贖</span><br><span class=\"line\">When your eyes can&#39;t see, take my eyes from me</span><br><span class=\"line\">當你看不見，還有我的靈魂之窗</span><br><span class=\"line\">When you&#39;re lost and losing faith</span><br><span class=\"line\">當你失去信念</span><br><span class=\"line\">I will be your saving grace</span><br><span class=\"line\">我會給你力量</span><br><span class=\"line\"> </span><br><span class=\"line\">Be my, be my, be my saving grace</span><br><span class=\"line\">成為我的救贖</span><br><span class=\"line\">Won&#39;t you be my, be my, be my saving grace</span><br><span class=\"line\">能否成為我的守護天使</span><br><span class=\"line\"> </span><br><span class=\"line\">Won&#39;t you be my, be my, be my saving grace</span><br><span class=\"line\">成為救贖</span><br><span class=\"line\">Won&#39;t you be my, be my, be my saving grace</span><br><span class=\"line\">永遠守護</span><br></pre></td></tr></table></figure>\n\n<p>Saving Grace 是可取之處或救命之恩，蠻喜歡守護天使的翻譯。</p>\n<p>像Lady Gaga - The Cure或蕭煌奇你是我的眼，這首歌在說疫情雖然嚴峻，我們還是不能被擊倒，看到這麼多可愛的人們，大家是不是也燃起希望了呢？</p>\n","categories":["生活"],"tags":["音樂"]},{"title":"213. House Robber II","url":"/interview/213/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(8).jpeg\"></p>\n<p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, adjacent houses have a security system connected, and it will automatically contact the police if two adjacent houses were broken into on the same night.</p>\n<p>Given an integer array nums representing the amount of money of each house, return the maximum amount of money you can rob tonight without alerting the police.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [2,3,2]</span><br><span class=\"line\">Output: 3</span><br><span class=\"line\">Explanation: You cannot rob house 1 (money &#x3D; 2) and then rob house 3 (money &#x3D; 2), because they are adjacent houses.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [1,2,3,1]</span><br><span class=\"line\">Output: 4</span><br><span class=\"line\">Explanation: Rob house 1 (money &#x3D; 1) and then rob house 3 (money &#x3D; 3).</span><br><span class=\"line\">Total amount you can rob &#x3D; 1 + 3 &#x3D; 4.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [0]</span><br><span class=\"line\">Output: 0</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>I只要求第一戶不能連接，之後可以連著搶，II要求之後的也不能連續。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Solution:</span><br><span class=\"line\">    def rob(self, nums: List[int]) -&gt; int:</span><br><span class=\"line\">        if len(nums) &#x3D;&#x3D; 0: return 0</span><br><span class=\"line\">        if len(nums) &#x3D;&#x3D; 1: return nums[0]</span><br><span class=\"line\">        if len(nums) &#x3D;&#x3D; 2: return max(nums)</span><br><span class=\"line\">        </span><br><span class=\"line\">        def houseRobber(nums):</span><br><span class=\"line\">            dp &#x3D; [0]*len(nums)</span><br><span class=\"line\">            dp[0] &#x3D; nums[0]</span><br><span class=\"line\">            dp[1] &#x3D; max(nums[0], nums[1])</span><br><span class=\"line\">            for i in range(2, len(nums)):</span><br><span class=\"line\">                dp[i] &#x3D; max(dp[i-1], nums[i]+dp[i-2]) # no adjacent</span><br><span class=\"line\"></span><br><span class=\"line\">            return dp[-1]</span><br><span class=\"line\">        </span><br><span class=\"line\">        # [:-1] ignore last, [1:] ignore first</span><br><span class=\"line\">        return max(houseRobber(nums[:-1]), houseRobber(nums[1:]))</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"日語地圖","url":"/life/japanese/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(8).jpeg\"></p>\n<p>おれの財宝か？<br>欲しけりゃくれてやるぜ…<br>探してみろ<br>この世のすべてをそこに置いてきた  </p>\n<a id=\"more\"></a>\n\n<p>聽了這麼多日文歌，是時候好好研究一下島國的語言啦。<br>網路上有很多教學，相信大家都聽過，<a href=\"https://www.sigure.tw/learn-japanese/mix/unclassified/guide-to-self-studying-japanese.php\">時雨</a>，<a href=\"https://jp.sonic-learning.com/\">音速日語</a>，<a href=\"https://www.youtube.com/channel/UCDqWakN_owifqIBqyNjg6kg\">出口日語</a>，<a href=\"https://colanekojp.com.tw/\">王可樂日語</a>，<a href=\"https://www.youtube.com/channel/UCtHmW23JLdgA2wqu752VCLg\">虎斑貓</a>，每個都很好，從哪開始都沒關係，有興趣一直學都是一樣的。</p>\n<p>我的啟蒙是YT的華視日文，再搭配Drop App累積單字量，久了之後就慢慢看懂啦。</p>\n<p>但要學得好總要有個框架，這篇的目的就是把框架訂出來，而學一門語言是很大的課題，我想這個表會一直更新吧。</p>\n<h1 id=\"五十音\"><a href=\"#五十音\" class=\"headerlink\" title=\"五十音\"></a>五十音</h1><ul>\n<li>平假</li>\n<li>片假</li>\n<li>清音，濁音，半濁音，長音，促音，撥音，拗音，鼻音</li>\n<li><a href=\"https://youtu.be/2ZaZ-0rvSoE\">重音</a></li>\n</ul>\n<p><a href=\"https://www.youtube.com/watch?v=uKL_Ki5IbjI\">何必日語</a><br><a href=\"https://www.youtube.com/playlist?list=PLBIG81gr6PK8KD2pnpUgYvhnYQMsRRn6m\">虎斑貓</a><br><a href=\"https://www.sigure.tw/learn-japanese/basic/50/dakuon-youon-chouon-sokuon.php\">時雨</a></p>\n<h2 id=\"平片記憶方式\"><a href=\"#平片記憶方式\" class=\"headerlink\" title=\"平片記憶方式\"></a>平片記憶方式</h2><p>つ筆順由左至右ツ<br>し筆順由上至下シ<br>ん筆順由上至下ン<br>そ筆順由左至右ソ<br>れ看右下角勾勾レ  </p>\n<h1 id=\"名詞\"><a href=\"#名詞\" class=\"headerlink\" title=\"名詞\"></a>名詞</h1><p><a href=\"https://www.youtube.com/watch?v=-BrEta5xMUE\">旭文</a><br>Drop App<br>名詞です 動詞ます<br>名詞は名詞<br><a href=\"https://www.instagram.com/p/CQDiDJYH1SB/?utm_medium=copy_link\">助數詞</a><br><a href=\"https://finjapanlife.com/japanese-number/\">量詞</a></p>\n<h1 id=\"形容詞\"><a href=\"#形容詞\" class=\"headerlink\" title=\"形容詞\"></a>形容詞</h1><h2 id=\"い形容詞\"><a href=\"#い形容詞\" class=\"headerlink\" title=\"い形容詞\"></a>い形容詞</h2><p><a href=\"https://youtu.be/3RDPgSQcNKM\">井上老師</a><br><a href=\"https://youtu.be/LacnXa2iZBk\">旭文</a><br><a href=\"https://youtu.be/Sbg2VWhIbxc\">大介-い形容詞的「っ」</a><br><a href=\"https://www.sigure.tw/learn-japanese/grammar/n5/08.php\">時雨-形容詞終止形（て形）</a></p>\n<h2 id=\"な形容詞\"><a href=\"#な形容詞\" class=\"headerlink\" title=\"な形容詞\"></a>な形容詞</h2><p><a href=\"https://youtu.be/nQ-tbPa7_xc\">井上老師</a><br><a href=\"https://youtu.be/x1ddG3wJtjk\">旭文</a>  </p>\n<p><a href=\"https://youtu.be/yhtFAnoIh1k\">5大變化</a><br><a href=\"https://finjapanlife.com/japanese-adj/\">活用</a></p>\n<h1 id=\"格-助詞-日文關節\"><a href=\"#格-助詞-日文關節\" class=\"headerlink\" title=\"(格)助詞- 日文關節\"></a>(格)助詞- 日文關節</h1><p><a href=\"https://www.youtube.com/watch?v=wRXk5xy0oCc&list=PLBIG81gr6PK9vM5eZABkuuZPe_yqussJz&index=20\">はwa主詞  -AKIRA放送</a><br><a href=\"https://www.youtube.com/watch?v=Nh8ha9Auwc4&list=RDCMUCmQ8EDGXQXIdDUGN0Decm8w&index=12\">がna動作/狀態主詞  -AKIRA放送</a><br><a href=\"https://youtu.be/VAYfUpdmkZ8\">がna  -何必博士</a><br><a href=\"https://youtu.be/yKBo4Y58eDU\">は/が何時用  -何必博士</a><br><a href=\"https://www.youtube.com/watch?v=_z04R5qpm1s\">は/が何時用  -楊老師</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=KfuocfBm1lg\">た過去, 動作完成-  楊老師</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=MzgmH1wE7oI&list=RDCMUCmQ8EDGXQXIdDUGN0Decm8w&index=3\">を老李過瘦  -AKIRA放送</a><br><a href=\"https://youtu.be/nUemvp_E86U\">が強調前半, を強調後半</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=9CDu5Lpd52c\">に天地人事  -AKIRA放送</a><br><a href=\"https://www.youtube.com/watch?v=fekmHbXhkKs\">へ起點方向 -抓尼先生</a><br><a href=\"https://www.youtube.com/watch?v=F1PuJZlfzA8\">へ/に差異  -ナオチャンNaoChannel</a>  </p>\n<p><a href=\"https://www.youtube.com/watch?v=7PLcMA3SIAk&t=1s\">で原地犯法-  AKIRA放送</a>  </p>\n<p><a href=\"https://youtu.be/lmaQt5WcUcw\">と接續, 一起-  何必博士</a>  </p>\n<p><a href=\"https://www.youtube.com/watch?v=V9ahMMcraCM\">から從, 原因理由- 音速日語</a><br><a href=\"https://www.youtube.com/watch?v=2ZPqTcwQRx0\">まで到, 甚至- 玉チャンネルTAMA CHANN</a><br><a href=\"https://www.youtube.com/watch?v=IRd8Ln9CO1g\">より文書的から, 比較基準- 音速日語</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=Ph7rst5A43Y&list=RDCMUCmQ8EDGXQXIdDUGN0Decm8w&index=3\">も竟也都-  AKIRA放送</a>  </p>\n<p><a href=\"https://finjapanlife.com/how-to-use-no/\">の的之外的事- Wing的自學筆記</a></p>\n<p><a href=\"https://youtu.be/hrT2gOZLo54\">測驗</a></p>\n<p><a href=\"https://youtu.be/2pC0VYMPm1Y\">常見問題- 楊老師</a><br><a href=\"https://www.youtube.com/watch?v=aiHu5zrJW6k\">補充-  TKB</a></p>\n<h1 id=\"動詞\"><a href=\"#動詞\" class=\"headerlink\" title=\"動詞\"></a>動詞</h1><h2 id=\"三種分類\"><a href=\"#三種分類\" class=\"headerlink\" title=\"三種分類\"></a>三種分類</h2><p><a href=\"https://www.youtube.com/watch?v=7195zCymckQ\">動詞分類- 何必博士</a><br><a href=\"https://youtu.be/bHUUyfegNA4\">動詞分類- 時雨</a><br><a href=\"https://www.youtube.com/watch?v=jAGFTYJxo0o\">好記分類- 小獅子</a><br><a href=\"https://blog.amazingtalker.com/zh-tw/zh-jap/%E6%97%A5%E6%96%87%E5%8B%95%E8%A9%9E%E8%AE%8A%E5%8C%96%E6%95%99%E5%AD%B8/13609/\">動詞變化</a><br><a href=\"https://youtu.be/3_0r3nZL_MY\">五段</a><br><a href=\"https://youtu.be/xADV9ygZmk0\">上下段</a><br><a href=\"https://youtu.be/0Nn95Uhqt0I\">サ變、カ變</a>  </p>\n<h2 id=\"動詞變化\"><a href=\"#動詞變化\" class=\"headerlink\" title=\"動詞變化\"></a>動詞變化</h2><p><a href=\"https://m.youtube.com/watch?v=JH03auAJdAc\">音便- 時雨</a><br><a href=\"https://finjapanlife.com/japanese-verb-change/\">變化與音便- Ｗing的自學筆記</a><br><a href=\"https://www.colanekojp.com.tw/blogs/0/54\">各類變化- 王可樂</a><br><a href=\"https://youtu.be/-h_JJQ2PvH0\">被動態</a></p>\n<h2 id=\"て型\"><a href=\"#て型\" class=\"headerlink\" title=\"て型\"></a>て型</h2><p><a href=\"https://www.youtube.com/watch?v=ccUMqHDgZMs\">接續動作- 旭文</a><br><a href=\"https://www.youtube.com/watch?v=Y9tDJM6So5I\">變化法則-  旭文</a><br><a href=\"https://www.youtube.com/watch?v=1oMZFB80Awo\">文法-  旭文</a><br><a href=\"https://www.cocoro.idv.tw/1325\">知惠塾語文工作室-て型</a><br><a href=\"https://www.youtube.com/watch?v=ymJCrKO7fvs\">用法-  楊老師</a></p>\n<h2 id=\"自他動詞\"><a href=\"#自他動詞\" class=\"headerlink\" title=\"自他動詞\"></a>自他動詞</h2><p><a href=\"https://www.youtube.com/watch?v=EcG6SFZLriY\">動作焦點, 自が他を-  Uncle M</a><br><a href=\"https://finjapanlife.com/zi-verb-and-ta-verb-rules/\">分類法- Wing的自學筆記</a><br><a href=\"https://www.youtube.com/watch?v=114hRDTGCmg\">自他被動-  楊老師</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=YTW65UG0NyU\">形容詞與動詞整理-  楊老師</a></p>\n<h2 id=\"使役受身\"><a href=\"#使役受身\" class=\"headerlink\" title=\"使役受身\"></a>使役受身</h2><p><a href=\"https://m.youtube.com/watch?v=6aDppDJPSbk\">井上老師</a></p>\n<h1 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h1><p><a href=\"https://www.youtube.com/watch?v=eZqF6yR5QTc\">小獅子</a></p>\n<h1 id=\"關西腔\"><a href=\"#關西腔\" class=\"headerlink\" title=\"關西腔\"></a>關西腔</h1><p><a href=\"https://youtu.be/6Vgo9inBXCg\">井上老師</a></p>\n<h1 id=\"文法\"><a href=\"#文法\" class=\"headerlink\" title=\"文法\"></a>文法</h1><ul>\n<li><a href=\"https://www.youtube.com/c/deguchijapanese/playlists\">N5-N1 出口日語</a></li>\n<li><a href=\"https://www.sigure.tw/learn-japanese/grammar/n5/\">N5</a><ul>\n<li>基本句型</li>\n<li><a href=\"https://www.sigure.tw/learn-japanese/grammar/n5/00.php\">品詞</a></li>\n<li>辭書型, た型, て型, いな型</li>\n<li>名詞, 形容詞, 助詞, 動詞, 副詞, 助動詞 </li>\n<li>動詞變化(<a href=\"https://www.sigure.tw/learn-japanese/grammar/n5/18.php\">五段</a>，<a href=\"https://www.sigure.tw/learn-japanese/grammar/n5/19.php\">上下段</a>，<a href=\"https://www.sigure.tw/learn-japanese/grammar/n5/20.php\">カ行サ行</a>)</li>\n<li><a href=\"https://www.sigure.tw/learn-japanese/grammar/n5/21.php\">動詞音便</a></li>\n<li><a href=\"https://www.youtube.com/playlist?app=desktop&list=PLBIG81gr6PK9vM5eZABkuuZPe_yqussJz\">虎斑貓</a></li>\n<li><a href=\"https://www.youtube.com/playlist?list=PLzvvBBq1AJaEedLMiQHkNM4YBz_-RcnxR\">井上老師</a></li>\n</ul>\n</li>\n<li><a href=\"https://youtube.com/playlist?list=PLzvvBBq1AJaGoqYcMQyTH-o_qhpqCS62D\">N5-N4 語法</a></li>\n<li><a href=\"https://www.sigure.tw/learn-japanese/grammar/n4/\">N4</a><ul>\n<li>意志動詞</li>\n<li><a href=\"https://www.sigure.tw/learn-japanese/grammar/n5/24.php\">自他動詞</a> </li>\n</ul>\n</li>\n<li><a href=\"https://youtube.com/playlist?list=PLzvvBBq1AJaGgBTTLI5OfOp7ifSu-QSkU\">N4-N3 語法</a></li>\n<li><a href=\"https://www.sigure.tw/learn-japanese/grammar/n3/\">N3</a><ul>\n<li><a href=\"https://youtube.com/playlist?list=PLzvvBBq1AJaEASc2r-NZG9tr0D0AOSc7s\">井上老師</a></li>\n</ul>\n</li>\n<li><a href=\"https://www.youtube.com/watch?v=McYHMIrNraM&list=PLhN-jbLe4QCdx6ISqn2uQhCuic__KEVYs\">N2</a></li>\n<li><a href=\"https://youtube.com/playlist?list=PLzvvBBq1AJaFq-Y1trdJ2J4GMw2ndRC8m\">N2-N1 語法</a></li>\n<li><a href=\"https://www.youtube.com/playlist?list=PLynCeSdpMqxCBtZzRikWkdbRGS9csjDYT\">N1</a><ul>\n<li><a href=\"https://youtube.com/playlist?list=PLzvvBBq1AJaHU0RAe8-7_kQP4G14bgtsJ\">井上老師</a></li>\n</ul>\n</li>\n</ul>\n<p>希望我們都能通過這份地圖找到我們要的寶藏。 </p>\n","categories":["生活"],"tags":["語言"]},{"title":"230. Kth Smallest Element in a BST","url":"/interview/230/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(11).jpeg\"></p>\n<p>Given the root of a binary search tree, and an integer k, return the kth (1-indexed) smallest element in the tree.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [3,1,4,null,2], k &#x3D; 1</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [5,3,6,2,4,null,null,1], k &#x3D; 3</span><br><span class=\"line\">Output: 3</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>inorder讓數列保持大小順序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Definition for a binary tree node.</span><br><span class=\"line\"># class TreeNode:</span><br><span class=\"line\">#     def init(self, val&#x3D;0, left&#x3D;None, right&#x3D;None):</span><br><span class=\"line\">#         self.val &#x3D; val</span><br><span class=\"line\">#         self.left &#x3D; left</span><br><span class=\"line\">#         self.right &#x3D; right</span><br><span class=\"line\"></span><br><span class=\"line\">T:O(n), S:O(n), inorder sorted </span><br><span class=\"line\"></span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def kthSmallest(self, root: TreeNode, k: int) -&gt; int:</span><br><span class=\"line\">        ans &#x3D; []</span><br><span class=\"line\">        if not root: return</span><br><span class=\"line\">        </span><br><span class=\"line\">        def inorder(node):</span><br><span class=\"line\">            if not node or len(ans) &#x3D;&#x3D; k: return </span><br><span class=\"line\">            </span><br><span class=\"line\">            inorder(node.left)</span><br><span class=\"line\">            if len(ans)&lt;k:</span><br><span class=\"line\">                ans.append(node.val)</span><br><span class=\"line\">                inorder(node.right)</span><br><span class=\"line\">            else: return</span><br><span class=\"line\">        </span><br><span class=\"line\">        inorder(root)</span><br><span class=\"line\">        return ans[-1]</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"226. Invert Binary Tree","url":"/interview/226/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(10).jpeg\"></p>\n<p>Given the root of a binary tree, invert the tree, and return its root.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [4,2,7,1,3,6,9]</span><br><span class=\"line\">Output: [4,7,2,9,6,3,1]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [2,1,3]</span><br><span class=\"line\">Output: [2,3,1]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; []</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>遞迴反轉</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T:O(2ˆn) S:O(n)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def invertTree(self, root: TreeNode) -&gt; TreeNode:</span><br><span class=\"line\">        if not root: return None       </span><br><span class=\"line\">        root.left, root.right &#x3D; self.invertTree(root.right), self.invertTree(root.left)</span><br><span class=\"line\">        return root</span><br></pre></td></tr></table></figure>\n","categories":["面試"],"tags":["力扣"]},{"title":"電影片單","url":"/life/movie/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(9).jpeg\"></p>\n<p>可能WFH了好一陣子，下班後喜歡看些電影，這邊紀錄些我看過喜歡的，如果大家有推薦也請留言跟我說喔。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"電影類\"><a href=\"#電影類\" class=\"headerlink\" title=\"電影類\"></a>電影類</h1><p><strong>懸疑驚悚</strong><br>2017 模犯生<br>2016  屍速列車<br>2014 控制<br>2010 冰冷熱帶魚  </p>\n<p><strong>溫馨感人</strong><br>2019 陽光普照<br>2019 7號房的奇蹟<br>2019 加油吧李先生<br>2019 完美搭擋<br>2018 我的嗝嗝老師<br>2017 可可夜總會<br>2017 花漾奶奶<br>2015 全家玩到趴<br>2013 偉大的隱藏者<br>2001  我的野蠻女友<br>2006 令人討厭的松子的一生 </p>\n<p><strong>浪漫夢幻</strong><br>2018 瘋狂亞洲富豪<br>2015 我的少女時代<br>2013 曼哈頓戀習曲<br>2013 玉子市場   </p>\n<p><strong>實用科幻</strong><br>2019 錢力遊戲<br>2019 陪審團們<br>2001 A.I.人工智慧  </p>\n<h1 id=\"動畫類\"><a href=\"#動畫類\" class=\"headerlink\" title=\"動畫類\"></a>動畫類</h1><p><strong>懸疑驚悚</strong><br>2011 魔法少女小圓<br>2006 未來日記</p>\n<p><strong>溫馨感人</strong><br>2011 未聞花名<br>2009 命運石之門<br>2005 夏目友人帳    </p>\n<p><strong>實用科幻</strong><br>2021 Dr.STONE 新石紀</p>\n<h1 id=\"戲劇類\"><a href=\"#戲劇類\" class=\"headerlink\" title=\"戲劇類\"></a>戲劇類</h1><p><strong>懸疑驚悚</strong><br>2021 魷魚遊戲<br>2011 後宮甄嬛傳<br>2008 絕命毒師  </p>\n<p><strong>溫馨感人</strong><br>2009 仁醫</p>\n<p><strong>實用科幻</strong><br>2016 男扮女裝家政婦</p>\n","categories":["生活"],"tags":["回憶"]},{"title":"235. Lowest Common Ancestor of a Binary Search Tree","url":"/interview/235/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(12).jpeg\"></p>\n<p>Given a binary search tree (BST), find the lowest common ancestor (LCA) of two given nodes in the BST.</p>\n<p>According to the definition of LCA on Wikipedia: “The lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow a node to be a descendant of itself).”</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [6,2,8,0,4,7,9,null,null,3,5], p &#x3D; 2, q &#x3D; 8</span><br><span class=\"line\">Output: 6</span><br><span class=\"line\">Explanation: The LCA of nodes 2 and 8 is 6.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [6,2,8,0,4,7,9,null,null,3,5], p &#x3D; 2, q &#x3D; 4</span><br><span class=\"line\">Output: 2</span><br><span class=\"line\">Explanation: The LCA of nodes 2 and 4 is 2, since a node can be a descendant of itself according to the LCA definition.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root &#x3D; [2,1], p &#x3D; 2, q &#x3D; 1</span><br><span class=\"line\">Output: 2</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>lowest common ancestor (LCA)找節點共同祖先，確認順序後找root</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Definition for a binary tree node.</span><br><span class=\"line\"># class TreeNode:</span><br><span class=\"line\">#     def init(self, x):</span><br><span class=\"line\">#         self.val &#x3D; x</span><br><span class=\"line\">#         self.left &#x3D; None</span><br><span class=\"line\">#         self.right &#x3D; None</span><br><span class=\"line\">T:O(n), S:O(1)</span><br><span class=\"line\">class Solution:</span><br><span class=\"line\">    def lowestCommonAncestor(self, root: &#39;TreeNode&#39;, p: &#39;TreeNode&#39;, q: &#39;TreeNode&#39;) -&gt; &#39;TreeNode&#39;:</span><br><span class=\"line\">        if q.val &lt; p.val: p,q &#x3D; q,p # p must small than q</span><br><span class=\"line\">        while True:</span><br><span class=\"line\">            if q.val &lt; root.val:</span><br><span class=\"line\">                root &#x3D; root.left</span><br><span class=\"line\">            elif p.val &gt; root.val:</span><br><span class=\"line\">                root &#x3D; root.right</span><br><span class=\"line\">            elif p.val &lt;&#x3D; root.val &lt;&#x3D; q.val:</span><br><span class=\"line\">                return root</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"238. Product of Array Except Self","url":"/interview/238/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(13).jpeg\"></p>\n<p>Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].</p>\n<p>The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</p>\n<p>You must write an algorithm that runs in O(n) time and without using the division operation.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [1,2,3,4]</span><br><span class=\"line\">Output: [24,12,8,6]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [-1,1,0,-3,3]</span><br><span class=\"line\">Output: [0,0,9,0,0]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>題目不能用除法，只要先算出向右跟向左2個array相乘即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T:O(n), S:O(n)</span><br><span class=\"line\">class Solution(object):</span><br><span class=\"line\">    def productExceptSelf(self, nums):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        :type nums: List[int]</span><br><span class=\"line\">        :rtype: List[int]</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        n &#x3D; len(nums)</span><br><span class=\"line\">        temp &#x3D; 1</span><br><span class=\"line\">        res &#x3D; [0 for i in range(n)]</span><br><span class=\"line\">        res[0] &#x3D; 1</span><br><span class=\"line\">        for i in range(1, n):</span><br><span class=\"line\">            res[i] &#x3D; res[i-1]*nums[i-1]</span><br><span class=\"line\">        for i in range(n-2,-1,-1):</span><br><span class=\"line\">            temp*&#x3D;nums[i+1]</span><br><span class=\"line\">            res[i] *&#x3D;temp</span><br><span class=\"line\">        return res</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://leetcode.com/problems/product-of-array-except-self/discuss/658204/%22Intutive%22-explanation-saying-what-matters-(Super-easy-code)\">ref</a></p>\n","categories":["面試"],"tags":["力扣"]},{"title":"252. Meeting Rooms","url":"/interview/252/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(13).jpeg\"></p>\n<p>Given an array of meeting time intervals consisting of start and end times [[s1,e1],[s2,e2],…] (si &lt; ei), determine if a person could attend all meetings.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [[0,30],[5,10],[15,20]]</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [[7,10],[2,4]]</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>依區間結尾排序，看區間有無重疊，上個時間結尾如果超出下個開始就給false</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T:O(n), S:O(1)</span><br><span class=\"line\">class Solution(object):</span><br><span class=\"line\">    def canAttendMeetings(self, intervals):</span><br><span class=\"line\">        intervals.sort(key&#x3D;lambda itv: (itv.start, itv.end))</span><br><span class=\"line\">        for i in range(1, len(intervals)):</span><br><span class=\"line\">            if intervals[i].start &lt; intervals[i - 1].end:</span><br><span class=\"line\">                return False</span><br><span class=\"line\">        return True</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"253. Meeting Rooms II","url":"/interview/253/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(17).jpeg\"></p>\n<p>Given an array of meeting time intervals consisting of start and end times [[s1,e1],[s2,e2],…] (si &lt; ei), find the minimum number of conference rooms required.</p>\n<p>Example 1</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [[0, 30],[5, 10],[15, 20]]</span><br><span class=\"line\">Output: 2</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: [[7,10],[2,4]]</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>I是看區間有無重疊，II是看需要幾間會議室，訂一個heap紀錄沒有重疊的結束時間，再看個數決定需要幾間。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T:O(nˆ2), S:O(n)</span><br><span class=\"line\">from heapq import heappush, heappop</span><br><span class=\"line\"></span><br><span class=\"line\">class Solution(object):</span><br><span class=\"line\">    def minMeetingRooms(self, intervals):</span><br><span class=\"line\">        SI &#x3D; sorted(intervals, key&#x3D;lambda it: (it.start, it.end))  # sorted intervals</span><br><span class=\"line\"></span><br><span class=\"line\">        ret &#x3D; 0</span><br><span class=\"line\">        heap &#x3D; []  # contains end times</span><br><span class=\"line\"></span><br><span class=\"line\">        for it in SI:</span><br><span class=\"line\">            start, end &#x3D; it.start, it.end</span><br><span class=\"line\">            while heap and heap[0] &lt;&#x3D; start:</span><br><span class=\"line\">                heappop(heap)</span><br><span class=\"line\">            heappush(heap, end)</span><br><span class=\"line\">            ret &#x3D; max(ret, len(heap))</span><br><span class=\"line\">        return ret</span><br></pre></td></tr></table></figure>\n","categories":["面試"],"tags":["力扣"]},{"title":"英文補全","url":"/life/english/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(18).jpeg\"></p>\n<p>我們進行了<a href=\"https://eric999j.github.io/engineer/nativeLanguage/\">第二母語計畫</a>，也讀了<a href=\"https://eric999j.github.io/tags/TechnicalWriting/\">科技英文</a>，下一步呢？</p>\n<a id=\"more\"></a>\n\n<p>自從在yt看到<a href=\"https://www.youtube.com/channel/UCzSDYsBLs6EIHcQyO70Agxg\">英語兔</a>就發覺這正是我要的。  </p>\n<p>對英文的策略注重生活應用跟知識點補全，不像日語是興趣導向，這邊除了知道欠缺，還要深入，所以這份文件會像讀書筆記的形式，下次在Tandem跟阿豆阿聊天就能更順暢啦。</p>\n<h1 id=\"謂語動詞\"><a href=\"#謂語動詞\" class=\"headerlink\" title=\"謂語動詞\"></a>謂語動詞</h1><ul>\n<li>Tense: 4種時間：過去 過去將來（過去時間點的將來） 現在 將來  </li>\n<li>Aspect: 4種狀態：進行 完成 完成進行（完成了，之後還會繼續） 一般  </li>\n<li>Mood: 情感, 語調  <ul>\n<li>陳述 The rabbit ate the carrot.  </li>\n<li>祈使 Rabbit, eat the carrot.  </li>\n<li>虛擬<br>現在相反：條件：過去，主句： would+動詞原型<br>if I saw the rabbit now, I would bite him. (跟現在事實相反, 虛擬語氣可能小，都用should, would…）<br>將來相反：條件：should+動詞原型，主句：would+動詞原型<br>If I should see the rabbit, I would bite him. (跟將來事實相反，可能性小，不能用will)<br>過去相反：條件：had+動詞過去分詞，主句：would have+動詞過去分詞<br>If I had seen the rabbit a few days ago, I would have bitten him. (跟過去相反，要改過去完成）</li>\n<li>希望<br>I would rather that you hadn’t eaten the carrot.(希望你之前沒吃胡蘿蔔）</li>\n<li>請求<br>I demand/suggested/insisted/ordered that you give me a carrot.</li>\n<li>疑問</li>\n<li>條件</li>\n<li>感嘆</li>\n</ul>\n</li>\n</ul>\n<p>Tense 4* Aspect 4= <a href=\"https://www.yingyutu.com/tense\">16個時態</a></p>\n<p>一個句子只能有一個謂語動詞，其他要改非謂語，或拆成2句。  </p>\n<p>The rabbit [eats] carrots.<br>The rabbit [ate] carrots.<br>The rabbit [is eating] carrots.<br>The rabbit [has eaten] carrots.  </p>\n<h1 id=\"非謂語動詞\"><a href=\"#非謂語動詞\" class=\"headerlink\" title=\"非謂語動詞\"></a>非謂語動詞</h1><p>一般動詞要當非謂語動詞要改以下其一:  </p>\n<ul>\n<li><p>不定詞 to eat<br>To eat a carrot every day is good for the rabbit.<br>或<br>It is good for a rabbit to eat a carrot every day. </p>\n</li>\n<li><p>現在分詞 eating<br>(be+現在分詞，不一定現在，表示主動進行）<br>Eating everything, I survived.<br>The rabbit is eating.  </p>\n<ul>\n<li>當形容詞 a moving car.  </li>\n<li>補語 I saw Mary dancing in the room.  </li>\n</ul>\n</li>\n<li><p>過去分詞 eaten<br>(不能表示時間，表示被動完成）<br>會搭配 has / have / had 形成「完成式」<br>This is a half-eaten carrot.<br>The rabbit has eaten.  </p>\n<ul>\n<li><p>形容詞 A moved car.  </p>\n</li>\n<li><p>完成式  </p>\n<blockquote>\n<p>He has made a cake.<br>他已經做了一個蛋糕 （現在完成式）<br>We have made a cake.<br>我們已經做了一個蛋糕 （現在完成式）<br>He had made a cake.<br>他之前已經做了一個蛋糕（過去完成式）  </p>\n</blockquote>\n</li>\n<li><p>片語<br>The cake made by Jack is on the table.  </p>\n</li>\n</ul>\n</li>\n<li><p>動名詞 eating<br>(動詞+ing, 動詞當名詞用）<br>Eating carrots is healthy.<br>The rabbit is eating.  </p>\n</li>\n</ul>\n<h1 id=\"主謂一致\"><a href=\"#主謂一致\" class=\"headerlink\" title=\"主謂一致\"></a>主謂一致</h1><ul>\n<li><p>語法一致  </p>\n<blockquote>\n<p>謂語動詞are跟名詞carrots單複一致<br>Carrots are delicious.<br>非謂語動詞當主語相當於單數名詞<br>To eat a carrot is good for the rabbit.<br>複數主語用複數動詞（但不一定，要看主語意義）<br>The rabbit and wolf are at the party.<br>假象主語<br>as well as/except/but要用單數動詞<br>The rabbit (as well as other animals) gets a carrot.<br>不定代詞做主語看單複數<br>“Everyone” gets “a” carrot.  </p>\n</blockquote>\n</li>\n<li><p>意義一致</p>\n<blockquote>\n<p>主語意義跟謂語動詞一致<br>Ten years is a long time.<br>不定代詞要看意義決定單複<br>All(看代表什麼）is/are quite.<br>看意義決定<br>The cattle are on the hill.<br>單複同型皆可<br>The sheep are eating gress.<br>集合看強調什麼<br>The rabbit’s family [is huge/are at home.]<br>[All the furniture] is expensive.<br>The+ 形容詞看句子決定單複<br>The young are expected to learn from the old.<br>The new is going to replace the old.  </p>\n</blockquote>\n</li>\n<li><p>就近一致</p>\n<blockquote>\n<p>or/either or/neither nor/not only but also要就近<br>Either you or I “am” going to the party.<br>There is “a carrot” and “two apples” on the table.  </p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"分詞構句\"><a href=\"#分詞構句\" class=\"headerlink\" title=\"分詞構句\"></a>分詞構句</h1><ul>\n<li>分詞的功能很多樣，除了用來形成「時態」，也可以用來形成「被動語態」，也可以當「形容詞」修飾人事物，還可以用來簡化句子，也就是文法老師常說的「分詞構句」。  </li>\n<li>主詞要一致，口語常用。<br>I sat down, turning on the computer.  </li>\n</ul>\n<h1 id=\"句子：主語-謂語\"><a href=\"#句子：主語-謂語\" class=\"headerlink\" title=\"句子：主語+謂語\"></a>句子：主語+謂語</h1><p>最基本句子是簡單句<br>動詞有謂語動詞與非謂語動詞  </p>\n<h2 id=\"5大句型\"><a href=\"#5大句型\" class=\"headerlink\" title=\"5大句型\"></a>5大句型</h2><ol>\n<li>主語＋不及物動詞（無賓語）<br>Papa Rabbit sleeps.</li>\n<li>主語＋單及物動詞＋賓語<br>Papa Rabbit likes you.</li>\n<li>主語＋雙及物動詞＋間接賓語（可省略）＋ 直接賓語<br>Papa Rabbit teaches you English.</li>\n<li>主語＋複雜及物動詞（需要賓語）＋ 賓語 ＋補語（不可省）<br>Papa Rabbit considers you smart.</li>\n<li>繫動詞（後者主語補語賦予前者）<br>Papa rabbit looks(賦予）tail.</li>\n</ol>\n<h1 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h1><p><a href=\"https://youtu.be/is7vn5URVcc\">英文架構- 英語兔</a><br><a href=\"https://english.cool/participles/\">英文庫</a><br><a href=\"http://www.taiwantestcentral.com/grammar/Title.aspx?ID=304\">台灣測驗中心</a></p>\n","categories":["生活"],"tags":["語言"]},{"title":"300. Longest Increasing Subsequence","url":"/interview/300/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(15).jpeg\"></p>\n<p>Given an integer array nums, return the length of the longest strictly increasing subsequence.</p>\n<p>A subsequence is a sequence that can be derived from an array by deleting some or no elements without changing the order of the remaining elements. For example, [3,6,2,7] is a subsequence of the array [0,3,1,6,2,2,7].</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [10,9,2,5,3,7,101,18]</span><br><span class=\"line\">Output: 4</span><br><span class=\"line\">Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [0,1,0,3,2,3]</span><br><span class=\"line\">Output: 4</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [7,7,7,7,7,7,7]</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>遞增子序列，用貪心策略，在排序好的列中，bisect_left保證數據插入後一直是排序好的，而這種將數據成堆排序方法叫耐心排序。</p>\n<p>[10,9,2,5,3,7,101,18]<br>[]<br>[10]<br>[9]<br>[2]<br>[2, 5]<br>[2, 3]<br>[2, 3, 7]<br>[2, 3, 7, 101]  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T:O(nlogn), S:O(n)</span><br><span class=\"line\">class Solution(object):</span><br><span class=\"line\">    def lengthOfLIS(self, nums):</span><br><span class=\"line\">        res &#x3D; []</span><br><span class=\"line\"></span><br><span class=\"line\">        for num in nums:</span><br><span class=\"line\">            print(res)</span><br><span class=\"line\">            if not res or num &gt; res[-1]:</span><br><span class=\"line\">                res.append(num)</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                idx &#x3D; bisect.bisect_left(res,num)</span><br><span class=\"line\">                res[idx] &#x3D; num</span><br><span class=\"line\"></span><br><span class=\"line\">        return len(res)</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://leetcode.com/problems/longest-increasing-subsequence/discuss/867378/Python%3A-Patience-sort-(n-log-n)-99.24\">ref</a><br><a href=\"https://www.youtube.com/watch?v=22s1xxRvy28\">yt</a><br><a href=\"https://docs.python.org/zh-tw/3/library/bisect.html\">lib</a></p>\n","categories":["面試"],"tags":["力扣"]},{"title":"338. Counting Bits","url":"/interview/338/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(20).jpeg\"></p>\n<p>Given an integer n, return an array ans of length n + 1 such that for each i (0 &lt;= i &lt;= n), ans[i] is the number of 1’s in the binary representation of i.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 2</span><br><span class=\"line\">Output: [0,1,1]</span><br><span class=\"line\">Explanation:</span><br><span class=\"line\">0 --&gt; 0</span><br><span class=\"line\">1 --&gt; 1</span><br><span class=\"line\">2 --&gt; 10</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n &#x3D; 5</span><br><span class=\"line\">Output: [0,1,1,2,1,2]</span><br><span class=\"line\">Explanation:</span><br><span class=\"line\">0 --&gt; 0</span><br><span class=\"line\">1 --&gt; 1</span><br><span class=\"line\">2 --&gt; 10</span><br><span class=\"line\">3 --&gt; 11</span><br><span class=\"line\">4 --&gt; 100</span><br><span class=\"line\">5 --&gt; 101</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n\n<p>轉二進位後算1個數  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T:O(nlogn), S:O(1)</span><br><span class=\"line\">class Solution(object):</span><br><span class=\"line\">    def countBits(self, num):</span><br><span class=\"line\">        return [bin(x).count(&#39;1&#39;) for x in range(num+1)]</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"愛を知るまでは","url":"/life/dream/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(23).jpeg\"></p>\n<p>前幾天多年老友傳來這首歌，雖然接下來一個月目標不在這，但還不錯聽，就抓來研究一下。</p>\n<a id=\"more\"></a>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/iytiWFxt09w\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[A]</span><br><span class=\"line\">いざ 手のなる方へと # いざ： 來吧</span><br><span class=\"line\">導いたのは 誰でもない自分自身なのに</span><br><span class=\"line\">自信がないよ 笑っちゃうな</span><br><span class=\"line\">もたついている</span><br><span class=\"line\">空気が抜けたままの身体</span><br><span class=\"line\"></span><br><span class=\"line\">[A]</span><br><span class=\"line\">走れど走れど続く</span><br><span class=\"line\">人生という名の死ぬまでのエピソードは # エピソード : episode</span><br><span class=\"line\">軽いままの身体では</span><br><span class=\"line\">吹き飛ばされて</span><br><span class=\"line\">すぐに終わってしまうな</span><br><span class=\"line\"></span><br><span class=\"line\">[B]</span><br><span class=\"line\">あー 誰にもないものを持っていたいのになぁ</span><br><span class=\"line\">無理矢理に抱きしめてた # 無理矢理 : 硬逼，勉強</span><br><span class=\"line\">心を今解いて yeah</span><br><span class=\"line\"></span><br><span class=\"line\">[C]</span><br><span class=\"line\">優しい心を持ちたいのだけれど</span><br><span class=\"line\">時にはがむしゃらに怒って # がむしゃら : 魯莽</span><br><span class=\"line\">涙は真に受け止める</span><br><span class=\"line\"></span><br><span class=\"line\">[C]</span><br><span class=\"line\">愛を知るまでは死ねない私なのだ!</span><br><span class=\"line\">導かれた運命辿って # 辿って：跟隨</span><br><span class=\"line\">今日も明日も生きて行こう</span><br><span class=\"line\"></span><br><span class=\"line\">[A]</span><br><span class=\"line\">目の前に見えた星は</span><br><span class=\"line\">幾千年の輝きを失いそう</span><br><span class=\"line\">夢で終わる夢ならば</span><br><span class=\"line\">見なくていいと 自分に言い聞かせた</span><br><span class=\"line\"></span><br><span class=\"line\">[B]</span><br><span class=\"line\">あー まだ咲ききれない</span><br><span class=\"line\">花のような毎日だなぁ</span><br><span class=\"line\">無茶苦茶に走り続けた # 無茶苦茶 : 沒道理</span><br><span class=\"line\">身体を今休めて yeah</span><br><span class=\"line\"></span><br><span class=\"line\">[C]</span><br><span class=\"line\">交わることのない誰かと巡り合い</span><br><span class=\"line\">無限に広がる雲に乗って</span><br><span class=\"line\">見たことのない虹を見たい</span><br><span class=\"line\"></span><br><span class=\"line\">[C]</span><br><span class=\"line\">愛を知るまでは死ねない私なのだ!</span><br><span class=\"line\">導かれる運命頼って</span><br><span class=\"line\">今日も明日も生きて行こう</span><br><span class=\"line\"></span><br><span class=\"line\">[B]</span><br><span class=\"line\">あー 誰にもないものを持っていたいのになぁ</span><br><span class=\"line\">無理矢理に抱きしめてた</span><br><span class=\"line\">心を今解いて yeah</span><br><span class=\"line\"></span><br><span class=\"line\">[C]</span><br><span class=\"line\">優しい心を持ちたいのだけれど</span><br><span class=\"line\">時にはがむしゃらに怒って</span><br><span class=\"line\">涙は真に受け止める yeah</span><br><span class=\"line\"></span><br><span class=\"line\">[C]</span><br><span class=\"line\">愛を知るまでは死ねない私なのだ!</span><br><span class=\"line\">導かれた運命辿って</span><br><span class=\"line\">今日も明日も生きて行こう</span><br><span class=\"line\">-----------------</span><br><span class=\"line\">來吧，朝掌聲方向前去</span><br><span class=\"line\">明明是自己嚮往的</span><br><span class=\"line\">卻缺乏自信，真可笑啊</span><br><span class=\"line\">身體像洩了氣的皮球</span><br><span class=\"line\"></span><br><span class=\"line\">不斷奔跑的演著</span><br><span class=\"line\">死前人生這齣戲</span><br><span class=\"line\">憑這柔弱的身軀</span><br><span class=\"line\">最終還是抵擋不住吧</span><br><span class=\"line\"></span><br><span class=\"line\">啊，想要自己才能擁有的東西</span><br><span class=\"line\">勉強抱在心頭的，現在可以放下了</span><br><span class=\"line\"></span><br><span class=\"line\">雖然想有顆溫柔的心</span><br><span class=\"line\">卻常因憤怒變得魯莽而落淚</span><br><span class=\"line\"></span><br><span class=\"line\">在懂愛前我想我是不能死的</span><br><span class=\"line\">那就跟隨命運指引，活下去吧</span><br><span class=\"line\"></span><br><span class=\"line\">眼前的星星</span><br><span class=\"line\">就快失去持續千年的光輝了</span><br><span class=\"line\">若夢想只是一場夢</span><br><span class=\"line\">就跟自己說別做夢了吧</span><br><span class=\"line\"></span><br><span class=\"line\">啊，每天都像開不完的花</span><br><span class=\"line\">漫無目的奔走，也該好好休息一下了吧</span><br><span class=\"line\"></span><br><span class=\"line\">想邂逅不曾交集的誰</span><br><span class=\"line\">乘坐廣闊無邊的雲，遇見未曾看見的彩虹</span><br><span class=\"line\"></span><br><span class=\"line\">在懂愛前我想我是不能死的</span><br><span class=\"line\">那就跟隨命運指引，活下去吧</span><br><span class=\"line\"></span><br><span class=\"line\">啊，想要自己才能擁有的東西</span><br><span class=\"line\">勉強抱在心頭的，現在可以放下了</span><br><span class=\"line\"></span><br><span class=\"line\">雖然想有顆溫柔的心</span><br><span class=\"line\">卻常因憤怒變得魯莽而落淚</span><br><span class=\"line\"></span><br><span class=\"line\">在懂愛前我想我是不能死的</span><br><span class=\"line\">那就跟隨命運指引，活下去吧</span><br></pre></td></tr></table></figure>\n\n<p>在完成未完成的夢想之前，總會感到悲傷，覺得氣餒，但還是要懷抱希望，當發覺夢想將成空，就需要重新審視自己的做法，回歸現實，只要堅持下去，總會看見彩虹。</p>\n<h3 id=\"Shvara要求的學習資源：\"><a href=\"#Shvara要求的學習資源：\" class=\"headerlink\" title=\"Shvara要求的學習資源：\"></a>Shvara要求的學習資源：</h3><ul>\n<li>1: <a href=\"https://nihongonosensei.net/?p=19905\">とされている</a>  </li>\n</ul>\n","categories":["生活"],"tags":["音樂"]},{"title":"347. Top K Frequent Elements","url":"/interview/347/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(21).jpeg\"></p>\n<p>Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [1,1,1,2,2,3], k &#x3D; 2</span><br><span class=\"line\">Output: [1,2]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums &#x3D; [1], k &#x3D; 1</span><br><span class=\"line\">Output: [1]</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n<p>找list中個數k的數值，可以用python Counter.most_common，裡面是heapq.nlargest，所以時間複雜度是nlogn，找出符合各數的數字放進ret回傳。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T:O(nlogn), S:O(n)</span><br><span class=\"line\">from collections import Counter</span><br><span class=\"line\">class Solution(object):</span><br><span class=\"line\">    def topKFrequent(self, nums, k):</span><br><span class=\"line\">        if k &#x3D;&#x3D; len(nums):return nums </span><br><span class=\"line\">        count &#x3D; Counter(nums).most_common(k) # (數字, 個數)</span><br><span class=\"line\">        ret &#x3D; []</span><br><span class=\"line\">        for x,y in count:</span><br><span class=\"line\">            ret.append(x)</span><br><span class=\"line\">        return ret</span><br><span class=\"line\">或直接</span><br><span class=\"line\">return [x for x, y in collections.Counter(nums).most_common(k)]</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"371. Sum of Two Integers","url":"/interview/371/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(22).jpeg\"></p>\n<p>Given two integers a and b, return the sum of the two integers without using the operators + and -.</p>\n<p>Example 1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: a &#x3D; 1, b &#x3D; 2</span><br><span class=\"line\">Output: 3</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: a &#x3D; 2, b &#x3D; 3</span><br><span class=\"line\">Output: 5</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>不用+ 做加法，那用Sum看看，雖然有過，但題目中級，下次做應該要更深入，另外int是不能用sum加，要轉列表。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">T:O(n), S:O(1)</span><br><span class=\"line\">class Solution(object):</span><br><span class=\"line\">    def getSum(self, a, b):</span><br><span class=\"line\">        return sum([a,b])</span><br></pre></td></tr></table></figure>","categories":["面試"],"tags":["力扣"]},{"title":"程式語言","url":"/life/programmingLanguage/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(19).jpeg\"></p>\n<p>為了因應近期的新目標，以往的工作與興趣文章將整合，這種不向前兼容的改動在git上應該稱為硬分岔吧，但熊生就是需要破壞式創新啊（掩。</p>\n<a id=\"more\"></a>\n\n<p>接下來將進行為期一個月的程式文章，但不像以前做過的<a href=\"https://ithelp.ithome.com.tw/users/20114906/ironman/2153\">30天挑戰</a>，我會不斷更新這張表。</p>\n<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><ul>\n<li>統計字數</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">import collections</span><br><span class=\"line\">C &#x3D; collections.Counter()</span><br><span class=\"line\">s&#x3D;&quot;AABBABC&quot;</span><br><span class=\"line\">for i,v in enumerate(s):</span><br><span class=\"line\">    C[v]+&#x3D;1</span><br><span class=\"line\">print(C)</span><br></pre></td></tr></table></figure>\n<h1 id=\"Big-O\"><a href=\"#Big-O\" class=\"headerlink\" title=\"Big O\"></a>Big O</h1><p>完成某事需要幾個步驟，一般來說nˆ2程式效能就很糟了</p>\n<p>O(1): constant, print(“abc”)<br>O(logn): logarithm遞迴，每次步驟砍半, BinarySearch<br>O(n): linear, for loop, Linear Search<br>O(nlogn): sub- quadratic, Quick/Merge/Heap Sort<br>O(nˆ2): quadratic 二次方 two layer for loop<br>O(nˆ3): cubic<br>O(2ˆn): exponential 遞迴，每次步驟倍增，遞迴Fibonacci<br>O(n!): factorial  </p>\n<p>每次步驟少2倍log n (BinarySearch<br>每次步驟多2倍2^n (遞迴Fibonacci</p>\n<h1 id=\"Strategy\"><a href=\"#Strategy\" class=\"headerlink\" title=\"Strategy\"></a>Strategy</h1><ul>\n<li>暴力(枚舉)法(Brute Force)：常是quadratic </li>\n<li>貪婪法 (Greedy Algorithm)：每步擇優</li>\n<li>分治法 (Divide and Conquer)：快速跟合併，還有二元搜尋</li>\n<li>回溯（Backtracking)： 列出每階段可能，排除不可能，下階段沒分支，退回： dfs，01背包問題，每步看要不要</li>\n<li>分支限界（Branch and Bound method)：bfs</li>\n<li>動態規劃(Dynamic Programming)：n! 分治小問題，但跟分制法不同是多了儲存子問題結果</li>\n</ul>\n<h2 id=\"Detail\"><a href=\"#Detail\" class=\"headerlink\" title=\"Detail\"></a>Detail</h2><ul>\n<li>給有序陣列： Binary search, Two pointers  </li>\n<li>給串列：Two pointers  </li>\n<li>需要所有排列或子集： Backtracking</li>\n<li>給樹狀結構/圖： DFS, BFS</li>\n<li>限制不能遞迴： Stack</li>\n<li>in-place： Swap, Pointer</li>\n<li>要maximum/minumum subarray/subset/options：Dynamic programming</li>\n<li>要最大最小：Heap</li>\n<li>要common strings：Map, Trie </li>\n<li>Map/Set for O(1) time &amp; O(n) space </li>\n</ul>\n<h1 id=\"In-place\"><a href=\"#In-place\" class=\"headerlink\" title=\"In-place\"></a>In-place</h1><p>在不用多餘空間前提下操作原陣列取得結果  </p>\n<p>189.Rotate Array<br>206.Reverse Linked List  </p>\n<h1 id=\"Object-Oriented\"><a href=\"#Object-Oriented\" class=\"headerlink\" title=\"Object Oriented\"></a>Object Oriented</h1><p>定義物件成員與方法，有封裝，繼承，多型等特性  </p>\n<p>208.Implement Trie (Prefix Tree)<br>211.Design Add and Search Words data structure  </p>\n<h1 id=\"Slow-Fast-Pointer\"><a href=\"#Slow-Fast-Pointer\" class=\"headerlink\" title=\"Slow Fast Pointer\"></a>Slow Fast Pointer</h1><p>快慢指標常用來檢測串列是否有迴圈  </p>\n<p>141.Linked List Cycle<br>203.Remove Linked List Elements<br>234.Palindrome Linked List<br>424.longest repeating character replacement  </p>\n<h1 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h1><p>針對陣列操作，常須in-place 或跟其他資料結構搭配  </p>\n<blockquote>\n<p>set用add; []用append, pop(0開頭/-1結尾)  </p>\n</blockquote>\n<p>1.Two Sum<br>48.Rotate Image<br>54.Spiral Matrix<br>122.Best Time to Buy and Sell Stock II<br>206.Reverse Linked List<br>252.Meeting Rooms<br>253.Meeting Rooms II<br>287.Find the Duplicate Number<br>844.Backspace String Compare<br>977.Squares of a Sorted Array </p>\n<h1 id=\"Bit-Manipulation\"><a href=\"#Bit-Manipulation\" class=\"headerlink\" title=\"Bit Manipulation\"></a>Bit Manipulation</h1><p>將數字轉bit處理  </p>\n<p>7.Reverse Integer<br>136.Single Number<br>338.Counting Bits  </p>\n<h1 id=\"Heap\"><a href=\"#Heap\" class=\"headerlink\" title=\"Heap\"></a>Heap</h1><p>常用來找最大最小值，heappop由小到大    </p>\n<blockquote>\n<p>heapq.heapify(array)<br>heapq.heappop(array) </p>\n</blockquote>\n<p>846.Hand of Straights<br>1046.Last Stone Weight  </p>\n<h1 id=\"Sorting\"><a href=\"#Sorting\" class=\"headerlink\" title=\"Sorting\"></a>Sorting</h1><p>對列表可以順序或倒序排列  </p>\n<blockquote>\n<p>Sort input for O(nlogn) time and O(1) space<br>Quick, Merge, Heap, Topological Sorting: O(nlogn)<br>b=sorted(a), a.sort(), .sort(reverse=True)  </p>\n</blockquote>\n<h1 id=\"Searching\"><a href=\"#Searching\" class=\"headerlink\" title=\"Searching\"></a>Searching</h1><p>搜尋一般會先Sorting  </p>\n<blockquote>\n<p>Linear Search: O(n)<br>Binary, Interpolation, Exponential Search: O(logn)<br>Trie  </p>\n</blockquote>\n<p>33.Search in Rotated Sorted Array<br>153.Find Minimum in Rotated Sorted Array<br>875.Koko Eating Bananas<br>1060.Missing number in sorted array  </p>\n<h1 id=\"Recursion\"><a href=\"#Recursion\" class=\"headerlink\" title=\"Recursion\"></a>Recursion</h1><p>遞迴函式解決問題  </p>\n<p>100.Same Tree<br>226.Invert Binary Tree<br>543.Diameter of Binary Tree<br>617.Merge Two Binary Trees  </p>\n<h1 id=\"Backtracking\"><a href=\"#Backtracking\" class=\"headerlink\" title=\"Backtracking\"></a>Backtracking</h1><p>回溯是種通用算法，遞迴枚舉多維度，遇到不正確維度則到下維度，用於尋找某些計算問題的所有（或部分）解決方案    </p>\n<p>46.Permutations<br>47.PermutationsII<br>77.Combinations<br>78.Subsets    </p>\n<h1 id=\"DFS-BFS\"><a href=\"#DFS-BFS\" class=\"headerlink\" title=\"DFS/BFS\"></a>DFS/BFS</h1><ul>\n<li>Depth First Search<br>深度優先搜尋常用Stack實作，對樹狀結構特定形式的回溯  </li>\n<li>Breadth First Search<br>廣度優先搜尋常用Queue實作</li>\n</ul>\n<p>127.Word Ladder<br>323.Number of Connected Components<br>547.Number of Provinces  </p>\n<h1 id=\"Dynamic-Programming\"><a href=\"#Dynamic-Programming\" class=\"headerlink\" title=\"Dynamic Programming\"></a>Dynamic Programming</h1><p>類似回溯，但問題可以被分解為相似子問題，且有最優子結構(轉移方程式)</p>\n<h2 id=\"Fibonacci\"><a href=\"#Fibonacci\" class=\"headerlink\" title=\"Fibonacci\"></a>Fibonacci</h2><p>後項為前2項相加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">def fib(n):</span><br><span class=\"line\">\t# f&#x3D; 1 # factorial</span><br><span class=\"line\">\tF&#x3D; &#123;&#125;  </span><br><span class=\"line\">\tF[0], F[1] &#x3D; 0,1  </span><br><span class=\"line\">\tfor i in range (2,n+1):</span><br><span class=\"line\">\t    F[i]&#x3D;F[i-1]+F[i-2]  # factorial: #f *&#x3D; i</span><br><span class=\"line\">    return F[n] # factorial: return f</span><br></pre></td></tr></table></figure>\n<p>53.Maximum Subarray<br>70.Climbing Stairs<br>198.House Robber<br>1553. Minimum number of Days to eat Oranges<br>1871. Jump Game VII  </p>\n<h2 id=\"LCS\"><a href=\"#LCS\" class=\"headerlink\" title=\"LCS\"></a>LCS</h2><p>兩字串最長共同子序列</p>\n<p>91.Decode Ways  </p>\n<h2 id=\"Palindrome\"><a href=\"#Palindrome\" class=\"headerlink\" title=\"Palindrome\"></a>Palindrome</h2><p>判斷字串是否回文</p>\n<p>647.Palindromic Substring  </p>\n<h2 id=\"ZeroOne-Knapsack\"><a href=\"#ZeroOne-Knapsack\" class=\"headerlink\" title=\"ZeroOne Knapsack\"></a>ZeroOne Knapsack</h2><p>每商品有重量跟價值，每商品只能取一次，在不超過限定重量下得到最大價值  </p>\n<p>62.Unique Paths<br>63.Unique Paths II<br>64.Minimum Path Sum<br>121.Best Time to Buy and Sell Stock<br>256.Paint House<br>1423.Maximum Points You Can Obtain from Cards  </p>\n<h2 id=\"Unbound-Knapsack\"><a href=\"#Unbound-Knapsack\" class=\"headerlink\" title=\"Unbound Knapsack\"></a>Unbound Knapsack</h2><p>其他條件跟ZeroOne一樣，但每商品可以取無限次  </p>\n<p>39.Combination Sum<br>139.Word Break<br>322.Coin Change<br>518.Coin Change II  </p>\n","categories":["生活"],"tags":["語言"]},{"title":"飲食的基礎","url":"/life/nutrition/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(21).jpeg\"></p>\n<p>好久沒換主題了，我希望小夥伴們過得健康，在一連串日文英文程式語言硬核轟炸之後，讓我們回歸生活，把焦點放到需要一輩子關注的問題- 吃。</p>\n<a id=\"more\"></a>\n\n<p>我一直在想要怎麼過得健康，活得久，從之前健身訓練的追尋我們知道吃比動更重要，那該怎麼吃呢？</p>\n<p>國小大家一定上過健康教育，那我們就從這裡開始，這篇文章是營養的大綱，最後會帶到怎麼活得久。</p>\n<h1 id=\"基礎與規則\"><a href=\"#基礎與規則\" class=\"headerlink\" title=\"基礎與規則\"></a>基礎與規則</h1><ul>\n<li>水</li>\n<li>纖維</li>\n<li>維生素</li>\n<li>礦物質</li>\n<li>植化素</li>\n<li>酵素</li>\n<li>含硫蛋白質</li>\n<li>規則</li>\n<li>不能守規則的時候</li>\n</ul>\n<h1 id=\"六大營養素\"><a href=\"#六大營養素\" class=\"headerlink\" title=\"六大營養素\"></a>六大營養素</h1><ul>\n<li>蔬果</li>\n<li>蛋白質</li>\n<li>油脂</li>\n<li>碳水</li>\n<li>奶類</li>\n</ul>\n<h1 id=\"飲食策略\"><a href=\"#飲食策略\" class=\"headerlink\" title=\"飲食策略\"></a>飲食策略</h1><ul>\n<li>麥得飲食  </li>\n<li>地中海飲食</li>\n<li>得舒飲食</li>\n<li>彈性素</li>\n<li>輪替飲食</li>\n</ul>\n<h1 id=\"長壽\"><a href=\"#長壽\" class=\"headerlink\" title=\"長壽\"></a>長壽</h1><ul>\n<li>健檢報告</li>\n<li>心態睡眠空氣</li>\n</ul>\n","categories":["生活"],"tags":["飲食"]},{"title":"必須的東西","url":"/life/basic/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(22).jpeg\"></p>\n<p>人體中70%是水，從之前健身系列也知道水對我們是最重要的，所以我排在第一位，接著開始進入營養，出現維生素，礦物質，植化素，酵素，含硫蛋白質。</p>\n<p>最後是我看一本「飲食的規則」結合生活的一些感悟，與不能遵守規則時該怎麼做，篇幅有點多，預計花兩三週完成。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"水\"><a href=\"#水\" class=\"headerlink\" title=\"水\"></a>水</h1><p>多喝幫助皮膚，膠原蛋白生成，體溫調節<br>每天體重(公斤)乘以30</p>\n<ul>\n<li>純水</li>\n<li>無糖茶</li>\n<li>黑咖啡<br>淺中培比較有抗氧化物綠原酸<br>深培比較不傷胃<br>可以加黑胡椒，肉桂，豆漿<br>早上9-10點早餐後、下午3-4點運動前喝<br>咖啡因跟烘培沒太多關係  </li>\n</ul>\n<h1 id=\"纖維\"><a href=\"#纖維\" class=\"headerlink\" title=\"纖維\"></a>纖維</h1><p>增加腸道激素的分泌，確實有助於控制食慾和控制餐後血糖<br>益生菌的食物來源之一，有助體內益生菌繁殖生長<br>建議25～35公克，超過50～60公克阻礙人體對鐵、鋅等礦物質的吸收，容易造成貧血（缺鐵）、傷口癒合不佳（缺鋅）<br>水溶性纖維包括果膠、樹膠、植物膠、寡醣等，主要存在如豆子、水果、木耳、洋菇等等  </p>\n<h2 id=\"作用機制\"><a href=\"#作用機制\" class=\"headerlink\" title=\"作用機制\"></a>作用機制</h2><p>膳食纖維被腸內菌發酵時所產生的「短鏈脂肪酸」（乙酸、丙酸、丁酸），提供腸道細胞營養，維護腸道健康<br>腸道中包覆住醣類，食物不會馬上被消化酵素分解吸收，能延緩葡萄糖吸收速度，進食後血糖不會急速上升<br>體內的膽固醇經代謝後會產生「膽酸」，而水溶性纖維可以跟膽酸結合，將膽酸排出體外  </p>\n<h1 id=\"維生素\"><a href=\"#維生素\" class=\"headerlink\" title=\"維生素\"></a>維生素</h1><h2 id=\"脂溶A（抗氧化）\"><a href=\"#脂溶A（抗氧化）\" class=\"headerlink\" title=\"脂溶A（抗氧化）\"></a>脂溶A（抗氧化）</h2><p>維持黏膜眼睛健康<br>胡蘿蔔是A前驅<br>紅黃綠色蔬果，如胡蘿蔔、地瓜、菠菜，動物肝臟、地瓜、木瓜<br>容易累積體內造成肝毒性，建議從食物中攝取<br>過多：肝臟受損，骨頭關節痛，皮膚乾掉髮  </p>\n<h2 id=\"脂溶D\"><a href=\"#脂溶D\" class=\"headerlink\" title=\"脂溶D\"></a>脂溶D</h2><p>每日陽光10分鐘，幫助皮膚合成維生素D<br>每天800-1000國際單位維生素D，可以幫助鈣質吸收<br>魚肝油、高油脂魚肉（鯖魚、鮭魚）、小魚干、海洋動物的肝臟、餵予維生素D的雞所產的蛋、菇菌類、牛奶中強化維生素D  </p>\n<p>不足：腰酸，體重增加，因為脂肪細胞內有維生素D接受器能活化蛋白質與強化肌肉<br>過多：動脈鈣化，噁心</p>\n<h2 id=\"脂溶K\"><a href=\"#脂溶K\" class=\"headerlink\" title=\"脂溶K\"></a>脂溶K</h2><p>過多：肝臟受損，紅血球受損貧血  </p>\n<h2 id=\"脂溶E（抗氧化）\"><a href=\"#脂溶E（抗氧化）\" class=\"headerlink\" title=\"脂溶E（抗氧化）\"></a>脂溶E（抗氧化）</h2><p>防止細胞膜上的脂質受到自由基攻擊，保護細胞健康<br>Q10是人體會自行合成的抗氧化物質，有助於清除自由基，且能幫助還原被氧化的維生素E<br>過多：凝血問題  </p>\n<h2 id=\"水溶B\"><a href=\"#水溶B\" class=\"headerlink\" title=\"水溶B\"></a>水溶B</h2><p>人體的代謝，消除疲勞，預防感染、紅血球生長、消化機能與心血管健康，製造可體松等荷爾蒙的過程需要，植物性蛋白質幾乎不含維生素B群<br>促進Q10合成<br>蛤蜊、青花菜、酪梨、雞蛋、牛奶、大蒜、鮭魚</p>\n<h3 id=\"B1硫胺素1-2毫克-每日-豬肉，全穀，內臟，堅果\"><a href=\"#B1硫胺素1-2毫克-每日-豬肉，全穀，內臟，堅果\" class=\"headerlink\" title=\"B1硫胺素1.2毫克(每日) 豬肉，全穀，內臟，堅果\"></a>B1硫胺素1.2毫克(每日) 豬肉，全穀，內臟，堅果</h3><p>能將葡萄糖轉為熱量<br>生長發育<br>神經功能</p>\n<h3 id=\"B2核黃素1-3毫克-每日-牛奶，雞蛋，蔬菜\"><a href=\"#B2核黃素1-3毫克-每日-牛奶，雞蛋，蔬菜\" class=\"headerlink\" title=\"B2核黃素1.3毫克(每日) 牛奶，雞蛋，蔬菜\"></a>B2核黃素1.3毫克(每日) 牛奶，雞蛋，蔬菜</h3><p>大多從牛奶中獲取。維生素B2又被稱為「美容營養素」<br>可以促進蛋白質的利用<br>生長發育<br>尿黃<br>不足：嘴破易怒  </p>\n<h3 id=\"B3菸鹼酸14毫克-每日-肉類，茶，咖啡\"><a href=\"#B3菸鹼酸14毫克-每日-肉類，茶，咖啡\" class=\"headerlink\" title=\"B3菸鹼酸14毫克(每日) 肉類，茶，咖啡\"></a>B3菸鹼酸14毫克(每日) 肉類，茶，咖啡</h3><p>醣類與脂肪及蛋白質代謝的重要輔助成分<br>細胞功能  </p>\n<h3 id=\"B5泛酸5毫克-每日-食物都有，幾乎不缺\"><a href=\"#B5泛酸5毫克-每日-食物都有，幾乎不缺\" class=\"headerlink\" title=\"B5泛酸5毫克(每日) 食物都有，幾乎不缺\"></a>B5泛酸5毫克(每日) 食物都有，幾乎不缺</h3><p>醣類與脂肪及蛋白質代謝的重要輔助成分<br>降低膽固醇  </p>\n<h3 id=\"B6吡哆素1-3毫克-每日-雞，魚，堅果\"><a href=\"#B6吡哆素1-3毫克-每日-雞，魚，堅果\" class=\"headerlink\" title=\"B6吡哆素1.3毫克(每日) 雞，魚，堅果\"></a>B6吡哆素1.3毫克(每日) 雞，魚，堅果</h3><p>則能幫助蛋白質代謝<br>隨著年齡的增長，它可能有助於防止認知功能的下降  </p>\n<h3 id=\"B7生物素30微克-每日-食物都有，幾乎不缺\"><a href=\"#B7生物素30微克-每日-食物都有，幾乎不缺\" class=\"headerlink\" title=\"B7生物素30微克(每日) 食物都有，幾乎不缺\"></a>B7生物素30微克(每日) 食物都有，幾乎不缺</h3><p>黏膜健康  </p>\n<h3 id=\"B9葉酸400微克-每日-柑橘，蔬菜，應嘴豆\"><a href=\"#B9葉酸400微克-每日-柑橘，蔬菜，應嘴豆\" class=\"headerlink\" title=\"B9葉酸400微克(每日) 柑橘，蔬菜，應嘴豆\"></a>B9葉酸400微克(每日) 柑橘，蔬菜，應嘴豆</h3><p>新細胞生成，準備受孕的女性或妊娠準媽媽的必要營養素，兒童來說，葉酸都是維持正常生理運作的必需營養。 腦神經傳導物質的代謝需要葉酸，神經的生成和發育也少不了葉酸，所以葉酸不足會引發腦部症狀。  </p>\n<h3 id=\"B12鈷胺素-2-4微克-每日-發酵食物\"><a href=\"#B12鈷胺素-2-4微克-每日-發酵食物\" class=\"headerlink\" title=\"B12鈷胺素 2.4微克(每日)  發酵食物\"></a>B12鈷胺素 2.4微克(每日)  發酵食物</h3><p>幫助身體將碳水化合物變成身體所使用的葡萄糖<br>遠離「腦霧」<br>新細胞生成<br>神經血球  </p>\n<h2 id=\"水溶C（抗氧化）\"><a href=\"#水溶C（抗氧化）\" class=\"headerlink\" title=\"水溶C（抗氧化）\"></a>水溶C（抗氧化）</h2><p>提高免疫力<br>柑橘類，芭樂、紅甜椒、香椿、糯米椒，都有相當高含量的維生素C<br>幫助脂肪燃燒的肉鹼是由離胺酸這種胺基酸組成，但也需要維生素C從旁輔助<br>幫助還原被氧化的維生素E，使維生素E能夠重複再利用<br>過多：噁心，腹瀉，膽結石  </p>\n<h1 id=\"礦物質\"><a href=\"#礦物質\" class=\"headerlink\" title=\"礦物質\"></a><a href=\"http://www.3phk.com/v5article.asp?id=893\">礦物質</a></h1><ol>\n<li>均衡攝取六大類食物  </li>\n<li>每天攝取30種以上的食物  </li>\n<li>吃未精製、粗糙的食物  </li>\n<li>吃當季、在地的食物  </li>\n<li>可選擇天然礦物質復育的食物  </li>\n<li>視情況選擇營養強化的食物  </li>\n<li>選擇能保留礦物質的淨水器  </li>\n</ol>\n<h2 id=\"硒\"><a href=\"#硒\" class=\"headerlink\" title=\"硒\"></a>硒</h2><p>抗癌，硒＋維生素E(堅果、酪梨或橄欖油)吸收率更高<br>「穀光甘肽」是人體自行合成的重要抗氧化劑，可幫助清除過氧化氫自由基，避免毒性強的氫氧自由基產生。而「硒」是穀光甘肽清除自由基時重要的輔因子<br>需要量不多，且平時若有吃海鮮、蛋、肉的人都不會缺乏，不需額外補充<br>抗氧化力為合成維生素E的735倍<br>火雞肉，燕麥，雞蛋，豆腐，菠菜，糙米、全麥、蘿蔔、蘑菇、蔥、蒜、蘆筍<br>過多：精神緊張、抑鬱、嘔吐、作悶、出汗、脫髮、脫甲、口氣有蒜味</p>\n<h2 id=\"錳\"><a href=\"#錳\" class=\"headerlink\" title=\"錳\"></a>錳</h2><p>細胞血糖，維護行動力，調節膽固醇，腦部製造二種主要神經傳導物質多巴胺與乙醯膽鹼的要素<br>過量：食慾不掁、貧血，嚴重可令神經受損</p>\n<h2 id=\"碘\"><a href=\"#碘\" class=\"headerlink\" title=\"碘\"></a>碘</h2><p>甲狀腺<br>過多：甲狀腺過度活躍，嘔吐、肚瀉、口瘡、唾液腺腫脹、口有金屬味、頭痛、出疹、呼吸困難  </p>\n<h2 id=\"鋅\"><a href=\"#鋅\" class=\"headerlink\" title=\"鋅\"></a>鋅</h2><p>黏膜生成、傷口癒合，代謝，製造蛋白質，增進食慾、增強免疫，幫助控制血糖<br>因為鋅跟鐵的量會在人體中互相平衡，所以如果鋅補過多，反而會造成缺鐵、甚至是過量中毒<br>南瓜子、香菇、紅肉、腰果、芝麻、牡犡、海苔<br>男性15毫克，女性12毫克，上限35毫克<br>減低體內銅的水平</p>\n<p>補充後，可以明顯降低飯後血糖值、胰島素阻抗跟空腹胰島素，讓蛋白質充分發揮效果，所以非常建議與蛋白質一併攝取<br>不足：掉髮，味覺弱化  </p>\n<h2 id=\"鉀\"><a href=\"#鉀\" class=\"headerlink\" title=\"鉀\"></a>鉀</h2><p>預防高血壓與腦中風，神經與肌肉應激性，預防腎結石，腎功能有問題者鉀離子攝取過多會引發高血鉀症<br>香蕉、草莓、柑橘、葡萄、柚子、西瓜<br>菠菜、山藥、芥藍、毛豆、莧菜、大蒜<br>蕃薯、紅薯、芋頭、山藥、小米</p>\n<p>不足：抽筋水腫，精神疲倦、全身無力，心律不整、心悸頭暈，消化功能紊亂，反應遲鈍、焦慮煩躁 </p>\n<h2 id=\"銅\"><a href=\"#銅\" class=\"headerlink\" title=\"銅\"></a>銅</h2><p>一次服用10毫克可引致嘔吐、肌肉痛、胃痛<br>人體自行製造抗氧化酵素SOD (超氧化歧化酶) ，SOD在清除自由基過程，需要「鋅」和「銅」這兩種礦物質當作輔酶<br>減低體內鋅的水平  </p>\n<h2 id=\"鐵\"><a href=\"#鐵\" class=\"headerlink\" title=\"鐵\"></a>鐵</h2><p>大腦血球，胺基酸轉換成腦內神經傳遞物質所需的礦物質<br>男性12毫克，女性20毫克<br>豬肝、貝類<br>過多：嘔吐、下腹劇痛、肚瀉、肛門出血，嚴重可引致昏迷<br>C幫助吸收<br>減低體內銅的水平  </p>\n<h2 id=\"鈣\"><a href=\"#鈣\" class=\"headerlink\" title=\"鈣\"></a>鈣</h2><p>乳製品（每100公克約含有240毫克鈣）<br>乾海帶、無花果、紫菜、紅毛苔及黑糖（一湯匙約含70毫克鈣）<br>減低鋅、鐵、鎂和磷  </p>\n<p>過多：嘔吐、脫水、骨痛，嚴重昏迷  </p>\n<h3 id=\"含鈣豐富蔬菜排行表\"><a href=\"#含鈣豐富蔬菜排行表\" class=\"headerlink\" title=\"含鈣豐富蔬菜排行表\"></a>含鈣豐富蔬菜排行表</h3><p>芥藍1碟（100公克）約含238毫克<br>紅莧菜1碟（100公克）約含191毫克<br>莧菜1碟（100公克）約含156毫克<br>綠豆芽1碟（100公克）約含147毫克<br>紅鳳菜1碟（100公克）約含142毫克<br>川七1碟（100公克）約含117毫克<br>小白菜1碟（100公克）約含106毫克<br>油菜1碟（100公克）約含105毫克<br>芥菜1碟（100公克）約含98毫克<br>甘藷葉1碟（100公克）約含85毫克  </p>\n<h2 id=\"鎂\"><a href=\"#鎂\" class=\"headerlink\" title=\"鎂\"></a>鎂</h2><p>心臟，神經傳導，肌肉放鬆，蛋白質合成，和鈣、鉀等都是心肌細胞的收縮所必要的營養<br>構成牙齒、骨骼，與體內350種以上的酵素有關<br>燕麥，菠菜，南瓜，初榨橄欖油，深綠色蔬菜，腰果<br>減低體內鈣的水平  </p>\n<p>不足：失眠、疲勞、焦慮易怒、記憶力與專注力下降、頭痛、食慾不振、便秘、骨質流失、心跳異常<br>過多：肚瀉、作悶、肌肉無力、疲倦、呼吸困難、頭暈、神志不清  </p>\n<h2 id=\"磷\"><a href=\"#磷\" class=\"headerlink\" title=\"磷\"></a>磷</h2><p>腎臟、骨骼、肌肉、血管<br>不足：肌肉無力，鈣和維生素D含量也降低時，骨質會變脆弱，並導致關節和肌肉疼痛<br>減低體內鈣與鎂的水平  </p>\n<p>過高：眼睛發癢發紅，嚴重便祕、噁心、嘔吐或腹瀉  </p>\n<h3 id=\"每日磷攝取量\"><a href=\"#每日磷攝取量\" class=\"headerlink\" title=\"每日磷攝取量\"></a>每日磷攝取量</h3><p>19歲以上成人：700毫克(mg)<br>9-18歲小孩：1250毫克<br>4-8歲小孩：500毫克<br>1-3歲小孩：460毫克<br>7-12個月寶寶：275毫克<br>0-6個月寶寶：100毫克  </p>\n<h2 id=\"鉻\"><a href=\"#鉻\" class=\"headerlink\" title=\"鉻\"></a>鉻</h2><p>增加糖類耐受性<br>花椰菜，黑豆，蘋果<br>過高：可能會致癌。減低體內鋅與鐵的水平  </p>\n<h1 id=\"植化素-植物色素\"><a href=\"#植化素-植物色素\" class=\"headerlink\" title=\"植化素(植物色素)\"></a>植化素(植物色素)</h1><p>多酚是其中一種，葉黃素、類黃酮、葉綠素、兒茶素…  </p>\n<h1 id=\"酵素（酶）\"><a href=\"#酵素（酶）\" class=\"headerlink\" title=\"酵素（酶）\"></a>酵素（酶）</h1><p>所有生化反應的催化劑，蛋白質為其骨架結構，48度以上活性就會被破壞<br>蛋白質分解酵素：鳳梨、木瓜、奇異果<br>澱粉分解酵素：白蘿蔔、山藥、高麗菜、香蕉<br>脂肪分解酵素：納豆、味噌、天然發酵優格及起司  </p>\n<h1 id=\"含硫蛋白質\"><a href=\"#含硫蛋白質\" class=\"headerlink\" title=\"含硫蛋白質\"></a>含硫蛋白質</h1><p>含硫蛋白質<br>十字花科蔬菜、蘆筍、洋蔥、蒜及肉類…  </p>\n<h1 id=\"規則\"><a href=\"#規則\" class=\"headerlink\" title=\"規則\"></a>規則</h1><ul>\n<li>好澱粉- 半碗非精緻（糙米，燕麥，地瓜 南瓜，芋頭，綠豆）  </li>\n<li>好蛋白- 依體重算克數，白肉取代紅肉（運動前後高蛋白，全蛋，雞胸肉，睡前奶類酪蛋白，黃豆做的豆腐豆漿）  </li>\n<li>好油- 1湯匙的堅果，含omega3，DHA顧腦，EPA顧眼（堅果，80%以上巧克力，橄欖油，橄欖油可以加薑黃黑胡椒促進薑黃吸收）   </li>\n<li>好水果- 2到3顆女性拳頭大小，糖份一天只能幾克（香蕉 水蜜桃）   </li>\n</ul>\n<h2 id=\"S-ABCDE原則\"><a href=\"#S-ABCDE原則\" class=\"headerlink\" title=\"S-ABCDE原則\"></a>S-ABCDE原則</h2><ul>\n<li>低鹽（Sodium）</li>\n<li>減酒（Alcohol）</li>\n<li>減重（Body weight）</li>\n<li>戒菸（Cigarette）</li>\n<li>飲食調整（DASH diet）</li>\n<li>運動（Exercise） </li>\n</ul>\n<h1 id=\"不能守規則的時候\"><a href=\"#不能守規則的時候\" class=\"headerlink\" title=\"不能守規則的時候\"></a>不能守規則的時候</h1><ol>\n<li>精緻澱粉- 冷了再吃  </li>\n<li>精緻糖- 只能攝取幾克，下午茶時間吃  </li>\n</ol>\n<h2 id=\"吃鍋\"><a href=\"#吃鍋\" class=\"headerlink\" title=\"吃鍋\"></a>吃鍋</h2><ol start=\"0\">\n<li>蔬菜→主菜→主食→配料  </li>\n<li>湯底- 原味或蔬果  </li>\n<li>主食- 全穀雜糧(南瓜、芋頭、玉米)，冬粉會吸收湯汁要注意</li>\n<li>主菜- 魚→雞→豬→牛  </li>\n<li>配料- 天然蔬果，菇類（高麗菜、木耳、杏鮑菇、玉米筍、山茼蒿)</li>\n<li>加工火鍋料減少或不攝取  </li>\n<li>醬- 青蔥、洋蔥、白蘿蔔泥、蒜末、辣椒、薄鹽醬油、白醋酌量沾取  </li>\n</ol>\n","categories":["生活"],"tags":["飲食"]},{"title":"蔬果","url":"/life/phytochemicals/","content":"<p><img src=\"https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(23).jpeg\"></p>\n<p>蔬果重點在植化素。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"植化素\"><a href=\"#植化素\" class=\"headerlink\" title=\"植化素\"></a>植化素</h1><p>植物生長的必要元素，存在蔬菜水果，除富含維生素、礦物質及纖維質外，還有數千種不同的天然化合物，多酚是植化素一種，類黃酮是多酚化合物。    </p>\n<h2 id=\"類黃酮素-水溶-：種類最多的植化素\"><a href=\"#類黃酮素-水溶-：種類最多的植化素\" class=\"headerlink\" title=\"類黃酮素(水溶)：種類最多的植化素\"></a>類黃酮素(水溶)：種類最多的植化素</h2><p>(1) 花青素（anthocyanin）、前花青素；(2) 兒茶素；(3) 槲皮素；(4) 檸檬黃素；(5) 芸香素；(6) 芹菜素等<br>使植物免受昆蟲即為生物的侵害，消除壞膽固醇、降體脂肪，還能抗氧化、減緩發炎反應，調整體內鹽分濃度，促進水分循環，避免水腫，排出老化廢物       </p>\n<h2 id=\"類胡蘿蔔素-油溶\"><a href=\"#類胡蘿蔔素-油溶\" class=\"headerlink\" title=\"類胡蘿蔔素(油溶)\"></a>類胡蘿蔔素(油溶)</h2><p>(1) β-胡蘿蔔素、β-隱黃素、α-胡蘿蔔素；(2) 葉黃素；(3) 玉米黃素；(4) 茄紅素；(5) 辣椒素、辣椒紅素等<br>預防癌症、保護心血管、避免視網膜退化等功能  </p>\n<h2 id=\"有機硫化物\"><a href=\"#有機硫化物\" class=\"headerlink\" title=\"有機硫化物\"></a>有機硫化物</h2><p>(1) 大蒜素；(2) 蘿蔔硫素；(3) 麩胱甘肽；(4) 吲哚；(5) 異硫氰酸酯，檞皮黃素（quercetine）等<br>洋蔥、蘋果、蘆筍、十字花科，不一定會散發出特殊氣味，抗氧化劑，自由基清除劑，強大解毒功能，且能抑制皮膚形成黑色素，有助消除疲勞、增加精力，還有殺菌及改善免疫力的效果    </p>\n<h2 id=\"酚酸類\"><a href=\"#酚酸類\" class=\"headerlink\" title=\"酚酸類\"></a>酚酸類</h2><p>(1) 綠原酸；(2) 鞣花酸；(3) 沒食子酸；(4) 對香豆酸；(5) 阿魏酸；(6) 水楊酸等<br>植物中通常會與醣基或細胞壁的構造鍵結，到了人體內則成為捕捉自由基的高手，能保護人體免因氧化壓力的傷害而造成冠心病、粥狀動脈硬化或癌症等  </p>\n<h2 id=\"植物雌激素\"><a href=\"#植物雌激素\" class=\"headerlink\" title=\"植物雌激素\"></a>植物雌激素</h2><p>(1) 異黃酮；(2) 木酚素；(3) 薯芋皂等  </p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>(1) 葉綠素；(2) 薑黃素；(3) 白藜蘆醇；(4) 咖啡酸；(5) 檸檬酸烯、檸檬苦素；(6) 植物皂素；(7) 苦瓜苷；(8) 迷迭香酸，芝麻烯醇（sesamenol）等<br>寡糖：洋蔥的甜味來源，能促進腸胃蠕動，改善便祕和腹瀉，並改變腸道生態，增加益菌數量  </p>\n<h2 id=\"可可\"><a href=\"#可可\" class=\"headerlink\" title=\"可可\"></a>可可</h2><p>類黃酮（flavonoid）強力抗氧化物，抗氧化能力是維生素E的50倍、維生素C的20倍<br>榭皮素(一種黃酮)抗發炎<br>黃烷醇（flavanols）避免精神壓力下造成的血管問題，促進去除讓大腦失智癡呆的有毒蛋白防失智<br>可可多酚（cocoa polyphenols）保護心血管防血栓<br>可可促進益生菌顧腸道<br>含礦物質鉀、鎂和鈣，鐵防貧血<br>含有助合成血清素的色胺酸，血清素是能帶來喜悅感的神經傳導物質<br>脂肪酸可以刺激腦內啡合成，帶來心情愉悅的功效  </p>\n<h3 id=\"不宜\"><a href=\"#不宜\" class=\"headerlink\" title=\"不宜\"></a>不宜</h3><p>1／8歲以下孩童：咖啡因代謝<br>胃食道逆流患者：刺激大量胃酸分泌，誘發胃食道逆流<br>懷孕及哺乳婦女：胎兒咖啡因代謝<br>三高患者、肥胖：黑巧克力，每天不應超過30克，以避免吃進過多熱量     </p>\n<h2 id=\"薑黃和咖哩\"><a href=\"#薑黃和咖哩\" class=\"headerlink\" title=\"薑黃和咖哩\"></a>薑黃和咖哩</h2><p>薑黃素（curcumin），可以平衡失智症的發炎反應，減少神經細胞的傷害，還能抑制膽固醇形成，預防心血管疾病。由於有促進血液循環的作用，也可以用來調理經期不規則的狀況  </p>\n<h2 id=\"綠茶\"><a href=\"#綠茶\" class=\"headerlink\" title=\"綠茶\"></a>綠茶</h2><p>兒茶素（catechin），抑制神經細胞老化、抑制β澱粉蛋白沉積於大腦 </p>\n<h2 id=\"豆類製品\"><a href=\"#豆類製品\" class=\"headerlink\" title=\"豆類製品\"></a>豆類製品</h2><p>異黃酮（isoflavone），皂素（saponin）</p>\n<h2 id=\"莓果類\"><a href=\"#莓果類\" class=\"headerlink\" title=\"莓果類\"></a>莓果類</h2><p>莓多酚，其中包含蘆丁（增加維生素C的吸收）、檸檬酸（促進礦物質的吸收）、花青素（保養眼睛）、鞣花酸（避免色素沉澱、美白）  </p>\n<h1 id=\"水果注意\"><a href=\"#水果注意\" class=\"headerlink\" title=\"水果注意\"></a>水果注意</h1><p>盡量八點前吃完，低甜度，不空腹  </p>\n<p>低GI值：1-55。如︰芭樂、奇異果、櫻桃、蘋果、梨子、柳橙<br>中GI值：56-69。如︰香蕉、鳳梨、葡萄、草莓、芒果、木瓜<br>高GI值：70以上。如︰西瓜、荔枝、龍眼、榴槤  </p>\n<h2 id=\"紅\"><a href=\"#紅\" class=\"headerlink\" title=\"紅\"></a>紅</h2><p>代表植物：<br>紅鳳菜、紅甜椒、甜菜根、紅番茄、紅蘿蔔、紅櫻桃、紅辣椒、蔓越莓、紅蘋果、西瓜、草莓 </p>\n<p>主要植化素：<br>茄紅素、檞皮素、花青素   </p>\n<p>功效：<br>降低罹癌風險、強化心血管、強化黏膜組織、避免泌尿道感染   </p>\n<h2 id=\"黃橘\"><a href=\"#黃橘\" class=\"headerlink\" title=\"黃橘\"></a>黃橘</h2><p>代表植物：<br>南瓜、玉米、地瓜、黃豆、木瓜、柑橘、鳳梨、葡萄柚、黃桃、芒果、柿子  </p>\n<p>主要植化素：<br>胡蘿蔔素、玉米黃素、類黃酮素  </p>\n<p>功效：<br>降低罹癌風險、強化心血管、維持視力健康、提高免疫功能  </p>\n<h2 id=\"綠\"><a href=\"#綠\" class=\"headerlink\" title=\"綠\"></a>綠</h2><p>代表植物：<br>蘆筍、菠菜、芥菜、韭菜、莧菜、芹菜、青蔥、地瓜葉、四季豆、九層塔、青椒、奇異果、芭樂、綠茶  </p>\n<p>主要植化素：<br>類胡蘿蔔素、吲哚、麩胱甘肽  </p>\n<p>功效：<br>降低罹癌風險、維持視力健康、強化骨骼與牙齒    </p>\n<h2 id=\"紫\"><a href=\"#紫\" class=\"headerlink\" title=\"紫\"></a>紫</h2><p>代表植物：<br>海藻類、黑木耳、紫甘藍、香菇、黑豆、芝麻、茄子、紫葡萄、藍莓、黑棗  </p>\n<p>主要植化素：<br>類黃酮素、花青素  </p>\n<p>功效：<br>降低罹癌風險、強化泌尿系統、維持記憶力、抗老化  </p>\n<h2 id=\"白\"><a href=\"#白\" class=\"headerlink\" title=\"白\"></a>白</h2><p>代表植物：<br>白花椰菜、包心菜、白蘿蔔、洋蔥、美白菇、山藥、杏仁、香蕉、水梨、柚子  </p>\n<p>主要植化素：<br>蒜素、多酚、花青素、微量元素硒、植物性雌激素 </p>\n<p>功效：<br>強化心血管、降低膽固醇、降低罹癌風險、提高新陳代謝  </p>\n","categories":["生活"],"tags":["飲食"]}]