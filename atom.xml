<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lunski&#39;s Clutter</title>
  
  <subtitle>This is a place to put my clutters, no matter you like it or not, welcome here.</subtitle>
  <link href="https://eric999j.github.io/atom.xml" rel="self"/>
  
  <link href="https://eric999j.github.io/"/>
  <updated>2020-12-05T05:05:51.328Z</updated>
  <id>https://eric999j.github.io/</id>
  
  <author>
    <name>lunski</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>米其林一星大腕燒肉</title>
    <link href="https://eric999j.github.io/life/daWan/"/>
    <id>https://eric999j.github.io/life/daWan/</id>
    <published>2020-11-28T09:30:00.000Z</published>
    <updated>2020-12-05T05:05:51.328Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/F7MlYm4.jpg" alt="img"></p><a id="more"></a><p>這間肉食主義者應該很愛，可以很專精吃到不同部位的肉，整個吃起來比山海樓貴，但沒有比較飽XD。</p><p>總之就是滿滿的肉XD (素食者的哀嚎</p><p><img src="https://i.imgur.com/13ZFH2V.jpg" alt="Imgur"><br><img src="https://i.imgur.com/dhozB2b.jpg" alt="Imgur"><br><img src="https://i.imgur.com/KrHVgcl.jpg" alt="Imgur"><br><img src="https://i.imgur.com/cY794O7.jpg" alt="Imgur"><br><img src="https://i.imgur.com/b0CDF7d.jpg" alt="Imgur"></p><p>還記得來之前我問主管如果吃素怎麼辦，主管說那可能就被裁掉了吧（抖…</p><iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3614.7377932184413!2d121.54804721500652!3d25.04297098396811!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3442abc4e2067da9%3A0xc2018f1e20ab3162!2z5aSn6IWV!5e0!3m2!1szh-TW!2stw!4v1606555757449!5m2!1szh-TW!2stw" width="600" height="450" frameborder="0" style="border:0;" allowfullscreen="" aria-hidden="false" tabindex="0"></iframe><p>這是我第二次吃米其林餐廳，感謝主管，也感謝拍照片的同事。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/F7MlYm4.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://eric999j.github.io/categories/life/"/>
    
    
    <category term="飲食" scheme="https://eric999j.github.io/tags/Diet/"/>
    
  </entry>
  
  <entry>
    <title>412. Fizz Buzz</title>
    <link href="https://eric999j.github.io/interview/412/"/>
    <id>https://eric999j.github.io/interview/412/</id>
    <published>2020-11-28T09:00:00.000Z</published>
    <updated>2020-11-28T08:59:25.693Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(20).jpeg"></p><p>Write a program that outputs the string representation of numbers from 1 to n.</p><p>But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”.</p><p>Example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">n &#x3D; 15,</span><br><span class="line"></span><br><span class="line">Return:</span><br><span class="line">[</span><br><span class="line">    &quot;1&quot;,</span><br><span class="line">    &quot;2&quot;,</span><br><span class="line">    &quot;Fizz&quot;,</span><br><span class="line">    &quot;4&quot;,</span><br><span class="line">    &quot;Buzz&quot;,</span><br><span class="line">    &quot;Fizz&quot;,</span><br><span class="line">    &quot;7&quot;,</span><br><span class="line">    &quot;8&quot;,</span><br><span class="line">    &quot;Fizz&quot;,</span><br><span class="line">    &quot;Buzz&quot;,</span><br><span class="line">    &quot;11&quot;,</span><br><span class="line">    &quot;Fizz&quot;,</span><br><span class="line">    &quot;13&quot;,</span><br><span class="line">    &quot;14&quot;,</span><br><span class="line">    &quot;FizzBuzz&quot;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><a id="more"></a><p>這篇說3的倍數印Fizz，5的倍數印Buzz，15倍數印FizzBuzz，其他印出數字。  </p><iframe height="400px" width="100%" src="https://repl.it/@eric999j/412-Fizz-Buzz?lite=true" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(20).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Write a program that outputs the string representation of numbers from 1 to n.&lt;/p&gt;
&lt;p&gt;But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;n &amp;#x3D; 15,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Return:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;1&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;2&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;Fizz&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;4&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;Buzz&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;Fizz&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;7&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;8&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;Fizz&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;Buzz&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;11&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;Fizz&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;13&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;14&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;FizzBuzz&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="面試" scheme="https://eric999j.github.io/categories/interview/"/>
    
    
    <category term="力扣" scheme="https://eric999j.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>136. Single Number</title>
    <link href="https://eric999j.github.io/interview/136/"/>
    <id>https://eric999j.github.io/interview/136/</id>
    <published>2020-11-28T08:00:00.000Z</published>
    <updated>2020-11-28T08:52:29.420Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(19).jpeg"></p><p>Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.</p><p>Follow up: Could you implement a solution with a linear runtime complexity and without using extra memory?</p><p>Example 1:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums &#x3D; [2,2,1]</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure><p>Example 2:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums &#x3D; [4,1,2,1,2]</span><br><span class="line">Output: 4</span><br></pre></td></tr></table></figure><p>Example 3:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums &#x3D; [1]</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure><a id="more"></a><p>這題要找單獨數字，原本用回圈紀錄出現次數，但發現網友用XOR，真的很巧妙，趕快學起來。</p><iframe height="400px" width="100%" src="https://repl.it/@eric999j/136-Single-Number?lite=true" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(19).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.&lt;/p&gt;
&lt;p&gt;Follow up: Could you implement a solution with a linear runtime complexity and without using extra memory?&lt;/p&gt;
&lt;p&gt;Example 1:  &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: nums &amp;#x3D; [2,2,1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 2:  &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: nums &amp;#x3D; [4,1,2,1,2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: 4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 3:  &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: nums &amp;#x3D; [1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="面試" scheme="https://eric999j.github.io/categories/interview/"/>
    
    
    <category term="力扣" scheme="https://eric999j.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>344. Reverse String</title>
    <link href="https://eric999j.github.io/interview/344/"/>
    <id>https://eric999j.github.io/interview/344/</id>
    <published>2020-11-28T08:00:00.000Z</published>
    <updated>2020-11-28T08:47:16.138Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(18).jpeg"></p><p>Write a function that reverses a string. The input string is given as an array of characters char[].</p><p>Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.</p><p>You may assume all the characters consist of printable ascii characters.</p><p>Example 1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [&quot;h&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]</span><br><span class="line">Output: [&quot;o&quot;,&quot;l&quot;,&quot;l&quot;,&quot;e&quot;,&quot;h&quot;]</span><br></pre></td></tr></table></figure><p>Example 2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [&quot;H&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;h&quot;]</span><br><span class="line">Output: [&quot;h&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;H&quot;]</span><br></pre></td></tr></table></figure><a id="more"></a><p>好久沒看到這麼平易近人的題目了(淚)，就是反轉字串，感謝python又拯救了工程師的一天。</p><iframe height="400px" width="100%" src="https://repl.it/@eric999j/344-Reverse-String?lite=true" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(18).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Write a function that reverses a string. The input string is given as an array of characters char[].&lt;/p&gt;
&lt;p&gt;Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.&lt;/p&gt;
&lt;p&gt;You may assume all the characters consist of printable ascii characters.&lt;/p&gt;
&lt;p&gt;Example 1:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: [&amp;quot;h&amp;quot;,&amp;quot;e&amp;quot;,&amp;quot;l&amp;quot;,&amp;quot;l&amp;quot;,&amp;quot;o&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [&amp;quot;o&amp;quot;,&amp;quot;l&amp;quot;,&amp;quot;l&amp;quot;,&amp;quot;e&amp;quot;,&amp;quot;h&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 2:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: [&amp;quot;H&amp;quot;,&amp;quot;a&amp;quot;,&amp;quot;n&amp;quot;,&amp;quot;n&amp;quot;,&amp;quot;a&amp;quot;,&amp;quot;h&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [&amp;quot;h&amp;quot;,&amp;quot;a&amp;quot;,&amp;quot;n&amp;quot;,&amp;quot;n&amp;quot;,&amp;quot;a&amp;quot;,&amp;quot;H&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="面試" scheme="https://eric999j.github.io/categories/interview/"/>
    
    
    <category term="力扣" scheme="https://eric999j.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>重訓的吃</title>
    <link href="https://eric999j.github.io/life/eat/"/>
    <id>https://eric999j.github.io/life/eat/</id>
    <published>2020-11-28T08:00:00.000Z</published>
    <updated>2020-11-28T08:22:50.825Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(17).jpeg"></p><p>這篇開始要跟大家分享我怎麼會想開始重訓的，因為受傷的關係一直很怕吃太多又不能做有氧，意外開始飲食控制與重訓的旅程。</p><a id="more"></a><iframe src="https://docs.google.com/spreadsheets/d/e/2PACX-1vTxm0oa9Wlsf7GkXNT3oMLRL4RCRSmxKKlKoNs80JB3dXsgZtUKqS4Fb9u1a6xJ22Mbea-_PE5G01Wm/pubhtml?gid=0&amp;single=true&amp;widget=true&amp;headers=false" width="550" height="500"></iframe><p>首先從基代與TDEE知道自己每天需要多少熱量跟營養著手，受到節流再開源觀念啟發，先控制每日飲食，配合高低碳做波動再加強運動達到更大熱量赤字。</p><p>因為平常上班時間固定，有重訓中午只想睡覺，索性就變成下午3點到10點才吃東西的17/7斷食，不過如果要這樣還是要尋求專業意見，我只是習慣懶得吃東西並跟大家介紹我的日常，沒有要推廣XD。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(17).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;這篇開始要跟大家分享我怎麼會想開始重訓的，因為受傷的關係一直很怕吃太多又不能做有氧，意外開始飲食控制與重訓的旅程。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://eric999j.github.io/categories/life/"/>
    
    
    <category term="運動" scheme="https://eric999j.github.io/tags/Workout/"/>
    
  </entry>
  
  <entry>
    <title>種植介質</title>
    <link href="https://eric999j.github.io/life/medium/"/>
    <id>https://eric999j.github.io/life/medium/</id>
    <published>2020-11-28T07:00:00.000Z</published>
    <updated>2020-12-05T05:35:54.994Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(16).jpeg"></p><p>不管種什麼東西介質(土壤，水，石頭等)都是第一要務，這篇就讓我們來探討這些介質吧</p><a id="more"></a><p><code>這篇是跟小耕園學習植栽心得。</code></p><h1 id="介質"><a href="#介質" class="headerlink" title="介質"></a>介質</h1><h2 id="排水層"><a href="#排水層" class="headerlink" title="排水層"></a>排水層</h2><ul><li>陶粒: 大顆粒、質地輕、多孔、透氣性好、穩定  </li><li>缽底石: 質地輕、透氣、保水  </li><li>碎竹炭: 質地堅硬、通氣性好、具有良好的吸附能力，抑制細菌  </li><li>綠沸石：用綠沸配土最大的作用在於防止植株根腐爛，有效抑制土壤中有害物質繁殖，提高肉肉抗病抗旱抗逆能力。同時具有吸附緩釋分子能力，緩釋養分，防止燒苗，通氣性好，可長期保持疏鬆，具有貯存和提供氧氮的功能  </li><li>粗椰纖: 可以避免介質流失又能保持良好排水</li></ul><h2 id="中層"><a href="#中層" class="headerlink" title="中層"></a>中層</h2><h2 id="土"><a href="#土" class="headerlink" title="土"></a>土</h2><ul><li><p>泥炭土：又稱黑土、草炭，是古代低溫、濕地的植物遺體，被埋在地下，經數千萬年的堆積，在氣溫較低、雨水較少或缺少空氣的條件下，植物殘體緩慢分解而形成的特殊有機物，多呈棕黃色或淺褐色。也是一種多肉配土的最佳介質。 盆栽常用，管理時最好在介質未完全乾燥之前即應澆水，  久了會軟腐黏膩而降低透氣性與排水性，如果還是密集澆水就很容易造成過度潮濕的爛根現象 </p></li><li><p>火山土：火山土是由火山噴發後的灰燼凝固而成，蘊含多種微量元素和礦物質，這些成分讓火山泥的物理特性十分穩定，並且廣泛應用於各種領域，因其獨具的高通透性與保水性更是廣泛用於多肉植物的栽培基質  </p></li></ul><ul><li>硅藻土：硅藻土是一種優良的基質成分,其吸水、保水性能強，栽培花卉的生理指標和形態指標更優,不易爛根。是作為多肉植物、景天、生石花等鋪面土，十二卷等混合顆粒緩釋肥直接使用，也可以與泥炭土等混合使用  </li></ul><ul><li>赤玉土：由火山灰堆積而成，是運用最廣泛的一種土壤介質。這也是在日本運用最廣泛的一種栽培介質。它是高通透性的火山泥，暗紅色圓狀顆粒，沒有有害細菌，PH值呈微酸。 含有一定磷鉀肥，PH呈微酸性，高通透性，蓄水排水能力佳，無蟲卵細菌 </li></ul><ul><li>鹿沼土：一種罕見的物質，產於鹿沼地區的火山區，是由下層火山土生成，呈火山沙的形式，PH值呈酸性，有很高的通透性、蓄水力和通氣性。產於火山區，是由下層火山土生成，呈火山沙的形式。PH值呈酸性，有很高的通透性、蓄水力和通氣性。尤其適合嫌氣、忌濕、耐瘠薄的植物，如各類盆景、蘭花、高山花卉  </li></ul><h2 id="填充"><a href="#填充" class="headerlink" title="填充"></a>填充</h2><ul><li>白火山岩：又稱火山石，具有保水和透氣的特性，同時質地較硬，比赤玉土還硬，富含矽、鋁鐵、鉀、鈉、鈣、鎂、錳、磷等常量元素以及其它多種微量元素，適合用來種植多肉、國蘭等這類對透氣性要求較高的植物  </li></ul><ul><li>黑火山岩：又稱黑金砂，富士砂，是火山爆發後形成的多孔形石材。具有質地硬朗，良好的通氣排水性能，含多種火山有益元素，在種植上可用於植物混料、鋪面、墊底等方面。適合於仙肉、盆景、蘭花種植等品種  </li></ul><ul><li>椰糠：椰糠是椰子外殼纖維粉末，是加工後的椰子副產物或廢棄物。是從椰子外殼纖維加工過程中脫落下的一種純天然的有機質介質。經加工處理後的椰糠非常適合於培植植物。一、天然、純有機；二、對環境不會造成污染；三、保水性強；四、透氣性佳；五、植物成長最佳的有機介質， 純椰纖排水透氣很好，但夏季可能因此乾的太快，混合泥炭可調整平衡 </li></ul><ul><li>稻殼灰：稻殼灰又稱薰炭，是以稻殼為原料經薰制而成。質量輕，透氣性、保肥性好，吸附性強。PH值呈鹼性，含有植物所需的磷、鉀、鎂等元素。同時稻殼灰有很多的細孔，為微生物提供了良好的生存環境，很好地促進了土壤微生物的活化。含有一定的鉀肥，鹼性比較高，不適用於種植喜酸性土壤的花卉（例如茉莉、梔子），但喜歡偏鹼性土壤的植物就非常適合（例如鐵線蓮）  </li></ul><ul><li>珍珠岩：一種火山噴發的酸性熔岩，經急劇冷卻而成的玻璃質岩石，因其具有珍珠裂隙結構而得名。珍珠岩的本身性質穩定，持水保肥能力強，可用來做盆栽混合物和土壤改良與泥炭土依體積以1：1混合，是良好蘭花栽培介質，  但時間久了很容易崩解而失去功能（用手一捏就碎），  白火山岩比較好    </li></ul><ul><li>蛭 石：蛭石主要作用是增加土壤（介質）的通氣性和保水性。因其易碎，隨著使用時間的延長，容易使介質緻密而失去通氣性和保水性，所以粗的蛭石比細的使用時間長，且效果好。質地輕、保水透氣性好，蛭石效果不若珍珠石  </li></ul><ul><li>彩虹沙：彩虹沙有很好的透氣性，使用彩虹沙配土可以增強土壤的防澇能力，特別適用於大多數喜歡澆水的手賤黨。使用彩虹沙配土的土壤具有較好的持水力不易分解，變碎，不滋生蚊蟲，保肥能力強等特點  </li></ul><ul><li>粗河沙: 常與泥炭土、園林土等混合使用改善土塘結構，增大孔隙度，但久了容易板結    </li></ul><ul><li>鍛燒粘土: 適用於栽培期較長的盆栽介質  </li></ul><ul><li>植金石：植金石也是一種火山石，是火山爆發之後，釋放大量氣體、熱量，經特殊溫度而形成的多孔、體輕、能迅速吸取養分、保持水分的石頭，再經過高科技技術加工而成。因而其具備體輕、排水、保濕、透氣性俱佳的特性。不論單獨使用，或與其他基質混合使用，均可發揮極佳效果  </li></ul><ul><li>虹彩石：也稱彩虹石，是一種配方型介質，各個廠家生產的配方略有不同。一般來說，基本都包含：輕石、沸石、熔岩石、控釋肥等。在植物栽培過程中通常用作底石及鋪面使用  </li></ul><h2 id="蘭"><a href="#蘭" class="headerlink" title="蘭"></a>蘭</h2><ul><li>薇根: 含有2～3%的氮，可慢慢分解釋出  </li><li>蛇木: 排水迅速、通氣性高而保水性低  </li><li>樹皮: 分解時有大量的微生物參與，故氮肥的施用量要較多  </li><li>水苔: 吸水性、保水性特佳  </li><li>岩棉: 歐美盛行用岩棉做養液栽培種植番茄、小黃瓜、甜椒、玫瑰、非洲菊、東亞蘭及蝴蝶蘭等。台灣則應用於蝴蝶蘭及蕙蘭類  </li></ul><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><ol><li>粗椰纖鋪底  </li><li>舖底層土  </li><li>舖底肥  </li><li>舖滿土  </li><li>以原盆為模具做出植穴並敲緊土  </li><li>放入苗（注意方向性）  </li><li>澆「定根水」  </li><li>再補滿土  </li></ol><h2 id="配土"><a href="#配土" class="headerlink" title="配土"></a>配土</h2><p>適合多數植物：泥炭土+珍珠岩+赤玉土+稻殼灰\碎竹炭<br>適合播種育苗：泥炭土+稻殼灰+粗河沙<br>適合扦插育苗：泥炭土+蛭石<br>多肉植物配土比例：泥炭土+椰糠+珍珠岩+粗河沙  </p><h2 id="鋪面"><a href="#鋪面" class="headerlink" title="鋪面"></a>鋪面</h2><ul><li>松鱗: 質地輕、透氣、保水排水性能好、微酸性  </li><li>麥飯石：麥飯石是一種天然的矽酸鹽礦物，含有微量元素能夠穩定和提高、平衡土壤的物理機能，所以它比其它土壤改良劑更有優勢。正因為這樣，麥飯石成為廣大多肉植物愛好者的必備的配土介質。 </li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(16).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;不管種什麼東西介質(土壤，水，石頭等)都是第一要務，這篇就讓我們來探討這些介質吧&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://eric999j.github.io/categories/life/"/>
    
    
    <category term="植栽" scheme="https://eric999j.github.io/tags/Planting/"/>
    
  </entry>
  
  <entry>
    <title>Kygo, Justin Jesso - Stargazing ft. Justin Jesso</title>
    <link href="https://eric999j.github.io/life/stargazing/"/>
    <id>https://eric999j.github.io/life/stargazing/</id>
    <published>2020-11-28T04:00:00.000Z</published>
    <updated>2020-12-05T05:13:42.618Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(15).jpeg"></p><p>在健身房聽到不錯的歌，這篇當歌曲翻譯文章的開端應該很適合，MV意境知道這首歌是小男孩表達對父親的思念，想打造火箭追尋爸爸的蹤跡，不斷仰望星空，不斷追尋父愛，尤其是副歌那串斷斷續續的意境表達不斷追尋但找不回來的感受，有種當初聽到爐心融解或看命運石之門的感受（好啦我很宅）總之希望大家會喜歡。</p><a id="more"></a><iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/hEdvvTF5js4" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">情境為主超譯？！版歌詞</span><br><span class="line"></span><br><span class="line">[A]醫生跟家人的對話 </span><br><span class="line">You&#39;re saying it&#39;s hopeless </span><br><span class="line">你說沒希望了</span><br><span class="line">That I should hope less </span><br><span class="line">我也該這麼想</span><br><span class="line">Heaven can help us </span><br><span class="line">只有天堂能幫我們</span><br><span class="line">Well maybe she might </span><br><span class="line">恩... 也許是吧</span><br><span class="line">You say it&#39;s beyond us </span><br><span class="line">你說這超出你們處理範圍了</span><br><span class="line">What is beyond us </span><br><span class="line">是什麼超出了</span><br><span class="line">Let&#39;s see and decide </span><br><span class="line">看看再決定吧</span><br><span class="line"></span><br><span class="line">We&#39;ve been meteoric </span><br><span class="line">我們(醫生)曾是流星</span><br><span class="line">Even before this</span><br><span class="line">很久之前就是了</span><br><span class="line">It&#39;s burns half as long when it&#39;s </span><br><span class="line">當人們看到雙倍閃耀的同時</span><br><span class="line">Twice as bright</span><br><span class="line">有一半是燃燒著自己的(醫生也是很花心力救治)</span><br><span class="line"></span><br><span class="line">So if it&#39;s beyond us </span><br><span class="line">所以如果你們(醫生)說沒辦法了</span><br><span class="line">Then it&#39;s beyond us </span><br><span class="line">那應該就真的沒辦法了  </span><br><span class="line">Let&#39;s see and decide</span><br><span class="line">看著辦吧  </span><br><span class="line"></span><br><span class="line">[B]小男孩的話</span><br><span class="line">And I will still be here </span><br><span class="line">而我會一直在這</span><br><span class="line">stargazing </span><br><span class="line">仰望星空</span><br><span class="line">I still look up look up look up for love </span><br><span class="line">持續追尋爸爸的身影</span><br><span class="line">I will still be here </span><br><span class="line">一直持續的</span><br><span class="line">stargazing </span><br><span class="line">仰望星空</span><br><span class="line">I still look up look up look up for love </span><br><span class="line">持續追尋爸爸的身影</span><br><span class="line"></span><br><span class="line">[C]不斷的嘗試設計火箭</span><br><span class="line">Don&#39;t you, give up, for me</span><br><span class="line">Don&#39;t fall, don&#39;t give up, for love</span><br><span class="line"> </span><br><span class="line">[A]小男孩對醫生的心裡話</span><br><span class="line">I&#39;m trying to save us</span><br><span class="line">我試著把爸爸找回來</span><br><span class="line">You don&#39;t wanna save us</span><br><span class="line">你們(醫生)不也這樣想嗎？</span><br><span class="line">You blame human nature and </span><br><span class="line">你們抱怨病患都這樣</span><br><span class="line">Say it&#39;s unkind,</span><br><span class="line">對醫護人員不友善</span><br><span class="line">Let&#39;s make up our own minds </span><br><span class="line">算了，重新整理思緒</span><br><span class="line"></span><br><span class="line">We&#39;ve got our whole lives </span><br><span class="line">就算用盡一生，也要造出火箭</span><br><span class="line">Let&#39;s see and decide</span><br><span class="line">我一定會做出來的</span><br><span class="line">Decide</span><br><span class="line">你們看著吧</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">[B]不放棄的小男孩</span><br><span class="line">And I will still be here </span><br><span class="line">而我會一直在這</span><br><span class="line">stargazing </span><br><span class="line">仰望星空</span><br><span class="line">I still look up look up look up for love </span><br><span class="line">持續追尋爸爸的身影</span><br><span class="line">stars don&#39;t disappear  </span><br><span class="line">星星(小男孩)不放棄</span><br><span class="line">The keep blazing </span><br><span class="line">永遠懷抱希望</span><br><span class="line">Even When the night is over </span><br><span class="line">當造出來之後</span><br><span class="line">That&#39;s how I find the light</span><br><span class="line">一定會找到爸爸的</span><br><span class="line">That&#39;s how I find the light</span><br><span class="line">一定會的</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(15).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;在健身房聽到不錯的歌，這篇當歌曲翻譯文章的開端應該很適合，MV意境知道這首歌是小男孩表達對父親的思念，想打造火箭追尋爸爸的蹤跡，不斷仰望星空，不斷追尋父愛，尤其是副歌那串斷斷續續的意境表達不斷追尋但找不回來的感受，有種當初聽到爐心融解或看命運石之門的感受（好啦我很宅）總之希望大家會喜歡。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://eric999j.github.io/categories/life/"/>
    
    
    <category term="音樂" scheme="https://eric999j.github.io/tags/Music/"/>
    
  </entry>
  
  <entry>
    <title>米其林一星山海樓</title>
    <link href="https://eric999j.github.io/life/mountainAndSea/"/>
    <id>https://eric999j.github.io/life/mountainAndSea/</id>
    <published>2020-11-14T17:00:00.000Z</published>
    <updated>2020-11-14T16:44:36.139Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/7sn3H87.jpg" alt="Imgur"></p><a id="more"></a><p>明福台菜山海樓是間令人難忘的餐廳，裝潢復古華麗，餐點考究，連氣氛都有種走入老上海的感覺。</p><p>因為還有間明福循古台菜也是米其林，不過兩間風格不一樣，記得不要走錯了(我就是走錯那個)。</p><p>記得那天看到許多我沒見過的工夫菜，每道都有吉祥寓意，但我只記得服務生推什麼出來看起來都很好吃。</p><p><img src="https://i.imgur.com/kZaybwR.jpg" alt="Imgur"></p><p>第一道是這個拼盤，一開始就看到整條人參就覺得不得了，白斬雞軟嫩細緻，香腸也不死鹹，直接配蒜就很好吃。</p><p><img src="https://i.imgur.com/HJ59eRd.jpg" alt="Imgur"></p><p>再來是黃瓜鑲肉，看黃瓜切得條條分明，不只好看還很好入口。</p><p><img src="https://i.imgur.com/mhngBLR.jpg" alt="Imgur"><br>不久服務生推出半隻豬?! 正納悶該怎麼吃，不久就又被推回去了，原來只是讓我們拍照，只能說店家真的很對顧客胃口。</p><p><img src="https://i.imgur.com/CIkmpDR.jpg" alt="Imgur"><br><img src="https://i.imgur.com/9gtkT7p.jpg" alt="Imgur"><br><del>最後豬被碎屍萬段</del> 被分成北京烤鴨跟虎咬豬，我很喜歡那個卦包，外皮香甜鬆軟，裡面肉汁飽滿豪好吃啊。</p><p><img src="https://i.imgur.com/Ynv2Dp3.jpg" alt="Imgur"><br>這道不得了，是快失傳的五柳枝魚，聽說是台南古早辦桌菜，五柳是指金針、酸筍、黑木耳、紅蘿蔔和香菇切成絲，醬汁也是酸香爽口。</p><p><img src="https://i.imgur.com/1GiAqq7.jpg" alt="Imgur"><br>山珍海味不能沒有海參，富含膠質，可能還可以美容？  </p><p><img src="https://i.imgur.com/GKqHwKg.jpg" alt="Imgur"><br><img src="https://i.imgur.com/riO2ARP.jpg" alt="Imgur"><br>湯品部分第一道好像也很有名，不過我想不起來了，因為那時候身體還不是很好，餐廳又很冷，第二道剛好讓身體比較溫暖一些，雞湯味道也是很純厚的，下次有去另一家明福再跟大家說湯品味道的差異。</p><p><img src="https://i.imgur.com/WEKP2p2.jpg" alt="Imgur"><br>甜品是檸檬愛玉野薑花(白色那塊)，野薑花很香，跟檸檬搭配下肚之後剛好消除之前大魚大肉的油膩感，整體餐點搭配就像一場戲，演完之後還會有餘韻，跟人想再看一次的感動。</p><iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3614.8847201101776!2d121.52923065011451!3d25.037985983891833!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3442a968c6e42e47%3A0xb2c852ea68392c00!2z5bGx5rW35qiT!5e0!3m2!1szh-TW!2stw!4v1605368633302!5m2!1szh-TW!2stw" width="600" height="450" frameborder="0" style="border:0;" allowfullscreen="" aria-hidden="false" tabindex="0"></iframe><p>這是我第一次吃米其林餐廳，感謝主管，也感謝拍照片的同事。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/7sn3H87.jpg&quot; alt=&quot;Imgur&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://eric999j.github.io/categories/life/"/>
    
    
    <category term="飲食" scheme="https://eric999j.github.io/tags/Diet/"/>
    
  </entry>
  
  <entry>
    <title>種植守則</title>
    <link href="https://eric999j.github.io/life/plantingRule/"/>
    <id>https://eric999j.github.io/life/plantingRule/</id>
    <published>2020-11-14T15:00:00.000Z</published>
    <updated>2020-12-05T05:35:51.475Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(14).jpeg"></p><a id="more"></a><p><code>這篇是跟小耕園學習植栽心得。</code></p><h1 id="催芽"><a href="#催芽" class="headerlink" title="催芽"></a>催芽</h1><p>種子要先放衛生紙噴水，在溫暖陽光下發芽再土植，比較難出芽的植株可以先放溫水一晚再放衛生紙(溫湯浸種)，幼苗先用緩效肥促進生長   </p><h1 id="間拔"><a href="#間拔" class="headerlink" title="間拔"></a>間拔</h1><p>去弱留強，選莖粗的苗   </p><h1 id="生根"><a href="#生根" class="headerlink" title="生根"></a>生根</h1><p>香草類植株剪莖放水裡生根再土植，發根前植株要蓋著保濕  </p><h2 id="壓條"><a href="#壓條" class="headerlink" title="壓條"></a>壓條</h2><blockquote><p>把靠近土面的枝條壓入土中固定，等長根後再剪下來    </p></blockquote><h2 id="高壓條"><a href="#高壓條" class="headerlink" title="高壓條"></a>高壓條</h2><blockquote><p>枝條位置太高或太硬，無法直接壓入土中，就把土搬到枝條上包覆，是草&gt;本，通常直接包覆就好；如果是木本，通常會先做環狀剝皮促進發根  </p></blockquote><h1 id="澆水"><a href="#澆水" class="headerlink" title="澆水"></a>澆水</h1><p>『土乾再澆、每澆必濕』，『澆水要暴飲暴食、施肥要少量多餐』  </p><h2 id="太乾"><a href="#太乾" class="headerlink" title="太乾"></a>太乾</h2><blockquote><p>準備一個比花盆大的容器<br>放入花盆後緩緩加水，讓水由下往上滲入<br>如果花盆因為介質太乾太輕而浮起，先暫停等它吸水下沉，不要讓它「翻船」<br>加水到接近盆緣，但不要超過<br>等到盆內界值表面開始出現水滲出且全濕時即可將花盆拿出滴乾，通常 30 ~ 60分鐘即可回魂<br>如果回不來或要很常補水，枯掉的可以做堆肥  </p></blockquote><h1 id="摘葉"><a href="#摘葉" class="headerlink" title="摘葉"></a>摘葉</h1><p>要留幾片行光合作用  </p><h1 id="種植"><a href="#種植" class="headerlink" title="種植"></a>種植</h1><p>深不埋心 淺不漏根 </p><blockquote><p>生長期: 氮肥<br>開花前期: 高磷肥催花<br>結果期: 高磷鉀肥幫助果實發育  </p></blockquote><h1 id="土耕轉水耕"><a href="#土耕轉水耕" class="headerlink" title="土耕轉水耕"></a>土耕轉水耕</h1><p>採收時留下粗壯健康莖，剪頂端大概一個手指長的莖，拔除底葉水插生根移到土裡  </p><h1 id="水耕轉土耕"><a href="#水耕轉土耕" class="headerlink" title="水耕轉土耕"></a>水耕轉土耕</h1><p>匍匐莖移除葉子壓條加蓋，避免太陽直曬，生根剪除連接部份莖，移到大容器，再施點肥  </p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>植物不怕水，但怕悶濕<br>舊土曝曬混熟成堆肥  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(14).jpeg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://eric999j.github.io/categories/life/"/>
    
    
    <category term="植栽" scheme="https://eric999j.github.io/tags/Planting/"/>
    
  </entry>
  
  <entry>
    <title>1331. Rank Transform of an Array</title>
    <link href="https://eric999j.github.io/interview/1331/"/>
    <id>https://eric999j.github.io/interview/1331/</id>
    <published>2020-11-14T12:00:00.000Z</published>
    <updated>2020-11-14T12:37:08.882Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(11).jpeg"></p><p>Given an array of integers arr, replace each element with its rank.</p><p>The rank represents how large the element is. The rank has the following rules:</p><p>Rank is an integer starting from 1.<br>The larger the element, the larger the rank. If two elements are equal, their rank must be the same.<br>Rank should be as small as possible.</p><p>Example 1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: arr &#x3D; [40,10,20,30]</span><br><span class="line">Output: [4,1,2,3]</span><br><span class="line">Explanation: 40 is the largest element. 10 is the smallest. 20 is the second smallest. 30 is the third smallest.</span><br></pre></td></tr></table></figure><p>Example 2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: arr &#x3D; [100,100,100]</span><br><span class="line">Output: [1,1,1]</span><br><span class="line">Explanation: Same elements share the same rank.</span><br></pre></td></tr></table></figure><p>Example 3:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: arr &#x3D; [37,12,28,9,100,56,80,5,12]</span><br><span class="line">Output: [5,3,4,2,8,6,7,1,3]</span><br></pre></td></tr></table></figure><a id="more"></a><p>這篇要求將數字從小到大排序，從1開始編號，再依原始順序給編號，相同就給相同編號，學到dict使用。</p><iframe height="400px" width="100%" src="https://repl.it/@eric999j/1331-Rank-Transform-of-an-Array?lite=true" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(11).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Given an array of integers arr, replace each element with its rank.&lt;/p&gt;
&lt;p&gt;The rank represents how large the element is. The rank has the following rules:&lt;/p&gt;
&lt;p&gt;Rank is an integer starting from 1.&lt;br&gt;The larger the element, the larger the rank. If two elements are equal, their rank must be the same.&lt;br&gt;Rank should be as small as possible.&lt;/p&gt;
&lt;p&gt;Example 1:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: arr &amp;#x3D; [40,10,20,30]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [4,1,2,3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Explanation: 40 is the largest element. 10 is the smallest. 20 is the second smallest. 30 is the third smallest.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 2:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: arr &amp;#x3D; [100,100,100]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [1,1,1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Explanation: Same elements share the same rank.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 3:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: arr &amp;#x3D; [37,12,28,9,100,56,80,5,12]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [5,3,4,2,8,6,7,1,3]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="面試" scheme="https://eric999j.github.io/categories/interview/"/>
    
    
    <category term="力扣" scheme="https://eric999j.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>1470. Shuffle the Array Concatenation</title>
    <link href="https://eric999j.github.io/interview/1470/"/>
    <id>https://eric999j.github.io/interview/1470/</id>
    <published>2020-11-14T12:00:00.000Z</published>
    <updated>2020-11-14T12:59:14.041Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(13).jpeg"></p><p>Given the array nums consisting of 2n elements in the form [x1,x2,…,xn,y1,y2,…,yn].</p><p>Return the array in the form [x1,y1,x2,y2,…,xn,yn].</p><p>Example 1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: nums &#x3D; [2,5,1,3,4,7], n &#x3D; 3</span><br><span class="line">Output: [2,3,5,4,1,7] </span><br><span class="line">Explanation: Since x1&#x3D;2, x2&#x3D;5, x3&#x3D;1, y1&#x3D;3, y2&#x3D;4, y3&#x3D;7 then the answer is [2,3,5,4,1,7].</span><br></pre></td></tr></table></figure><p>Example 2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums &#x3D; [1,2,3,4,4,3,2,1], n &#x3D; 4</span><br><span class="line">Output: [1,4,2,3,3,2,4,1]</span><br></pre></td></tr></table></figure><p>Example 3:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums &#x3D; [1,1,2,2], n &#x3D; 2</span><br><span class="line">Output: [1,2,1,2]</span><br></pre></td></tr></table></figure><a id="more"></a><p>這篇要將指定位置之後的數值跟之前的數值穿插，很明顯會想到zip，學到itertools的用法</p><iframe height="400px" width="100%" src="https://repl.it/@eric999j/1470-Shuffle-the-Array?lite=true" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(13).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Given the array nums consisting of 2n elements in the form [x1,x2,…,xn,y1,y2,…,yn].&lt;/p&gt;
&lt;p&gt;Return the array in the form [x1,y1,x2,y2,…,xn,yn].&lt;/p&gt;
&lt;p&gt;Example 1:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: nums &amp;#x3D; [2,5,1,3,4,7], n &amp;#x3D; 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [2,3,5,4,1,7] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Explanation: Since x1&amp;#x3D;2, x2&amp;#x3D;5, x3&amp;#x3D;1, y1&amp;#x3D;3, y2&amp;#x3D;4, y3&amp;#x3D;7 then the answer is [2,3,5,4,1,7].&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 2:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: nums &amp;#x3D; [1,2,3,4,4,3,2,1], n &amp;#x3D; 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [1,4,2,3,3,2,4,1]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 3:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: nums &amp;#x3D; [1,1,2,2], n &amp;#x3D; 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [1,2,1,2]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="面試" scheme="https://eric999j.github.io/categories/interview/"/>
    
    
    <category term="力扣" scheme="https://eric999j.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>1640. Check Array Formation Through Concatenation</title>
    <link href="https://eric999j.github.io/interview/1640/"/>
    <id>https://eric999j.github.io/interview/1640/</id>
    <published>2020-11-14T12:00:00.000Z</published>
    <updated>2020-11-28T08:52:33.775Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(12).jpeg"></p><p>You are given an array of distinct integers arr and an array of integer arrays pieces, where the integers in pieces are distinct. Your goal is to form arr by concatenating the arrays in pieces in any order. However, you are not allowed to reorder the integers in each array pieces[i].</p><p>Return true if it is possible to form the array arr from pieces. Otherwise, return false.</p><p>Example 1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: arr &#x3D; [85], pieces &#x3D; [[85]]</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure><p>Example 2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: arr &#x3D; [15,88], pieces &#x3D; [[88],[15]]</span><br><span class="line">Output: true</span><br><span class="line">Explanation: Concatenate [15] then [88]</span><br></pre></td></tr></table></figure><p>Example 3:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: arr &#x3D; [49,18,16], pieces &#x3D; [[16,18,49]]</span><br><span class="line">Output: false</span><br><span class="line">Explanation: Even though the numbers match, we cannot reorder pieces[0].</span><br></pre></td></tr></table></figure><p>Example 4:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: arr &#x3D; [91,4,64,78], pieces &#x3D; [[78],[4,64],[91]]</span><br><span class="line">Output: true</span><br><span class="line">Explanation: Concatenate [91] then [4,64] then [78]</span><br></pre></td></tr></table></figure><p>Example 5:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: arr &#x3D; [1,3,5,7], pieces &#x3D; [[2,4,6,8]]</span><br><span class="line">Output: false</span><br></pre></td></tr></table></figure><a id="more"></a><p>這篇給一個陣列，如果陣列內元素移動可以得到跟輸入相同結果則回傳True，學到如何簡潔尋訪dict.</p><iframe height="400px" width="100%" src="https://repl.it/@eric999j/1640-Check-Array-Formation-Through-Concatenation?lite=true" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(12).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;You are given an array of distinct integers arr and an array of integer arrays pieces, where the integers in pieces are distinct. Your goal is to form arr by concatenating the arrays in pieces in any order. However, you are not allowed to reorder the integers in each array pieces[i].&lt;/p&gt;
&lt;p&gt;Return true if it is possible to form the array arr from pieces. Otherwise, return false.&lt;/p&gt;
&lt;p&gt;Example 1:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: arr &amp;#x3D; [85], pieces &amp;#x3D; [[85]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 2:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: arr &amp;#x3D; [15,88], pieces &amp;#x3D; [[88],[15]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Explanation: Concatenate [15] then [88]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 3:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: arr &amp;#x3D; [49,18,16], pieces &amp;#x3D; [[16,18,49]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Explanation: Even though the numbers match, we cannot reorder pieces[0].&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 4:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: arr &amp;#x3D; [91,4,64,78], pieces &amp;#x3D; [[78],[4,64],[91]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Explanation: Concatenate [91] then [4,64] then [78]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 5:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: arr &amp;#x3D; [1,3,5,7], pieces &amp;#x3D; [[2,4,6,8]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="面試" scheme="https://eric999j.github.io/categories/interview/"/>
    
    
    <category term="力扣" scheme="https://eric999j.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>788. Rotated Digits</title>
    <link href="https://eric999j.github.io/interview/788/"/>
    <id>https://eric999j.github.io/interview/788/</id>
    <published>2020-11-14T12:00:00.000Z</published>
    <updated>2020-11-14T12:05:48.395Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(9).jpeg"></p><p>X is a good number if after rotating each digit individually by 180 degrees, we get a valid number that is different from X.  Each digit must be rotated - we cannot choose to leave it alone.</p><p>A number is valid if each digit remains a digit after rotation. 0, 1, and 8 rotate to themselves; 2 and 5 rotate to each other (on this case they are rotated in a different direction, in other words 2 or 5 gets mirrored); 6 and 9 rotate to each other, and the rest of the numbers do not rotate to any other number and become invalid.</p><p>Now given a positive number N, how many numbers X from 1 to N are good?</p><p>Example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Input: 10</span><br><span class="line">Output: 4</span><br><span class="line">Explanation: </span><br><span class="line">There are four good numbers in the range [1, 10] : 2, 5, 6, 9.</span><br><span class="line">Note that 1 and 10 are not good numbers, since they remain unchanged after rotating.</span><br></pre></td></tr></table></figure><a id="more"></a><p>這篇再說給個數值，從1開始列會有幾個數值倒轉還會相同，他也給出2,5:6,9是倒轉相同的例子，那就把數值依序讀入，計算有範例的數值，學到要將數字依序讀入可以轉成字串。</p><iframe height="400px" width="100%" src="https://repl.it/@eric999j/788-Rotated-Digits?lite=true" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(9).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;X is a good number if after rotating each digit individually by 180 degrees, we get a valid number that is different from X.  Each digit must be rotated - we cannot choose to leave it alone.&lt;/p&gt;
&lt;p&gt;A number is valid if each digit remains a digit after rotation. 0, 1, and 8 rotate to themselves; 2 and 5 rotate to each other (on this case they are rotated in a different direction, in other words 2 or 5 gets mirrored); 6 and 9 rotate to each other, and the rest of the numbers do not rotate to any other number and become invalid.&lt;/p&gt;
&lt;p&gt;Now given a positive number N, how many numbers X from 1 to N are good?&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Explanation: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;There are four good numbers in the range [1, 10] : 2, 5, 6, 9.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Note that 1 and 10 are not good numbers, since they remain unchanged after rotating.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="面試" scheme="https://eric999j.github.io/categories/interview/"/>
    
    
    <category term="力扣" scheme="https://eric999j.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>929. Unique Email Addresses</title>
    <link href="https://eric999j.github.io/interview/929/"/>
    <id>https://eric999j.github.io/interview/929/</id>
    <published>2020-11-14T12:00:00.000Z</published>
    <updated>2020-11-14T12:19:13.447Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(10).jpeg"></p><p>Every email consists of a local name and a domain name, separated by the @ sign.</p><p>For example, in <a href="mailto:&#97;&#x6c;&#x69;&#99;&#101;&#64;&#108;&#101;&#x65;&#116;&#x63;&#x6f;&#x64;&#x65;&#x2e;&#x63;&#x6f;&#x6d;">&#97;&#x6c;&#x69;&#99;&#101;&#64;&#108;&#101;&#x65;&#116;&#x63;&#x6f;&#x64;&#x65;&#x2e;&#x63;&#x6f;&#x6d;</a>, alice is the local name, and leetcode.com is the domain name.</p><p>Besides lowercase letters, these emails may contain ‘.’s or ‘+’s.</p><p>If you add periods (‘.’) between some characters in the local name part of an email address, mail sent there will be forwarded to the same address without dots in the local name.  For example, “<a href="mailto:&#97;&#x6c;&#105;&#99;&#101;&#46;&#122;&#x40;&#x6c;&#101;&#x65;&#116;&#x63;&#111;&#x64;&#101;&#46;&#x63;&#111;&#x6d;">&#97;&#x6c;&#105;&#99;&#101;&#46;&#122;&#x40;&#x6c;&#101;&#x65;&#116;&#x63;&#111;&#x64;&#101;&#46;&#x63;&#111;&#x6d;</a>“ and “<a href="mailto:&#97;&#108;&#x69;&#x63;&#101;&#x7a;&#64;&#x6c;&#101;&#x65;&#x74;&#x63;&#111;&#x64;&#101;&#46;&#x63;&#x6f;&#x6d;">&#97;&#108;&#x69;&#x63;&#101;&#x7a;&#64;&#x6c;&#101;&#x65;&#x74;&#x63;&#111;&#x64;&#101;&#46;&#x63;&#x6f;&#x6d;</a>“ forward to the same email address.  (Note that this rule does not apply for domain names.)</p><p>If you add a plus (‘+’) in the local name, everything after the first plus sign will be ignored. This allows certain emails to be filtered, for example <a href="mailto:&#109;&#x2e;&#x79;&#43;&#110;&#97;&#109;&#101;&#x40;&#101;&#109;&#x61;&#105;&#108;&#46;&#99;&#111;&#109;">&#109;&#x2e;&#x79;&#43;&#110;&#97;&#109;&#101;&#x40;&#101;&#109;&#x61;&#105;&#108;&#46;&#99;&#111;&#109;</a> will be forwarded to <a href="mailto:&#109;&#x79;&#64;&#x65;&#109;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;">&#109;&#x79;&#64;&#x65;&#109;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;</a>.  (Again, this rule does not apply for domain names.)</p><p>It is possible to use both of these rules at the same time.</p><p>Given a list of emails, we send one email to each address in the list.  How many different addresses actually receive mails? </p><p>Example 1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: [&quot;test.email+alex@leetcode.com&quot;,&quot;test.e.mail+bob.cathy@leetcode.com&quot;,&quot;testemail+david@lee.tcode.com&quot;]</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: &quot;testemail@leetcode.com&quot; and &quot;testemail@lee.tcode.com&quot; actually receive mails</span><br></pre></td></tr></table></figure><a id="more"></a><p>這篇依照e-mail收件規則判斷有幾個不同信箱，規則是忽略. 跟刪去+之後的<br>，依照規則，學到字串操作。</p><iframe height="400px" width="100%" src="https://repl.it/@eric999j/929-Unique-Email-Addresses?lite=true" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(10).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Every email consists of a local name and a domain name, separated by the @ sign.&lt;/p&gt;
&lt;p&gt;For example, in &lt;a href=&quot;mailto:&amp;#97;&amp;#x6c;&amp;#x69;&amp;#99;&amp;#101;&amp;#64;&amp;#108;&amp;#101;&amp;#x65;&amp;#116;&amp;#x63;&amp;#x6f;&amp;#x64;&amp;#x65;&amp;#x2e;&amp;#x63;&amp;#x6f;&amp;#x6d;&quot;&gt;&amp;#97;&amp;#x6c;&amp;#x69;&amp;#99;&amp;#101;&amp;#64;&amp;#108;&amp;#101;&amp;#x65;&amp;#116;&amp;#x63;&amp;#x6f;&amp;#x64;&amp;#x65;&amp;#x2e;&amp;#x63;&amp;#x6f;&amp;#x6d;&lt;/a&gt;, alice is the local name, and leetcode.com is the domain name.&lt;/p&gt;
&lt;p&gt;Besides lowercase letters, these emails may contain ‘.’s or ‘+’s.&lt;/p&gt;
&lt;p&gt;If you add periods (‘.’) between some characters in the local name part of an email address, mail sent there will be forwarded to the same address without dots in the local name.  For example, “&lt;a href=&quot;mailto:&amp;#97;&amp;#x6c;&amp;#105;&amp;#99;&amp;#101;&amp;#46;&amp;#122;&amp;#x40;&amp;#x6c;&amp;#101;&amp;#x65;&amp;#116;&amp;#x63;&amp;#111;&amp;#x64;&amp;#101;&amp;#46;&amp;#x63;&amp;#111;&amp;#x6d;&quot;&gt;&amp;#97;&amp;#x6c;&amp;#105;&amp;#99;&amp;#101;&amp;#46;&amp;#122;&amp;#x40;&amp;#x6c;&amp;#101;&amp;#x65;&amp;#116;&amp;#x63;&amp;#111;&amp;#x64;&amp;#101;&amp;#46;&amp;#x63;&amp;#111;&amp;#x6d;&lt;/a&gt;“ and “&lt;a href=&quot;mailto:&amp;#97;&amp;#108;&amp;#x69;&amp;#x63;&amp;#101;&amp;#x7a;&amp;#64;&amp;#x6c;&amp;#101;&amp;#x65;&amp;#x74;&amp;#x63;&amp;#111;&amp;#x64;&amp;#101;&amp;#46;&amp;#x63;&amp;#x6f;&amp;#x6d;&quot;&gt;&amp;#97;&amp;#108;&amp;#x69;&amp;#x63;&amp;#101;&amp;#x7a;&amp;#64;&amp;#x6c;&amp;#101;&amp;#x65;&amp;#x74;&amp;#x63;&amp;#111;&amp;#x64;&amp;#101;&amp;#46;&amp;#x63;&amp;#x6f;&amp;#x6d;&lt;/a&gt;“ forward to the same email address.  (Note that this rule does not apply for domain names.)&lt;/p&gt;
&lt;p&gt;If you add a plus (‘+’) in the local name, everything after the first plus sign will be ignored. This allows certain emails to be filtered, for example &lt;a href=&quot;mailto:&amp;#109;&amp;#x2e;&amp;#x79;&amp;#43;&amp;#110;&amp;#97;&amp;#109;&amp;#101;&amp;#x40;&amp;#101;&amp;#109;&amp;#x61;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&quot;&gt;&amp;#109;&amp;#x2e;&amp;#x79;&amp;#43;&amp;#110;&amp;#97;&amp;#109;&amp;#101;&amp;#x40;&amp;#101;&amp;#109;&amp;#x61;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt; will be forwarded to &lt;a href=&quot;mailto:&amp;#109;&amp;#x79;&amp;#64;&amp;#x65;&amp;#109;&amp;#97;&amp;#x69;&amp;#x6c;&amp;#46;&amp;#99;&amp;#x6f;&amp;#x6d;&quot;&gt;&amp;#109;&amp;#x79;&amp;#64;&amp;#x65;&amp;#109;&amp;#97;&amp;#x69;&amp;#x6c;&amp;#46;&amp;#99;&amp;#x6f;&amp;#x6d;&lt;/a&gt;.  (Again, this rule does not apply for domain names.)&lt;/p&gt;
&lt;p&gt;It is possible to use both of these rules at the same time.&lt;/p&gt;
&lt;p&gt;Given a list of emails, we send one email to each address in the list.  How many different addresses actually receive mails? &lt;/p&gt;
&lt;p&gt;Example 1:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: [&amp;quot;test.email+alex@leetcode.com&amp;quot;,&amp;quot;test.e.mail+bob.cathy@leetcode.com&amp;quot;,&amp;quot;testemail+david@lee.tcode.com&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Explanation: &amp;quot;testemail@leetcode.com&amp;quot; and &amp;quot;testemail@lee.tcode.com&amp;quot; actually receive mails&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="面試" scheme="https://eric999j.github.io/categories/interview/"/>
    
    
    <category term="力扣" scheme="https://eric999j.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>1560. Most Visited Sector in a Circular Track</title>
    <link href="https://eric999j.github.io/interview/1560/"/>
    <id>https://eric999j.github.io/interview/1560/</id>
    <published>2020-11-08T07:00:00.000Z</published>
    <updated>2020-11-14T03:34:27.390Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(8).jpeg"></p><p>Given an integer n and an integer array rounds. We have a circular track which consists of n sectors labeled from 1 to n. A marathon will be held on this track, the marathon consists of m rounds. The ith round starts at sector rounds[i - 1] and ends at sector rounds[i]. For example, round 1 starts at sector rounds[0] and ends at sector rounds[1]</p><p>Return an array of the most visited sectors sorted in ascending order.</p><p>Notice that you circulate the track in ascending order of sector numbers in the counter-clockwise direction (See the first example).</p><p>Example 1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Input: n &#x3D; 4, rounds &#x3D; [1,3,1,2]</span><br><span class="line">Output: [1,2]</span><br><span class="line">Explanation: The marathon starts at sector 1. The order of the visited sectors is as follows:</span><br><span class="line">1 --&gt; 2 --&gt; 3 (end of round 1) --&gt; 4 --&gt; 1 (end of round 2) --&gt; 2 (end of round 3 and the marathon)</span><br><span class="line">We can see that both sectors 1 and 2 are visited twice and they are the most visited sectors. Sectors 3 and 4 are visited only once.</span><br></pre></td></tr></table></figure><p>Example 2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: n &#x3D; 2, rounds &#x3D; [2,1,2,1,2,1,2,1,2]</span><br><span class="line">Output: [2]</span><br></pre></td></tr></table></figure><p>Example 3:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: n &#x3D; 7, rounds &#x3D; [1,3,5,7]</span><br><span class="line">Output: [1,2,3,4,5,6,7]</span><br></pre></td></tr></table></figure><a id="more"></a><p>這篇我沒想出來，所以程式是外國網友的，題意是找跑幾圈後經過最多次的扇形區域，一圈分成四塊，一開始給幾個round(跑幾次)跟每次停留的區塊，解題思路是看起終點的扇形區域，起&gt;=終，起到終一定是多的，起&gt;終一定從1過一圈，再加上起點到過了幾圈，學到可以直接把range轉list。</p><iframe height="400px" width="100%" src="https://repl.it/@eric999j/1560-Most-Visited-Sector-in-a-Circular-Track?lite=true" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(8).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Given an integer n and an integer array rounds. We have a circular track which consists of n sectors labeled from 1 to n. A marathon will be held on this track, the marathon consists of m rounds. The ith round starts at sector rounds[i - 1] and ends at sector rounds[i]. For example, round 1 starts at sector rounds[0] and ends at sector rounds[1]&lt;/p&gt;
&lt;p&gt;Return an array of the most visited sectors sorted in ascending order.&lt;/p&gt;
&lt;p&gt;Notice that you circulate the track in ascending order of sector numbers in the counter-clockwise direction (See the first example).&lt;/p&gt;
&lt;p&gt;Example 1:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: n &amp;#x3D; 4, rounds &amp;#x3D; [1,3,1,2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [1,2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Explanation: The marathon starts at sector 1. The order of the visited sectors is as follows:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 --&amp;gt; 2 --&amp;gt; 3 (end of round 1) --&amp;gt; 4 --&amp;gt; 1 (end of round 2) --&amp;gt; 2 (end of round 3 and the marathon)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;We can see that both sectors 1 and 2 are visited twice and they are the most visited sectors. Sectors 3 and 4 are visited only once.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 2:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: n &amp;#x3D; 2, rounds &amp;#x3D; [2,1,2,1,2,1,2,1,2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [2]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 3:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: n &amp;#x3D; 7, rounds &amp;#x3D; [1,3,5,7]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [1,2,3,4,5,6,7]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="面試" scheme="https://eric999j.github.io/categories/interview/"/>
    
    
    <category term="力扣" scheme="https://eric999j.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>閱讀性格的DISA</title>
    <link href="https://eric999j.github.io/manager/disa/"/>
    <id>https://eric999j.github.io/manager/disa/</id>
    <published>2020-11-08T06:20:00.000Z</published>
    <updated>2020-11-08T06:45:53.479Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(7).jpeg"></p><p>GTD探討怎麼做(How)，但過程中會牽扯到很多人，尤其是我們的上司，DISA是(Who)。</p><a id="more"></a><p>源自於美國心理學家威廉．馬斯頓（William Marston）的 DISC 行為理論，埃里克森延伸成 DISA 性格學。</p><h1 id="紅色——支配型（Dominance）獅"><a href="#紅色——支配型（Dominance）獅" class="headerlink" title="紅色——支配型（Dominance）獅"></a>紅色——支配型（Dominance）獅</h1><p>外向、屬於行動派積極主動解決問題，注重效率，結果和目標<br>取得他的信任  </p><h1 id="黃色——鼓舞型（Inspiration）鳳凰"><a href="#黃色——鼓舞型（Inspiration）鳳凰" class="headerlink" title="黃色——鼓舞型（Inspiration）鳳凰"></a>黃色——鼓舞型（Inspiration）鳳凰</h1><p>外向、屬於行動派樂觀、有創意，注重人際關係，做事效率高，但厭倦細節<br>成為他唯一朋友  </p><h1 id="綠色——穩定型（Stability）無尾熊"><a href="#綠色——穩定型（Stability）無尾熊" class="headerlink" title="綠色——穩定型（Stability）無尾熊"></a>綠色——穩定型（Stability）無尾熊</h1><p>保守和內向，工作上以團隊氣氛融洽、沒有任何衝突為優先考量；喜歡幫助別人，是很好的聽眾<br>製造衝突他就會因怕跟你吵而被說服  </p><h1 id="藍色——分析型（Analytical-ability）貓頭鷹"><a href="#藍色——分析型（Analytical-ability）貓頭鷹" class="headerlink" title="藍色——分析型（Analytical ability）貓頭鷹"></a>藍色——分析型（Analytical ability）貓頭鷹</h1><p>內向和任務導向，喜歡事情井然有序，偏好單打獨鬥；重視品質，對任何細節都非常要求<br>明確說出你不想要的原因  </p><h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><p>DI外向幫對方想，SA內向替自己想，可以用作向上管理。    </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(7).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;GTD探討怎麼做(How)，但過程中會牽扯到很多人，尤其是我們的上司，DISA是(Who)。&lt;/p&gt;</summary>
    
    
    
    <category term="管理" scheme="https://eric999j.github.io/categories/manager/"/>
    
    
    <category term="文書" scheme="https://eric999j.github.io/tags/Instrument/"/>
    
  </entry>
  
  <entry>
    <title>閱讀高效能的待辦事項管理法</title>
    <link href="https://eric999j.github.io/manager/gtd/"/>
    <id>https://eric999j.github.io/manager/gtd/</id>
    <published>2020-11-08T06:10:00.000Z</published>
    <updated>2020-11-08T06:45:31.237Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(6).jpeg"></p><p>Getting Things Done(GTD)在使用OKR確認好需要做什麼(What)之後，探討怎麼做(How)</p><a id="more"></a><h1 id="事情分類處理流程"><a href="#事情分類處理流程" class="headerlink" title="事情分類處理流程"></a>事情分類處理流程</h1><h2 id="暫時不需行動"><a href="#暫時不需行動" class="headerlink" title="暫時不需行動"></a>暫時不需行動</h2><p>1.參考資料In-basket(telegram記錄下來，或google calendar事件)<br>2.有空再做的事(telegram紀錄下來的事明天再分類整理)<br>3.垃圾(沒意義資訊或整理完資訊直接刪除)  </p><h2 id="需要行動"><a href="#需要行動" class="headerlink" title="需要行動"></a>需要行動</h2><p>1.project<br>定目標定期追蹤<br>2.task<br>耗時短(2分鐘內)立即完成，長的交給適合的人做(快又不出錯)，如果特定時間要做先寫入google calendar   </p><h1 id="持續追蹤"><a href="#持續追蹤" class="headerlink" title="持續追蹤"></a>持續追蹤</h1><p>每天review清理In-basket<br>1.工作量太大<br>2.有些事做不完<br>3.忘了處理<br>評估是否超出能力範圍(斷捨離，尋求協助)確實做GTD </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(6).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Getting Things Done(GTD)在使用OKR確認好需要做什麼(What)之後，探討怎麼做(How)&lt;/p&gt;</summary>
    
    
    
    <category term="管理" scheme="https://eric999j.github.io/categories/manager/"/>
    
    
    <category term="文書" scheme="https://eric999j.github.io/tags/Instrument/"/>
    
  </entry>
  
  <entry>
    <title>閱讀OKR做最重要的事</title>
    <link href="https://eric999j.github.io/manager/okr/"/>
    <id>https://eric999j.github.io/manager/okr/</id>
    <published>2020-11-08T06:00:00.000Z</published>
    <updated>2020-11-08T06:23:52.908Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(5).jpeg"></p><p>Objectives and Key Results(OKR)是Google績效考核的一環，我們熟知的Key Performance Indicator(KPI)是上對下，OKR主張讓員工自動自發，這篇文章主要在介紹各種績效標準，這也是我回公司讀的第一本書。</p><a id="more"></a><h1 id="KPI-Key-Performance-Indicator-關鍵績效指標"><a href="#KPI-Key-Performance-Indicator-關鍵績效指標" class="headerlink" title="KPI(Key Performance Indicator)關鍵績效指標"></a>KPI(Key Performance Indicator)關鍵績效指標</h1><p>代表的是你與團隊的「完成度」，就像「里程表」<br>KPI用來判斷還需要多久才能完成<br>好的KPI應該具備三樣特質：可衡量、普遍性、前瞻性  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1.可衡量：必須是有意義的評斷標準。如之前提到的「到訪率vs購買率」，或「時間vs利潤」，雖然都是量化指標，但意義與貢獻度完全不同。同樣的，「提案數vs達成數」，雖然都是量化目標，但哪個才是較優的KPI？你心裡應該有答案。</span><br><span class="line"></span><br><span class="line">2.普遍性：這些指標不只能用在一個員工，還能用在其他員工上，就算他們個性、做事方法完全不同，這樣的KPI才是好的KPI。</span><br><span class="line"></span><br><span class="line">例如被分配到難纏客戶的員工，談成一件案子的難度是不是比較高？而本來就已經談的差不多的客戶，接手的人是不是就比較容易？如果兩個人都以談成交易案件數量當成KPI，是不是不太公平？</span><br><span class="line"></span><br><span class="line">3.前瞻性：KPI不應該只侷限在「過去到現在」完成了什麼，這是落後指標；而應該是「現在到未來」應該做到什麼，這才是領先指標。而且KPI不應該是年初訂下後，就一成不變地用到年底。如果6月就發現既定目標不可能達成，卻一直堅持用到12月，每個員工年底的成績當然都不好看。管理的目的在激發鬥志，而非創造挫折感或處罰。</span><br><span class="line"></span><br><span class="line">KPI不能缺少的要素</span><br><span class="line">首先，當然是可以量化的表現。與其談公司要成為業界第一，不如談做到那些指標可以成為第一。這包括以下5個面向：</span><br><span class="line"></span><br><span class="line">1.對比：包括自己的歷史紀錄，與對手（企業）</span><br><span class="line"></span><br><span class="line">2.改善：面對問題如何解決，在現有達成率上更進一步。</span><br><span class="line"></span><br><span class="line">3.提醒：何種狀況下，例如1個月或3個月，達成率不到50%，就該提醒成員，或是每半年一次總檢討。</span><br><span class="line"></span><br><span class="line">4.分析：為何A方案目前的達成率低於預期，原因何在？假設如果改成Ｂ方案，會不會更好？</span><br><span class="line"></span><br><span class="line">5.風險：掌握以往或到目前為止所碰到的變數，為未來可能發生的風險制定應變計畫。</span><br></pre></td></tr></table></figure><h1 id="OKR-Objectives-and-Key-Results-目標與關鍵成果"><a href="#OKR-Objectives-and-Key-Results-目標與關鍵成果" class="headerlink" title="OKR(Objectives and Key Results)目標與關鍵成果"></a>OKR(Objectives and Key Results)目標與關鍵成果</h1><p>代表的是你與團隊的「方向」，就像「指南針」<br>OKR用來找到對的方向<br>支持工作的行動，最高層級與公司使命，核心價值相關，例行性事務不需要OKRs<br>1.專注投入優先事項，短中長OKR<br>2.將目標跟團隊結合<br>3.持續追蹤<br>4.激發潛能，突破成就<br>1個主目標，1-3,最多5個子目標，子目標可能是他人的主目標，串起一個樹狀結構，大家朝同個主目標前進，子目標有0-0.3（未達成）0.4-0.6（部分達成）0.7-1(達成）,目標可視情況改進替換，找最有傑出績效目標，未達成目標也要想遇到什麼障礙，該怎麼改進，目標需具體實際，公開透明，有挑戰性，知道該如何與何時達成，關鍵結果需額外關注可升為目標，Google將OKR分決心達成與艱難達成2種，追求艱難目標就算沒達成也會得到巨大成就  </p><h2 id="季初OKR"><a href="#季初OKR" class="headerlink" title="季初OKR"></a>季初OKR</h2><p>其中的戴明循環PDCA：<br>Plan 計劃<br>Do 執行<br>Check 成效檢查<br>Act 制定下次行動    </p><h2 id="季末OKR"><a href="#季末OKR" class="headerlink" title="季末OKR"></a>季末OKR</h2><p>由上到下制定OKR，OKR裡一個目標：<br>O（目標）: 打造業內最好的產品<br>KR1（關鍵結果 1): 可用性提高 99.5%<br>KR2（關鍵結果 2): API 響應時間 500 ms<br>KR3（關鍵結果 3): 0 安全事故<br>制訂時最好以SMART原則確保目標可行  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">OKR應用時的一般原則</span><br><span class="line">1.明確（significant）：專注於達成特定結果。</span><br><span class="line"></span><br><span class="line">2.具體（concrete）：達成結果的方法必須具體可行。</span><br><span class="line"></span><br><span class="line">3.行動導向（action-oriented）：能夠化成具體行動，且可被衡量。</span><br><span class="line"></span><br><span class="line">4.願景（inspirational）：讓團隊能達成看起來有難度卻並非不可能之事。</span><br><span class="line"></span><br><span class="line">OKR的陷阱與限制</span><br><span class="line">不少企業都證明OKR有效，但並非一把OKR搬出來就萬事OK。可能的問題包括：</span><br><span class="line"></span><br><span class="line">1.目標太過遠大，以致根本無法達成：確實，OKR的目標必須能夠激勵人心，但千萬要腳踏實地，類似營業額年成長500％之類的目標，雖然不是完全不可能，但實際達成機率太低。</span><br><span class="line"></span><br><span class="line">2.目標太多：根據統計，一般企業年度的OKR計畫最好限制在4至6個，超過這個數量就有可能難以達到。</span><br><span class="line"></span><br><span class="line">3.關鍵結果不夠明確：類似銷售額增加、瀏覽率提高，雖然聽起來不錯，但增加多少、提高多少，實際數字不夠明確才是問題。</span><br><span class="line"></span><br><span class="line">4.資源配合不上：這種現象經常出現在缺乏溝通時，如果第一線猛衝，後勤卻配合不上，拿到的戰果也很可能拱手送人。</span><br></pre></td></tr></table></figure><h1 id="CFR-Conversations-Feedback-and-Recognitions"><a href="#CFR-Conversations-Feedback-and-Recognitions" class="headerlink" title="CFR(Conversations, Feedback and Recognitions)"></a>CFR(Conversations, Feedback and Recognitions)</h1><p>相較OKR著重在人的情感<br>對話，回饋，讚揚<br>人際支援，善意表現  </p><p>績效對談<br>員工<br>是否達成目標？知道各方面機會？工作跟主管目標一致？可以為主管提供什麼回饋？<br>主管<br>員工目標跟責任？實際表現？不佳如何改正？出色如何維持？投入工作情況？是否知道自己該關注的？<br>客戶至上，從連結創作價值，不必自己擁有內容，提供管道，從中牟利，社群創造的小眾經濟可能比主流大，公開，透明，創新<br>OKR 如果3.0以下表示不佳，連續幾季3.7以上通常會被升遷 </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(5).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Objectives and Key Results(OKR)是Google績效考核的一環，我們熟知的Key Performance Indicator(KPI)是上對下，OKR主張讓員工自動自發，這篇文章主要在介紹各種績效標準，這也是我回公司讀的第一本書。&lt;/p&gt;</summary>
    
    
    
    <category term="管理" scheme="https://eric999j.github.io/categories/manager/"/>
    
    
    <category term="文書" scheme="https://eric999j.github.io/tags/Instrument/"/>
    
  </entry>
  
  <entry>
    <title>1317. Convert Integer to the Sum of Two No-Zero Integers</title>
    <link href="https://eric999j.github.io/interview/1317/"/>
    <id>https://eric999j.github.io/interview/1317/</id>
    <published>2020-11-07T14:00:00.000Z</published>
    <updated>2020-11-14T03:31:50.166Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(4).jpeg"></p><p>Given an integer n. No-Zero integer is a positive integer which doesn’t contain any 0 in its decimal representation.</p><p>Return a list of two integers [A, B] where:</p><p>A and B are No-Zero integers.<br>A + B = n<br>It’s guarateed that there is at least one valid solution. If there are many valid solutions you can return any of them.</p><p>Example 1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: n &#x3D; 2</span><br><span class="line">Output: [1,1]</span><br><span class="line">Explanation: A &#x3D; 1, B &#x3D; 1. A + B &#x3D; n and both A and B don&#39;t contain any 0 in their decimal representation.</span><br></pre></td></tr></table></figure><p>Example 2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: n &#x3D; 11</span><br><span class="line">Output: [2,9]</span><br></pre></td></tr></table></figure><p>Example 3:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: n &#x3D; 10000</span><br><span class="line">Output: [1,9999]</span><br></pre></td></tr></table></figure><p>Example 4:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: n &#x3D; 69</span><br><span class="line">Output: [1,68]</span><br></pre></td></tr></table></figure><p>Example 5:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: n &#x3D; 1010</span><br><span class="line">Output: [11,999]</span><br></pre></td></tr></table></figure><a id="more"></a><p>要把一個整數拆成2整數和，沒有限制怎麼拆(那不是拆1出來就好)直接跑也過了，但總覺得怪，在看其他人怎麼做之後選了比較好懂的做法，簡單來說就是找可以拆的數字，再格式化輸出，學到了格式化輸出。</p><iframe height="400px" width="100%" src="https://repl.it/@eric999j/1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers?lite=true" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(4).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Given an integer n. No-Zero integer is a positive integer which doesn’t contain any 0 in its decimal representation.&lt;/p&gt;
&lt;p&gt;Return a list of two integers [A, B] where:&lt;/p&gt;
&lt;p&gt;A and B are No-Zero integers.&lt;br&gt;A + B = n&lt;br&gt;It’s guarateed that there is at least one valid solution. If there are many valid solutions you can return any of them.&lt;/p&gt;
&lt;p&gt;Example 1:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: n &amp;#x3D; 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [1,1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Explanation: A &amp;#x3D; 1, B &amp;#x3D; 1. A + B &amp;#x3D; n and both A and B don&amp;#39;t contain any 0 in their decimal representation.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 2:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: n &amp;#x3D; 11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [2,9]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 3:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: n &amp;#x3D; 10000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [1,9999]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 4:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: n &amp;#x3D; 69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [1,68]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 5:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: n &amp;#x3D; 1010&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [11,999]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="面試" scheme="https://eric999j.github.io/categories/interview/"/>
    
    
    <category term="力扣" scheme="https://eric999j.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>1480. Running Sum of 1d Array</title>
    <link href="https://eric999j.github.io/interview/1480/"/>
    <id>https://eric999j.github.io/interview/1480/</id>
    <published>2020-11-07T13:00:00.000Z</published>
    <updated>2020-11-14T03:26:50.668Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(7).jpeg"></p><p>Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]…nums[i]).</p><p>Return the running sum of nums.</p><p>Example 1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: nums &#x3D; [1,2,3,4]</span><br><span class="line">Output: [1,3,6,10]</span><br><span class="line">Explanation: Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4].</span><br></pre></td></tr></table></figure><p>Example 2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: nums &#x3D; [1,1,1,1,1]</span><br><span class="line">Output: [1,2,3,4,5]</span><br><span class="line">Explanation: Running sum is obtained as follows: [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1].</span><br></pre></td></tr></table></figure><p>Example 3:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums &#x3D; [3,1,2,10,1]</span><br><span class="line">Output: [3,4,6,16,17]</span><br></pre></td></tr></table></figure><a id="more"></a><p>這篇要求array值某位值一直不斷加總前幾位的值，那就給個迴圈，尋訪過程不斷加前一位，學到迴圈用range(len())取得計數。</p><iframe height="400px" width="100%" src="https://repl.it/@eric999j/1480-Running-Sum-of-1d-Array?lite=true" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eric999j/Clutter/master/blog/japan(7).jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]…nums[i]).&lt;/p&gt;
&lt;p&gt;Return the running sum of nums.&lt;/p&gt;
&lt;p&gt;Example 1:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: nums &amp;#x3D; [1,2,3,4]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [1,3,6,10]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Explanation: Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4].&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 2:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: nums &amp;#x3D; [1,1,1,1,1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [1,2,3,4,5]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Explanation: Running sum is obtained as follows: [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1].&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Example 3:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Input: nums &amp;#x3D; [3,1,2,10,1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Output: [3,4,6,16,17]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="面試" scheme="https://eric999j.github.io/categories/interview/"/>
    
    
    <category term="力扣" scheme="https://eric999j.github.io/tags/LeetCode/"/>
    
  </entry>
  
</feed>
